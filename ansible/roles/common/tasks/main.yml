---
- import_tasks: include-vars.yml

- name: Install Software and Add User
  block:
    #- name: Install the gpg key for nodejs LTS
    #  apt_key:
    #    url: "https://deb.nodesource.com/gpgkey/nodesource.gpg.key"
    #    state: present
    #- name: add nodejs repository
    #  apt_repository:
    #    repo: "deb https://deb.nodesource.com/node_13.x focal main"
    #    state: "present"
    #- name: Install the gpg key for Docker Repo
    #  apt_key:
    #    url: "https://download.docker.com/linux/ubuntu/gpg"
    #    state: present
    #- name: Add Docker Repository
    #  apt_repository:
    #    repo: "deb https://download.docker.com/linux/ubuntu focal stable"
    #    state: "present"
    - name: Update and upgrade packages
      package: { upgrade: "yes", update_cache: "yes" }
    - name: Install backend modules
      package:
        name:
          #- nodejs
          #- git
          #- python2
          - nginx
          - python3
          - "{{ python3_pip }}"
          - docker
    - name: Install Docker Modules for Python
      pip:
        name:
          - docker
          - docker-compose
    - name: Add voty user
      user: { name: voty }
    - name: Create Backend Root Directory
      file: { path: "{{app_dir}}", owner: voty, state: directory }
    - name: Enable Docker Service
      service: { name: docker, enabled: yes, state: started }
  become: yes
  become_method: sudo
- name: Configure Webserver and Run Services
  block:
    - name: Configure nginx (needed to set server_names_hash_bucket_size in Alpine)
      template: { src: nginx.conf, dest: "/etc/nginx/nginx.conf" }
    - name: Configure votyapp.ch
      template: { src: voty.cfg.j2, dest: "{{nginx_sites}}/voty.conf" }
      notify: restart nginx
    - name: Create Systemd Service Configuration
      template:
        { src: "{{service_template}}", dest: "{{service_dest}}", mode: 0755 }
      notify: reload systemd
    - name: Flush Handlers
      meta: flush_handlers

  become: yes
  become_method: sudo
