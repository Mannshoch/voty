### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Attachment {
  createdAt: DateTime!
  file: String!
  id: String!
  updatedAt: DateTime!
  user: User!
}

input AttachmentCreateManyWithoutBallotInput {
  connect: [AttachmentWhereUniqueInput!]
  create: [AttachmentCreateWithoutBallotInput!]
}

input AttachmentCreateManyWithoutThreadInput {
  connect: [AttachmentWhereUniqueInput!]
  create: [AttachmentCreateWithoutThreadInput!]
}

input AttachmentCreateManyWithoutUserInput {
  connect: [AttachmentWhereUniqueInput!]
  create: [AttachmentCreateWithoutUserInput!]
}

input AttachmentCreateWithoutBallotInput {
  createdAt: DateTime
  file: String!
  id: String
  thread: ThreadCreateOneWithoutAttachmentsInput
  title: String
  updatedAt: DateTime
  user: UserCreateOneWithoutAttachmentsInput!
}

input AttachmentCreateWithoutThreadInput {
  ballot: BallotCreateOneWithoutAttachmentsInput
  createdAt: DateTime
  file: String!
  id: String
  title: String
  updatedAt: DateTime
  user: UserCreateOneWithoutAttachmentsInput!
}

input AttachmentCreateWithoutUserInput {
  ballot: BallotCreateOneWithoutAttachmentsInput
  createdAt: DateTime
  file: String!
  id: String
  thread: ThreadCreateOneWithoutAttachmentsInput
  title: String
  updatedAt: DateTime
}

input AttachmentListRelationFilter {
  every: AttachmentWhereInput
  none: AttachmentWhereInput
  some: AttachmentWhereInput
}

input AttachmentScalarWhereInput {
  AND: [AttachmentScalarWhereInput!]
  ballotId: StringNullableFilter
  createdAt: DateTimeFilter
  file: StringFilter
  id: StringFilter
  NOT: [AttachmentScalarWhereInput!]
  OR: [AttachmentScalarWhereInput!]
  threadId: StringNullableFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  userId: StringFilter
}

input AttachmentUpdateManyDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  file: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input AttachmentUpdateManyWithoutBallotInput {
  connect: [AttachmentWhereUniqueInput!]
  create: [AttachmentCreateWithoutBallotInput!]
  delete: [AttachmentWhereUniqueInput!]
  deleteMany: [AttachmentScalarWhereInput!]
  disconnect: [AttachmentWhereUniqueInput!]
  set: [AttachmentWhereUniqueInput!]
  update: [AttachmentUpdateWithWhereUniqueWithoutBallotInput!]
  updateMany: [AttachmentUpdateManyWithWhereNestedInput!]
  upsert: [AttachmentUpsertWithWhereUniqueWithoutBallotInput!]
}

input AttachmentUpdateManyWithoutThreadInput {
  connect: [AttachmentWhereUniqueInput!]
  create: [AttachmentCreateWithoutThreadInput!]
  delete: [AttachmentWhereUniqueInput!]
  deleteMany: [AttachmentScalarWhereInput!]
  disconnect: [AttachmentWhereUniqueInput!]
  set: [AttachmentWhereUniqueInput!]
  update: [AttachmentUpdateWithWhereUniqueWithoutThreadInput!]
  updateMany: [AttachmentUpdateManyWithWhereNestedInput!]
  upsert: [AttachmentUpsertWithWhereUniqueWithoutThreadInput!]
}

input AttachmentUpdateManyWithoutUserInput {
  connect: [AttachmentWhereUniqueInput!]
  create: [AttachmentCreateWithoutUserInput!]
  delete: [AttachmentWhereUniqueInput!]
  deleteMany: [AttachmentScalarWhereInput!]
  disconnect: [AttachmentWhereUniqueInput!]
  set: [AttachmentWhereUniqueInput!]
  update: [AttachmentUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [AttachmentUpdateManyWithWhereNestedInput!]
  upsert: [AttachmentUpsertWithWhereUniqueWithoutUserInput!]
}

input AttachmentUpdateManyWithWhereNestedInput {
  data: AttachmentUpdateManyDataInput!
  where: AttachmentScalarWhereInput!
}

input AttachmentUpdateWithoutBallotDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  file: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  thread: ThreadUpdateOneWithoutAttachmentsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutAttachmentsInput
}

input AttachmentUpdateWithoutThreadDataInput {
  ballot: BallotUpdateOneWithoutAttachmentsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  file: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutAttachmentsInput
}

input AttachmentUpdateWithoutUserDataInput {
  ballot: BallotUpdateOneWithoutAttachmentsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  file: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  thread: ThreadUpdateOneWithoutAttachmentsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input AttachmentUpdateWithWhereUniqueWithoutBallotInput {
  data: AttachmentUpdateWithoutBallotDataInput!
  where: AttachmentWhereUniqueInput!
}

input AttachmentUpdateWithWhereUniqueWithoutThreadInput {
  data: AttachmentUpdateWithoutThreadDataInput!
  where: AttachmentWhereUniqueInput!
}

input AttachmentUpdateWithWhereUniqueWithoutUserInput {
  data: AttachmentUpdateWithoutUserDataInput!
  where: AttachmentWhereUniqueInput!
}

input AttachmentUpsertWithWhereUniqueWithoutBallotInput {
  create: AttachmentCreateWithoutBallotInput!
  update: AttachmentUpdateWithoutBallotDataInput!
  where: AttachmentWhereUniqueInput!
}

input AttachmentUpsertWithWhereUniqueWithoutThreadInput {
  create: AttachmentCreateWithoutThreadInput!
  update: AttachmentUpdateWithoutThreadDataInput!
  where: AttachmentWhereUniqueInput!
}

input AttachmentUpsertWithWhereUniqueWithoutUserInput {
  create: AttachmentCreateWithoutUserInput!
  update: AttachmentUpdateWithoutUserDataInput!
  where: AttachmentWhereUniqueInput!
}

input AttachmentWhereInput {
  AND: [AttachmentWhereInput!]
  ballot: BallotWhereInput
  ballotId: StringNullableFilter
  createdAt: DateTimeFilter
  file: StringFilter
  id: StringFilter
  NOT: [AttachmentWhereInput!]
  OR: [AttachmentWhereInput!]
  thread: ThreadWhereInput
  threadId: StringNullableFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  user: UserWhereInput
  userId: StringFilter
}

input AttachmentWhereUniqueInput {
  id: String
}

type Ballot {
  body: String!
  canton: String
  canVote: Boolean
  description: String!
  end: DateTime!
  hasVoted: Boolean
  id: String!
  scope: BallotScope!
  start: DateTime!
  title: String!
}

input BallotCreateManyWithoutCreatorInput {
  connect: [BallotWhereUniqueInput!]
  create: [BallotCreateWithoutCreatorInput!]
}

input BallotCreateManyWithoutSchoolInput {
  connect: [BallotWhereUniqueInput!]
  create: [BallotCreateWithoutSchoolInput!]
}

input BallotCreateManyWithoutTeamInput {
  connect: [BallotWhereUniqueInput!]
  create: [BallotCreateWithoutTeamInput!]
}

input BallotCreateOneWithoutAttachmentsInput {
  connect: BallotWhereUniqueInput
  create: BallotCreateWithoutAttachmentsInput
}

input BallotCreateOneWithoutBallotRunsInput {
  connect: BallotWhereUniqueInput
  create: BallotCreateWithoutBallotRunsInput
}

input BallotCreateOneWithoutThreadInput {
  connect: BallotWhereUniqueInput
  create: BallotCreateWithoutThreadInput
}

input BallotCreateOneWithoutVotedInput {
  connect: BallotWhereUniqueInput
  create: BallotCreateWithoutVotedInput
}

input BallotCreateOneWithoutVotesInput {
  connect: BallotWhereUniqueInput
  create: BallotCreateWithoutVotesInput
}

input BallotCreateWithoutAttachmentsInput {
  BallotRuns: BallotRunCreateManyWithoutBallotInput
  body: String!
  canton: String
  createdAt: DateTime
  creator: UserCreateOneWithoutBallotsInput
  description: String!
  end: DateTime!
  id: String
  options: OptionCreateManyWithoutBallotInput
  school: SchoolCreateOneWithoutBallotsInput
  scope: BallotScope
  start: DateTime!
  team: TeamCreateOneWithoutBallotsInput
  thread: ThreadCreateOneWithoutBallotInput
  title: String!
  updatedAt: DateTime
  voted: VotedCreateManyWithoutBallotInput
  votes: VoteCreateManyWithoutBallotInput
}

input BallotCreateWithoutBallotRunsInput {
  attachments: AttachmentCreateManyWithoutBallotInput
  body: String!
  canton: String
  createdAt: DateTime
  creator: UserCreateOneWithoutBallotsInput
  description: String!
  end: DateTime!
  id: String
  options: OptionCreateManyWithoutBallotInput
  school: SchoolCreateOneWithoutBallotsInput
  scope: BallotScope
  start: DateTime!
  team: TeamCreateOneWithoutBallotsInput
  thread: ThreadCreateOneWithoutBallotInput
  title: String!
  updatedAt: DateTime
  voted: VotedCreateManyWithoutBallotInput
  votes: VoteCreateManyWithoutBallotInput
}

input BallotCreateWithoutCreatorInput {
  attachments: AttachmentCreateManyWithoutBallotInput
  BallotRuns: BallotRunCreateManyWithoutBallotInput
  body: String!
  canton: String
  createdAt: DateTime
  description: String!
  end: DateTime!
  id: String
  options: OptionCreateManyWithoutBallotInput
  school: SchoolCreateOneWithoutBallotsInput
  scope: BallotScope
  start: DateTime!
  team: TeamCreateOneWithoutBallotsInput
  thread: ThreadCreateOneWithoutBallotInput
  title: String!
  updatedAt: DateTime
  voted: VotedCreateManyWithoutBallotInput
  votes: VoteCreateManyWithoutBallotInput
}

input BallotCreateWithoutSchoolInput {
  attachments: AttachmentCreateManyWithoutBallotInput
  BallotRuns: BallotRunCreateManyWithoutBallotInput
  body: String!
  canton: String
  createdAt: DateTime
  creator: UserCreateOneWithoutBallotsInput
  description: String!
  end: DateTime!
  id: String
  options: OptionCreateManyWithoutBallotInput
  scope: BallotScope
  start: DateTime!
  team: TeamCreateOneWithoutBallotsInput
  thread: ThreadCreateOneWithoutBallotInput
  title: String!
  updatedAt: DateTime
  voted: VotedCreateManyWithoutBallotInput
  votes: VoteCreateManyWithoutBallotInput
}

input BallotCreateWithoutTeamInput {
  attachments: AttachmentCreateManyWithoutBallotInput
  BallotRuns: BallotRunCreateManyWithoutBallotInput
  body: String!
  canton: String
  createdAt: DateTime
  creator: UserCreateOneWithoutBallotsInput
  description: String!
  end: DateTime!
  id: String
  options: OptionCreateManyWithoutBallotInput
  school: SchoolCreateOneWithoutBallotsInput
  scope: BallotScope
  start: DateTime!
  thread: ThreadCreateOneWithoutBallotInput
  title: String!
  updatedAt: DateTime
  voted: VotedCreateManyWithoutBallotInput
  votes: VoteCreateManyWithoutBallotInput
}

input BallotCreateWithoutThreadInput {
  attachments: AttachmentCreateManyWithoutBallotInput
  BallotRuns: BallotRunCreateManyWithoutBallotInput
  body: String!
  canton: String
  createdAt: DateTime
  creator: UserCreateOneWithoutBallotsInput
  description: String!
  end: DateTime!
  id: String
  options: OptionCreateManyWithoutBallotInput
  school: SchoolCreateOneWithoutBallotsInput
  scope: BallotScope
  start: DateTime!
  team: TeamCreateOneWithoutBallotsInput
  title: String!
  updatedAt: DateTime
  voted: VotedCreateManyWithoutBallotInput
  votes: VoteCreateManyWithoutBallotInput
}

input BallotCreateWithoutVotedInput {
  attachments: AttachmentCreateManyWithoutBallotInput
  BallotRuns: BallotRunCreateManyWithoutBallotInput
  body: String!
  canton: String
  createdAt: DateTime
  creator: UserCreateOneWithoutBallotsInput
  description: String!
  end: DateTime!
  id: String
  options: OptionCreateManyWithoutBallotInput
  school: SchoolCreateOneWithoutBallotsInput
  scope: BallotScope
  start: DateTime!
  team: TeamCreateOneWithoutBallotsInput
  thread: ThreadCreateOneWithoutBallotInput
  title: String!
  updatedAt: DateTime
  votes: VoteCreateManyWithoutBallotInput
}

input BallotCreateWithoutVotesInput {
  attachments: AttachmentCreateManyWithoutBallotInput
  BallotRuns: BallotRunCreateManyWithoutBallotInput
  body: String!
  canton: String
  createdAt: DateTime
  creator: UserCreateOneWithoutBallotsInput
  description: String!
  end: DateTime!
  id: String
  options: OptionCreateManyWithoutBallotInput
  school: SchoolCreateOneWithoutBallotsInput
  scope: BallotScope
  start: DateTime!
  team: TeamCreateOneWithoutBallotsInput
  thread: ThreadCreateOneWithoutBallotInput
  title: String!
  updatedAt: DateTime
  voted: VotedCreateManyWithoutBallotInput
}

input BallotIdTeamIdCompoundUniqueInput {
  ballotId: String!
  teamId: String!
}

input BallotListRelationFilter {
  every: BallotWhereInput
  none: BallotWhereInput
  some: BallotWhereInput
}

input BallotOrderByInput {
  body: SortOrder
  canton: SortOrder
  createdAt: SortOrder
  creatorId: SortOrder
  description: SortOrder
  end: SortOrder
  id: SortOrder
  schoolId: SortOrder
  scope: SortOrder
  start: SortOrder
  teamId: SortOrder
  threadId: SortOrder
  title: SortOrder
  updatedAt: SortOrder
}

type BallotResults {
  abs: Int
  no: Int
  total: Int
  yes: Int
}

type BallotRun {
  ballot: Ballot!
  end: DateTime
  id: String!
  start: DateTime
  team: Team!
}

input BallotRunCreateManyWithoutBallotInput {
  connect: [BallotRunWhereUniqueInput!]
  create: [BallotRunCreateWithoutBallotInput!]
}

input BallotRunCreateManyWithoutTeamInput {
  connect: [BallotRunWhereUniqueInput!]
  create: [BallotRunCreateWithoutTeamInput!]
}

input BallotRunCreateOneWithoutVoteInput {
  connect: BallotRunWhereUniqueInput
  create: BallotRunCreateWithoutVoteInput
}

input BallotRunCreateWithoutBallotInput {
  end: DateTime
  id: String
  start: DateTime
  team: TeamCreateOneWithoutBallotRunsInput!
  Vote: VoteCreateManyWithoutBallotRunInput
}

input BallotRunCreateWithoutTeamInput {
  ballot: BallotCreateOneWithoutBallotRunsInput!
  end: DateTime
  id: String
  start: DateTime
  Vote: VoteCreateManyWithoutBallotRunInput
}

input BallotRunCreateWithoutVoteInput {
  ballot: BallotCreateOneWithoutBallotRunsInput!
  end: DateTime
  id: String
  start: DateTime
  team: TeamCreateOneWithoutBallotRunsInput!
}

input BallotRunListRelationFilter {
  every: BallotRunWhereInput
  none: BallotRunWhereInput
  some: BallotRunWhereInput
}

input BallotRunScalarWhereInput {
  AND: [BallotRunScalarWhereInput!]
  ballotId: StringFilter
  end: DateTimeNullableFilter
  id: StringFilter
  NOT: [BallotRunScalarWhereInput!]
  OR: [BallotRunScalarWhereInput!]
  start: DateTimeNullableFilter
  teamId: StringFilter
}

input BallotRunUpdateManyDataInput {
  end: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  start: NullableDateTimeFieldUpdateOperationsInput
}

input BallotRunUpdateManyWithoutBallotInput {
  connect: [BallotRunWhereUniqueInput!]
  create: [BallotRunCreateWithoutBallotInput!]
  delete: [BallotRunWhereUniqueInput!]
  deleteMany: [BallotRunScalarWhereInput!]
  disconnect: [BallotRunWhereUniqueInput!]
  set: [BallotRunWhereUniqueInput!]
  update: [BallotRunUpdateWithWhereUniqueWithoutBallotInput!]
  updateMany: [BallotRunUpdateManyWithWhereNestedInput!]
  upsert: [BallotRunUpsertWithWhereUniqueWithoutBallotInput!]
}

input BallotRunUpdateManyWithoutTeamInput {
  connect: [BallotRunWhereUniqueInput!]
  create: [BallotRunCreateWithoutTeamInput!]
  delete: [BallotRunWhereUniqueInput!]
  deleteMany: [BallotRunScalarWhereInput!]
  disconnect: [BallotRunWhereUniqueInput!]
  set: [BallotRunWhereUniqueInput!]
  update: [BallotRunUpdateWithWhereUniqueWithoutTeamInput!]
  updateMany: [BallotRunUpdateManyWithWhereNestedInput!]
  upsert: [BallotRunUpsertWithWhereUniqueWithoutTeamInput!]
}

input BallotRunUpdateManyWithWhereNestedInput {
  data: BallotRunUpdateManyDataInput!
  where: BallotRunScalarWhereInput!
}

input BallotRunUpdateOneWithoutVoteInput {
  connect: BallotRunWhereUniqueInput
  create: BallotRunCreateWithoutVoteInput
  delete: Boolean
  disconnect: Boolean
  update: BallotRunUpdateWithoutVoteDataInput
  upsert: BallotRunUpsertWithoutVoteInput
}

input BallotRunUpdateWithoutBallotDataInput {
  end: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  start: NullableDateTimeFieldUpdateOperationsInput
  team: TeamUpdateOneRequiredWithoutBallotRunsInput
  Vote: VoteUpdateManyWithoutBallotRunInput
}

input BallotRunUpdateWithoutTeamDataInput {
  ballot: BallotUpdateOneRequiredWithoutBallotRunsInput
  end: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  start: NullableDateTimeFieldUpdateOperationsInput
  Vote: VoteUpdateManyWithoutBallotRunInput
}

input BallotRunUpdateWithoutVoteDataInput {
  ballot: BallotUpdateOneRequiredWithoutBallotRunsInput
  end: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  start: NullableDateTimeFieldUpdateOperationsInput
  team: TeamUpdateOneRequiredWithoutBallotRunsInput
}

input BallotRunUpdateWithWhereUniqueWithoutBallotInput {
  data: BallotRunUpdateWithoutBallotDataInput!
  where: BallotRunWhereUniqueInput!
}

input BallotRunUpdateWithWhereUniqueWithoutTeamInput {
  data: BallotRunUpdateWithoutTeamDataInput!
  where: BallotRunWhereUniqueInput!
}

input BallotRunUpsertWithoutVoteInput {
  create: BallotRunCreateWithoutVoteInput!
  update: BallotRunUpdateWithoutVoteDataInput!
}

input BallotRunUpsertWithWhereUniqueWithoutBallotInput {
  create: BallotRunCreateWithoutBallotInput!
  update: BallotRunUpdateWithoutBallotDataInput!
  where: BallotRunWhereUniqueInput!
}

input BallotRunUpsertWithWhereUniqueWithoutTeamInput {
  create: BallotRunCreateWithoutTeamInput!
  update: BallotRunUpdateWithoutTeamDataInput!
  where: BallotRunWhereUniqueInput!
}

input BallotRunWhereInput {
  AND: [BallotRunWhereInput!]
  ballot: BallotWhereInput
  ballotId: StringFilter
  end: DateTimeNullableFilter
  id: StringFilter
  NOT: [BallotRunWhereInput!]
  OR: [BallotRunWhereInput!]
  start: DateTimeNullableFilter
  team: TeamWhereInput
  teamId: StringFilter
  Vote: VoteListRelationFilter
}

input BallotRunWhereUniqueInput {
  ballotId_teamId: BallotIdTeamIdCompoundUniqueInput
  id: String
}

input BallotScalarWhereInput {
  AND: [BallotScalarWhereInput!]
  body: StringFilter
  canton: StringNullableFilter
  createdAt: DateTimeFilter
  creatorId: StringNullableFilter
  description: StringFilter
  end: DateTimeFilter
  id: StringFilter
  NOT: [BallotScalarWhereInput!]
  OR: [BallotScalarWhereInput!]
  schoolId: StringNullableFilter
  scope: BallotScope
  start: DateTimeFilter
  teamId: StringNullableFilter
  threadId: StringNullableFilter
  title: StringFilter
  updatedAt: DateTimeFilter
}

enum BallotScope {
  Cantonal
  National
  Public
  School
  Team
}

input BallotUpdateManyDataInput {
  body: StringFieldUpdateOperationsInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  end: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  scope: BallotScope
  start: DateTimeFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input BallotUpdateManyWithoutCreatorInput {
  connect: [BallotWhereUniqueInput!]
  create: [BallotCreateWithoutCreatorInput!]
  delete: [BallotWhereUniqueInput!]
  deleteMany: [BallotScalarWhereInput!]
  disconnect: [BallotWhereUniqueInput!]
  set: [BallotWhereUniqueInput!]
  update: [BallotUpdateWithWhereUniqueWithoutCreatorInput!]
  updateMany: [BallotUpdateManyWithWhereNestedInput!]
  upsert: [BallotUpsertWithWhereUniqueWithoutCreatorInput!]
}

input BallotUpdateManyWithoutSchoolInput {
  connect: [BallotWhereUniqueInput!]
  create: [BallotCreateWithoutSchoolInput!]
  delete: [BallotWhereUniqueInput!]
  deleteMany: [BallotScalarWhereInput!]
  disconnect: [BallotWhereUniqueInput!]
  set: [BallotWhereUniqueInput!]
  update: [BallotUpdateWithWhereUniqueWithoutSchoolInput!]
  updateMany: [BallotUpdateManyWithWhereNestedInput!]
  upsert: [BallotUpsertWithWhereUniqueWithoutSchoolInput!]
}

input BallotUpdateManyWithoutTeamInput {
  connect: [BallotWhereUniqueInput!]
  create: [BallotCreateWithoutTeamInput!]
  delete: [BallotWhereUniqueInput!]
  deleteMany: [BallotScalarWhereInput!]
  disconnect: [BallotWhereUniqueInput!]
  set: [BallotWhereUniqueInput!]
  update: [BallotUpdateWithWhereUniqueWithoutTeamInput!]
  updateMany: [BallotUpdateManyWithWhereNestedInput!]
  upsert: [BallotUpsertWithWhereUniqueWithoutTeamInput!]
}

input BallotUpdateManyWithWhereNestedInput {
  data: BallotUpdateManyDataInput!
  where: BallotScalarWhereInput!
}

input BallotUpdateOneRequiredWithoutBallotRunsInput {
  connect: BallotWhereUniqueInput
  create: BallotCreateWithoutBallotRunsInput
  update: BallotUpdateWithoutBallotRunsDataInput
  upsert: BallotUpsertWithoutBallotRunsInput
}

input BallotUpdateOneRequiredWithoutVotedInput {
  connect: BallotWhereUniqueInput
  create: BallotCreateWithoutVotedInput
  update: BallotUpdateWithoutVotedDataInput
  upsert: BallotUpsertWithoutVotedInput
}

input BallotUpdateOneRequiredWithoutVotesInput {
  connect: BallotWhereUniqueInput
  create: BallotCreateWithoutVotesInput
  update: BallotUpdateWithoutVotesDataInput
  upsert: BallotUpsertWithoutVotesInput
}

input BallotUpdateOneWithoutAttachmentsInput {
  connect: BallotWhereUniqueInput
  create: BallotCreateWithoutAttachmentsInput
  delete: Boolean
  disconnect: Boolean
  update: BallotUpdateWithoutAttachmentsDataInput
  upsert: BallotUpsertWithoutAttachmentsInput
}

input BallotUpdateOneWithoutThreadInput {
  connect: BallotWhereUniqueInput
  create: BallotCreateWithoutThreadInput
  delete: Boolean
  disconnect: Boolean
  update: BallotUpdateWithoutThreadDataInput
  upsert: BallotUpsertWithoutThreadInput
}

input BallotUpdateWithoutAttachmentsDataInput {
  BallotRuns: BallotRunUpdateManyWithoutBallotInput
  body: StringFieldUpdateOperationsInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creator: UserUpdateOneWithoutBallotsInput
  description: StringFieldUpdateOperationsInput
  end: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  options: OptionUpdateManyWithoutBallotInput
  school: SchoolUpdateOneWithoutBallotsInput
  scope: BallotScope
  start: DateTimeFieldUpdateOperationsInput
  team: TeamUpdateOneWithoutBallotsInput
  thread: ThreadUpdateOneWithoutBallotInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  voted: VotedUpdateManyWithoutBallotInput
  votes: VoteUpdateManyWithoutBallotInput
}

input BallotUpdateWithoutBallotRunsDataInput {
  attachments: AttachmentUpdateManyWithoutBallotInput
  body: StringFieldUpdateOperationsInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creator: UserUpdateOneWithoutBallotsInput
  description: StringFieldUpdateOperationsInput
  end: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  options: OptionUpdateManyWithoutBallotInput
  school: SchoolUpdateOneWithoutBallotsInput
  scope: BallotScope
  start: DateTimeFieldUpdateOperationsInput
  team: TeamUpdateOneWithoutBallotsInput
  thread: ThreadUpdateOneWithoutBallotInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  voted: VotedUpdateManyWithoutBallotInput
  votes: VoteUpdateManyWithoutBallotInput
}

input BallotUpdateWithoutCreatorDataInput {
  attachments: AttachmentUpdateManyWithoutBallotInput
  BallotRuns: BallotRunUpdateManyWithoutBallotInput
  body: StringFieldUpdateOperationsInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  end: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  options: OptionUpdateManyWithoutBallotInput
  school: SchoolUpdateOneWithoutBallotsInput
  scope: BallotScope
  start: DateTimeFieldUpdateOperationsInput
  team: TeamUpdateOneWithoutBallotsInput
  thread: ThreadUpdateOneWithoutBallotInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  voted: VotedUpdateManyWithoutBallotInput
  votes: VoteUpdateManyWithoutBallotInput
}

input BallotUpdateWithoutSchoolDataInput {
  attachments: AttachmentUpdateManyWithoutBallotInput
  BallotRuns: BallotRunUpdateManyWithoutBallotInput
  body: StringFieldUpdateOperationsInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creator: UserUpdateOneWithoutBallotsInput
  description: StringFieldUpdateOperationsInput
  end: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  options: OptionUpdateManyWithoutBallotInput
  scope: BallotScope
  start: DateTimeFieldUpdateOperationsInput
  team: TeamUpdateOneWithoutBallotsInput
  thread: ThreadUpdateOneWithoutBallotInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  voted: VotedUpdateManyWithoutBallotInput
  votes: VoteUpdateManyWithoutBallotInput
}

input BallotUpdateWithoutTeamDataInput {
  attachments: AttachmentUpdateManyWithoutBallotInput
  BallotRuns: BallotRunUpdateManyWithoutBallotInput
  body: StringFieldUpdateOperationsInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creator: UserUpdateOneWithoutBallotsInput
  description: StringFieldUpdateOperationsInput
  end: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  options: OptionUpdateManyWithoutBallotInput
  school: SchoolUpdateOneWithoutBallotsInput
  scope: BallotScope
  start: DateTimeFieldUpdateOperationsInput
  thread: ThreadUpdateOneWithoutBallotInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  voted: VotedUpdateManyWithoutBallotInput
  votes: VoteUpdateManyWithoutBallotInput
}

input BallotUpdateWithoutThreadDataInput {
  attachments: AttachmentUpdateManyWithoutBallotInput
  BallotRuns: BallotRunUpdateManyWithoutBallotInput
  body: StringFieldUpdateOperationsInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creator: UserUpdateOneWithoutBallotsInput
  description: StringFieldUpdateOperationsInput
  end: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  options: OptionUpdateManyWithoutBallotInput
  school: SchoolUpdateOneWithoutBallotsInput
  scope: BallotScope
  start: DateTimeFieldUpdateOperationsInput
  team: TeamUpdateOneWithoutBallotsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  voted: VotedUpdateManyWithoutBallotInput
  votes: VoteUpdateManyWithoutBallotInput
}

input BallotUpdateWithoutVotedDataInput {
  attachments: AttachmentUpdateManyWithoutBallotInput
  BallotRuns: BallotRunUpdateManyWithoutBallotInput
  body: StringFieldUpdateOperationsInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creator: UserUpdateOneWithoutBallotsInput
  description: StringFieldUpdateOperationsInput
  end: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  options: OptionUpdateManyWithoutBallotInput
  school: SchoolUpdateOneWithoutBallotsInput
  scope: BallotScope
  start: DateTimeFieldUpdateOperationsInput
  team: TeamUpdateOneWithoutBallotsInput
  thread: ThreadUpdateOneWithoutBallotInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  votes: VoteUpdateManyWithoutBallotInput
}

input BallotUpdateWithoutVotesDataInput {
  attachments: AttachmentUpdateManyWithoutBallotInput
  BallotRuns: BallotRunUpdateManyWithoutBallotInput
  body: StringFieldUpdateOperationsInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creator: UserUpdateOneWithoutBallotsInput
  description: StringFieldUpdateOperationsInput
  end: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  options: OptionUpdateManyWithoutBallotInput
  school: SchoolUpdateOneWithoutBallotsInput
  scope: BallotScope
  start: DateTimeFieldUpdateOperationsInput
  team: TeamUpdateOneWithoutBallotsInput
  thread: ThreadUpdateOneWithoutBallotInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  voted: VotedUpdateManyWithoutBallotInput
}

input BallotUpdateWithWhereUniqueWithoutCreatorInput {
  data: BallotUpdateWithoutCreatorDataInput!
  where: BallotWhereUniqueInput!
}

input BallotUpdateWithWhereUniqueWithoutSchoolInput {
  data: BallotUpdateWithoutSchoolDataInput!
  where: BallotWhereUniqueInput!
}

input BallotUpdateWithWhereUniqueWithoutTeamInput {
  data: BallotUpdateWithoutTeamDataInput!
  where: BallotWhereUniqueInput!
}

input BallotUpsertWithoutAttachmentsInput {
  create: BallotCreateWithoutAttachmentsInput!
  update: BallotUpdateWithoutAttachmentsDataInput!
}

input BallotUpsertWithoutBallotRunsInput {
  create: BallotCreateWithoutBallotRunsInput!
  update: BallotUpdateWithoutBallotRunsDataInput!
}

input BallotUpsertWithoutThreadInput {
  create: BallotCreateWithoutThreadInput!
  update: BallotUpdateWithoutThreadDataInput!
}

input BallotUpsertWithoutVotedInput {
  create: BallotCreateWithoutVotedInput!
  update: BallotUpdateWithoutVotedDataInput!
}

input BallotUpsertWithoutVotesInput {
  create: BallotCreateWithoutVotesInput!
  update: BallotUpdateWithoutVotesDataInput!
}

input BallotUpsertWithWhereUniqueWithoutCreatorInput {
  create: BallotCreateWithoutCreatorInput!
  update: BallotUpdateWithoutCreatorDataInput!
  where: BallotWhereUniqueInput!
}

input BallotUpsertWithWhereUniqueWithoutSchoolInput {
  create: BallotCreateWithoutSchoolInput!
  update: BallotUpdateWithoutSchoolDataInput!
  where: BallotWhereUniqueInput!
}

input BallotUpsertWithWhereUniqueWithoutTeamInput {
  create: BallotCreateWithoutTeamInput!
  update: BallotUpdateWithoutTeamDataInput!
  where: BallotWhereUniqueInput!
}

input BallotWhereInput {
  AND: [BallotWhereInput!]
  attachments: AttachmentListRelationFilter
  BallotRuns: BallotRunListRelationFilter
  body: StringFilter
  canton: StringNullableFilter
  createdAt: DateTimeFilter
  creator: UserWhereInput
  creatorId: StringNullableFilter
  description: StringFilter
  end: DateTimeFilter
  id: StringFilter
  NOT: [BallotWhereInput!]
  options: OptionListRelationFilter
  OR: [BallotWhereInput!]
  school: SchoolWhereInput
  schoolId: StringNullableFilter
  scope: BallotScope
  start: DateTimeFilter
  team: TeamWhereInput
  teamId: StringNullableFilter
  thread: ThreadWhereInput
  threadId: StringNullableFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  voted: VotedListRelationFilter
  votes: VoteListRelationFilter
}

input BallotWhereUniqueInput {
  id: String
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input BoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the
`date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO
8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input DateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

type Domain {
  approved: Boolean!
  id: String!
  name: String!
  schools(after: SchoolWhereUniqueInput, before: SchoolWhereUniqueInput, first: Int, last: Int): [School!]!
}

input DomainCreateOneWithoutSchoolsInput {
  connect: DomainWhereUniqueInput
  create: DomainCreateWithoutSchoolsInput
}

input DomainCreateOneWithoutTeamInput {
  connect: DomainWhereUniqueInput
  create: DomainCreateWithoutTeamInput
}

input DomainCreateWithoutSchoolsInput {
  approved: Boolean
  id: String
  name: String!
  Team: TeamCreateManyWithoutDomainInput
}

input DomainCreateWithoutTeamInput {
  approved: Boolean
  id: String
  name: String!
  schools: SchoolCreateManyWithoutDomainInput
}

input DomainUpdateOneWithoutSchoolsInput {
  connect: DomainWhereUniqueInput
  create: DomainCreateWithoutSchoolsInput
  delete: Boolean
  disconnect: Boolean
  update: DomainUpdateWithoutSchoolsDataInput
  upsert: DomainUpsertWithoutSchoolsInput
}

input DomainUpdateOneWithoutTeamInput {
  connect: DomainWhereUniqueInput
  create: DomainCreateWithoutTeamInput
  delete: Boolean
  disconnect: Boolean
  update: DomainUpdateWithoutTeamDataInput
  upsert: DomainUpsertWithoutTeamInput
}

input DomainUpdateWithoutSchoolsDataInput {
  approved: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  Team: TeamUpdateManyWithoutDomainInput
}

input DomainUpdateWithoutTeamDataInput {
  approved: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  schools: SchoolUpdateManyWithoutDomainInput
}

input DomainUpsertWithoutSchoolsInput {
  create: DomainCreateWithoutSchoolsInput!
  update: DomainUpdateWithoutSchoolsDataInput!
}

input DomainUpsertWithoutTeamInput {
  create: DomainCreateWithoutTeamInput!
  update: DomainUpdateWithoutTeamDataInput!
}

input DomainWhereInput {
  AND: [DomainWhereInput!]
  approved: BoolFilter
  id: StringFilter
  name: StringFilter
  NOT: [DomainWhereInput!]
  OR: [DomainWhereInput!]
  schools: SchoolListRelationFilter
  Team: TeamListRelationFilter
}

input DomainWhereUniqueInput {
  id: String
  name: String
}

enum Gender {
  Female
  Male
  Other
  Unkown
}

input IntFieldUpdateOperationsInput {
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

"""
The `JSON` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar Json

type Mutation {
  acceptInvite(invite: String): Team
  addBallotRun(ballotId: String!, teamId: String!): BallotRun
  changePassword(password: String): ResponseLogin
  checkVerification(token: String): ResponseLogin
  createInvitedUser(email: String, invite: String, lastname: String, name: String, password: String): User
  createOneSchool(data: SchoolCreateInput!): School!
  createOneTeam(data: TeamCreateInput!): Team!
  createUser(data: UserCreateInput!): User!
  deleteOneSchool(where: SchoolWhereUniqueInput!): School
  deleteOneTeam(where: TeamWhereUniqueInput!): Team
  emailVerification(email: String!, purpose: String!): ResponseLogin
  endBallotRun(ballotRunId: String!): BallotRun
  inviteStudents(emails: [String!]!, team: String!): Team
  login(email: String, password: String): ResponseLogin
  removeBallotRun(ballotRunId: String!): Response
  setSchool(school: String!): User
  startBallotRun(ballotRunId: String!): BallotRun
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  vote(ballotId: String!, vote: Int!): Vote
  voteCode(ballotRunId: String!, code: String!, vote: Int!): Response
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedBoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NullableBoolFieldUpdateOperationsInput {
  set: Boolean
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input NullableIntFieldUpdateOperationsInput {
  set: Int
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

input OptionCreateManyWithoutBallotInput {
  connect: [OptionWhereUniqueInput!]
  create: [OptionCreateWithoutBallotInput!]
}

input OptionCreateWithoutBallotInput {
  id: String
  title: String!
  vote: Int!
}

input OptionListRelationFilter {
  every: OptionWhereInput
  none: OptionWhereInput
  some: OptionWhereInput
}

input OptionScalarWhereInput {
  AND: [OptionScalarWhereInput!]
  ballotId: StringFilter
  id: StringFilter
  NOT: [OptionScalarWhereInput!]
  OR: [OptionScalarWhereInput!]
  title: StringFilter
  vote: IntFilter
}

input OptionUpdateManyDataInput {
  id: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  vote: IntFieldUpdateOperationsInput
}

input OptionUpdateManyWithoutBallotInput {
  connect: [OptionWhereUniqueInput!]
  create: [OptionCreateWithoutBallotInput!]
  delete: [OptionWhereUniqueInput!]
  deleteMany: [OptionScalarWhereInput!]
  disconnect: [OptionWhereUniqueInput!]
  set: [OptionWhereUniqueInput!]
  update: [OptionUpdateWithWhereUniqueWithoutBallotInput!]
  updateMany: [OptionUpdateManyWithWhereNestedInput!]
  upsert: [OptionUpsertWithWhereUniqueWithoutBallotInput!]
}

input OptionUpdateManyWithWhereNestedInput {
  data: OptionUpdateManyDataInput!
  where: OptionScalarWhereInput!
}

input OptionUpdateWithoutBallotDataInput {
  id: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  vote: IntFieldUpdateOperationsInput
}

input OptionUpdateWithWhereUniqueWithoutBallotInput {
  data: OptionUpdateWithoutBallotDataInput!
  where: OptionWhereUniqueInput!
}

input OptionUpsertWithWhereUniqueWithoutBallotInput {
  create: OptionCreateWithoutBallotInput!
  update: OptionUpdateWithoutBallotDataInput!
  where: OptionWhereUniqueInput!
}

input OptionWhereInput {
  AND: [OptionWhereInput!]
  ballot: BallotWhereInput
  ballotId: StringFilter
  id: StringFilter
  NOT: [OptionWhereInput!]
  OR: [OptionWhereInput!]
  title: StringFilter
  vote: IntFilter
}

input OptionWhereUniqueInput {
  id: String
}

type Query {
  ballot(where: BallotWhereUniqueInput!): Ballot
  ballots(after: BallotWhereUniqueInput, before: BallotWhereUniqueInput, first: Int, last: Int, orderBy: [BallotOrderByInput!], where: BallotWhereInput): [Ballot!]!
  getBallotResults(ballotId: String!, ballotRunId: String, canton: String, schoolId: String, teamId: String): BallotResults
  getBallotRuns(teamId: String!): [BallotRun!]
  me: User
  school(where: SchoolWhereUniqueInput!): School
  schools(after: SchoolWhereUniqueInput, before: SchoolWhereUniqueInput, first: Int, last: Int, orderBy: [SchoolOrderByInput!], where: SchoolWhereInput): [School!]!
  team(where: TeamWhereUniqueInput!): Team
  teams(after: TeamWhereUniqueInput, before: TeamWhereUniqueInput, first: Int, last: Int, orderBy: [TeamOrderByInput!], where: TeamWhereInput): [Team!]!
  user(where: UserWhereUniqueInput!): User
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int, orderBy: [UserOrderByInput!], where: UserWhereInput): [User!]!
}

type Reaction {
  emoij: String!
  id: String!
  thread: Thread
  user: User!
}

input ReactionCreateManyWithoutThreadInput {
  connect: [ReactionWhereUniqueInput!]
  create: [ReactionCreateWithoutThreadInput!]
}

input ReactionCreateManyWithoutUserInput {
  connect: [ReactionWhereUniqueInput!]
  create: [ReactionCreateWithoutUserInput!]
}

input ReactionCreateWithoutThreadInput {
  createdAt: DateTime
  emoij: String!
  id: String
  updatedAt: DateTime
  user: UserCreateOneWithoutReactionsInput!
}

input ReactionCreateWithoutUserInput {
  createdAt: DateTime
  emoij: String!
  id: String
  thread: ThreadCreateOneWithoutReactionsInput
  updatedAt: DateTime
}

input ReactionListRelationFilter {
  every: ReactionWhereInput
  none: ReactionWhereInput
  some: ReactionWhereInput
}

input ReactionScalarWhereInput {
  AND: [ReactionScalarWhereInput!]
  createdAt: DateTimeFilter
  emoij: StringFilter
  id: StringFilter
  NOT: [ReactionScalarWhereInput!]
  OR: [ReactionScalarWhereInput!]
  threadId: StringNullableFilter
  updatedAt: DateTimeFilter
  userId: StringFilter
}

input ReactionUpdateManyDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  emoij: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ReactionUpdateManyWithoutThreadInput {
  connect: [ReactionWhereUniqueInput!]
  create: [ReactionCreateWithoutThreadInput!]
  delete: [ReactionWhereUniqueInput!]
  deleteMany: [ReactionScalarWhereInput!]
  disconnect: [ReactionWhereUniqueInput!]
  set: [ReactionWhereUniqueInput!]
  update: [ReactionUpdateWithWhereUniqueWithoutThreadInput!]
  updateMany: [ReactionUpdateManyWithWhereNestedInput!]
  upsert: [ReactionUpsertWithWhereUniqueWithoutThreadInput!]
}

input ReactionUpdateManyWithoutUserInput {
  connect: [ReactionWhereUniqueInput!]
  create: [ReactionCreateWithoutUserInput!]
  delete: [ReactionWhereUniqueInput!]
  deleteMany: [ReactionScalarWhereInput!]
  disconnect: [ReactionWhereUniqueInput!]
  set: [ReactionWhereUniqueInput!]
  update: [ReactionUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [ReactionUpdateManyWithWhereNestedInput!]
  upsert: [ReactionUpsertWithWhereUniqueWithoutUserInput!]
}

input ReactionUpdateManyWithWhereNestedInput {
  data: ReactionUpdateManyDataInput!
  where: ReactionScalarWhereInput!
}

input ReactionUpdateWithoutThreadDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  emoij: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutReactionsInput
}

input ReactionUpdateWithoutUserDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  emoij: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  thread: ThreadUpdateOneWithoutReactionsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ReactionUpdateWithWhereUniqueWithoutThreadInput {
  data: ReactionUpdateWithoutThreadDataInput!
  where: ReactionWhereUniqueInput!
}

input ReactionUpdateWithWhereUniqueWithoutUserInput {
  data: ReactionUpdateWithoutUserDataInput!
  where: ReactionWhereUniqueInput!
}

input ReactionUpsertWithWhereUniqueWithoutThreadInput {
  create: ReactionCreateWithoutThreadInput!
  update: ReactionUpdateWithoutThreadDataInput!
  where: ReactionWhereUniqueInput!
}

input ReactionUpsertWithWhereUniqueWithoutUserInput {
  create: ReactionCreateWithoutUserInput!
  update: ReactionUpdateWithoutUserDataInput!
  where: ReactionWhereUniqueInput!
}

input ReactionWhereInput {
  AND: [ReactionWhereInput!]
  createdAt: DateTimeFilter
  emoij: StringFilter
  id: StringFilter
  NOT: [ReactionWhereInput!]
  OR: [ReactionWhereInput!]
  thread: ThreadWhereInput
  threadId: StringNullableFilter
  updatedAt: DateTimeFilter
  user: UserWhereInput
  userId: StringFilter
}

input ReactionWhereUniqueInput {
  id: String
}

type Response {
  error: Boolean
  message: String
  success: Boolean
}

type ResponseLogin {
  token: String
  user: User
}

enum Role {
  Admin
  Principal
  Student
  Teacher
  User
}

type School {
  address: String!
  canton: String!
  city: String!
  id: String!
  members(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
  name: String!
  teams(after: TeamWhereUniqueInput, before: TeamWhereUniqueInput, first: Int, last: Int): [Team!]!
  zip: String!
}

input SchoolCreateInput {
  address: String
  ballots: BallotCreateManyWithoutSchoolInput
  canton: String
  city: String
  domain: DomainCreateOneWithoutSchoolsInput
  id: String
  members: UserCreateManyWithoutSchoolInput
  name: String!
  teams: TeamCreateManyWithoutSchoolInput
  type: String
  Vote: VoteCreateManyWithoutSchoolInput
  Voted: VotedCreateManyWithoutSchoolInput
  zip: String
}

input SchoolCreateManyWithoutDomainInput {
  connect: [SchoolWhereUniqueInput!]
  create: [SchoolCreateWithoutDomainInput!]
}

input SchoolCreateOneWithoutBallotsInput {
  connect: SchoolWhereUniqueInput
  create: SchoolCreateWithoutBallotsInput
}

input SchoolCreateOneWithoutMembersInput {
  connect: SchoolWhereUniqueInput
  create: SchoolCreateWithoutMembersInput
}

input SchoolCreateOneWithoutTeamsInput {
  connect: SchoolWhereUniqueInput
  create: SchoolCreateWithoutTeamsInput
}

input SchoolCreateOneWithoutVotedInput {
  connect: SchoolWhereUniqueInput
  create: SchoolCreateWithoutVotedInput
}

input SchoolCreateOneWithoutVoteInput {
  connect: SchoolWhereUniqueInput
  create: SchoolCreateWithoutVoteInput
}

input SchoolCreateWithoutBallotsInput {
  address: String
  canton: String
  city: String
  domain: DomainCreateOneWithoutSchoolsInput
  id: String
  members: UserCreateManyWithoutSchoolInput
  name: String!
  teams: TeamCreateManyWithoutSchoolInput
  type: String
  Vote: VoteCreateManyWithoutSchoolInput
  Voted: VotedCreateManyWithoutSchoolInput
  zip: String
}

input SchoolCreateWithoutDomainInput {
  address: String
  ballots: BallotCreateManyWithoutSchoolInput
  canton: String
  city: String
  id: String
  members: UserCreateManyWithoutSchoolInput
  name: String!
  teams: TeamCreateManyWithoutSchoolInput
  type: String
  Vote: VoteCreateManyWithoutSchoolInput
  Voted: VotedCreateManyWithoutSchoolInput
  zip: String
}

input SchoolCreateWithoutMembersInput {
  address: String
  ballots: BallotCreateManyWithoutSchoolInput
  canton: String
  city: String
  domain: DomainCreateOneWithoutSchoolsInput
  id: String
  name: String!
  teams: TeamCreateManyWithoutSchoolInput
  type: String
  Vote: VoteCreateManyWithoutSchoolInput
  Voted: VotedCreateManyWithoutSchoolInput
  zip: String
}

input SchoolCreateWithoutTeamsInput {
  address: String
  ballots: BallotCreateManyWithoutSchoolInput
  canton: String
  city: String
  domain: DomainCreateOneWithoutSchoolsInput
  id: String
  members: UserCreateManyWithoutSchoolInput
  name: String!
  type: String
  Vote: VoteCreateManyWithoutSchoolInput
  Voted: VotedCreateManyWithoutSchoolInput
  zip: String
}

input SchoolCreateWithoutVotedInput {
  address: String
  ballots: BallotCreateManyWithoutSchoolInput
  canton: String
  city: String
  domain: DomainCreateOneWithoutSchoolsInput
  id: String
  members: UserCreateManyWithoutSchoolInput
  name: String!
  teams: TeamCreateManyWithoutSchoolInput
  type: String
  Vote: VoteCreateManyWithoutSchoolInput
  zip: String
}

input SchoolCreateWithoutVoteInput {
  address: String
  ballots: BallotCreateManyWithoutSchoolInput
  canton: String
  city: String
  domain: DomainCreateOneWithoutSchoolsInput
  id: String
  members: UserCreateManyWithoutSchoolInput
  name: String!
  teams: TeamCreateManyWithoutSchoolInput
  type: String
  Voted: VotedCreateManyWithoutSchoolInput
  zip: String
}

input SchoolListRelationFilter {
  every: SchoolWhereInput
  none: SchoolWhereInput
  some: SchoolWhereInput
}

input SchoolOrderByInput {
  address: SortOrder
  canton: SortOrder
  city: SortOrder
  domainId: SortOrder
  id: SortOrder
  name: SortOrder
  type: SortOrder
  zip: SortOrder
}

input SchoolScalarWhereInput {
  address: StringFilter
  AND: [SchoolScalarWhereInput!]
  canton: StringFilter
  city: StringFilter
  domainId: StringNullableFilter
  id: StringFilter
  name: StringFilter
  NOT: [SchoolScalarWhereInput!]
  OR: [SchoolScalarWhereInput!]
  type: StringFilter
  zip: StringFilter
}

input SchoolUpdateManyDataInput {
  address: StringFieldUpdateOperationsInput
  canton: StringFieldUpdateOperationsInput
  city: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  zip: StringFieldUpdateOperationsInput
}

input SchoolUpdateManyWithoutDomainInput {
  connect: [SchoolWhereUniqueInput!]
  create: [SchoolCreateWithoutDomainInput!]
  delete: [SchoolWhereUniqueInput!]
  deleteMany: [SchoolScalarWhereInput!]
  disconnect: [SchoolWhereUniqueInput!]
  set: [SchoolWhereUniqueInput!]
  update: [SchoolUpdateWithWhereUniqueWithoutDomainInput!]
  updateMany: [SchoolUpdateManyWithWhereNestedInput!]
  upsert: [SchoolUpsertWithWhereUniqueWithoutDomainInput!]
}

input SchoolUpdateManyWithWhereNestedInput {
  data: SchoolUpdateManyDataInput!
  where: SchoolScalarWhereInput!
}

input SchoolUpdateOneRequiredWithoutTeamsInput {
  connect: SchoolWhereUniqueInput
  create: SchoolCreateWithoutTeamsInput
  update: SchoolUpdateWithoutTeamsDataInput
  upsert: SchoolUpsertWithoutTeamsInput
}

input SchoolUpdateOneWithoutBallotsInput {
  connect: SchoolWhereUniqueInput
  create: SchoolCreateWithoutBallotsInput
  delete: Boolean
  disconnect: Boolean
  update: SchoolUpdateWithoutBallotsDataInput
  upsert: SchoolUpsertWithoutBallotsInput
}

input SchoolUpdateOneWithoutMembersInput {
  connect: SchoolWhereUniqueInput
  create: SchoolCreateWithoutMembersInput
  delete: Boolean
  disconnect: Boolean
  update: SchoolUpdateWithoutMembersDataInput
  upsert: SchoolUpsertWithoutMembersInput
}

input SchoolUpdateOneWithoutVotedInput {
  connect: SchoolWhereUniqueInput
  create: SchoolCreateWithoutVotedInput
  delete: Boolean
  disconnect: Boolean
  update: SchoolUpdateWithoutVotedDataInput
  upsert: SchoolUpsertWithoutVotedInput
}

input SchoolUpdateOneWithoutVoteInput {
  connect: SchoolWhereUniqueInput
  create: SchoolCreateWithoutVoteInput
  delete: Boolean
  disconnect: Boolean
  update: SchoolUpdateWithoutVoteDataInput
  upsert: SchoolUpsertWithoutVoteInput
}

input SchoolUpdateWithoutBallotsDataInput {
  address: StringFieldUpdateOperationsInput
  canton: StringFieldUpdateOperationsInput
  city: StringFieldUpdateOperationsInput
  domain: DomainUpdateOneWithoutSchoolsInput
  id: StringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutSchoolInput
  name: StringFieldUpdateOperationsInput
  teams: TeamUpdateManyWithoutSchoolInput
  type: StringFieldUpdateOperationsInput
  Vote: VoteUpdateManyWithoutSchoolInput
  Voted: VotedUpdateManyWithoutSchoolInput
  zip: StringFieldUpdateOperationsInput
}

input SchoolUpdateWithoutDomainDataInput {
  address: StringFieldUpdateOperationsInput
  ballots: BallotUpdateManyWithoutSchoolInput
  canton: StringFieldUpdateOperationsInput
  city: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutSchoolInput
  name: StringFieldUpdateOperationsInput
  teams: TeamUpdateManyWithoutSchoolInput
  type: StringFieldUpdateOperationsInput
  Vote: VoteUpdateManyWithoutSchoolInput
  Voted: VotedUpdateManyWithoutSchoolInput
  zip: StringFieldUpdateOperationsInput
}

input SchoolUpdateWithoutMembersDataInput {
  address: StringFieldUpdateOperationsInput
  ballots: BallotUpdateManyWithoutSchoolInput
  canton: StringFieldUpdateOperationsInput
  city: StringFieldUpdateOperationsInput
  domain: DomainUpdateOneWithoutSchoolsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  teams: TeamUpdateManyWithoutSchoolInput
  type: StringFieldUpdateOperationsInput
  Vote: VoteUpdateManyWithoutSchoolInput
  Voted: VotedUpdateManyWithoutSchoolInput
  zip: StringFieldUpdateOperationsInput
}

input SchoolUpdateWithoutTeamsDataInput {
  address: StringFieldUpdateOperationsInput
  ballots: BallotUpdateManyWithoutSchoolInput
  canton: StringFieldUpdateOperationsInput
  city: StringFieldUpdateOperationsInput
  domain: DomainUpdateOneWithoutSchoolsInput
  id: StringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutSchoolInput
  name: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  Vote: VoteUpdateManyWithoutSchoolInput
  Voted: VotedUpdateManyWithoutSchoolInput
  zip: StringFieldUpdateOperationsInput
}

input SchoolUpdateWithoutVoteDataInput {
  address: StringFieldUpdateOperationsInput
  ballots: BallotUpdateManyWithoutSchoolInput
  canton: StringFieldUpdateOperationsInput
  city: StringFieldUpdateOperationsInput
  domain: DomainUpdateOneWithoutSchoolsInput
  id: StringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutSchoolInput
  name: StringFieldUpdateOperationsInput
  teams: TeamUpdateManyWithoutSchoolInput
  type: StringFieldUpdateOperationsInput
  Voted: VotedUpdateManyWithoutSchoolInput
  zip: StringFieldUpdateOperationsInput
}

input SchoolUpdateWithoutVotedDataInput {
  address: StringFieldUpdateOperationsInput
  ballots: BallotUpdateManyWithoutSchoolInput
  canton: StringFieldUpdateOperationsInput
  city: StringFieldUpdateOperationsInput
  domain: DomainUpdateOneWithoutSchoolsInput
  id: StringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutSchoolInput
  name: StringFieldUpdateOperationsInput
  teams: TeamUpdateManyWithoutSchoolInput
  type: StringFieldUpdateOperationsInput
  Vote: VoteUpdateManyWithoutSchoolInput
  zip: StringFieldUpdateOperationsInput
}

input SchoolUpdateWithWhereUniqueWithoutDomainInput {
  data: SchoolUpdateWithoutDomainDataInput!
  where: SchoolWhereUniqueInput!
}

input SchoolUpsertWithoutBallotsInput {
  create: SchoolCreateWithoutBallotsInput!
  update: SchoolUpdateWithoutBallotsDataInput!
}

input SchoolUpsertWithoutMembersInput {
  create: SchoolCreateWithoutMembersInput!
  update: SchoolUpdateWithoutMembersDataInput!
}

input SchoolUpsertWithoutTeamsInput {
  create: SchoolCreateWithoutTeamsInput!
  update: SchoolUpdateWithoutTeamsDataInput!
}

input SchoolUpsertWithoutVotedInput {
  create: SchoolCreateWithoutVotedInput!
  update: SchoolUpdateWithoutVotedDataInput!
}

input SchoolUpsertWithoutVoteInput {
  create: SchoolCreateWithoutVoteInput!
  update: SchoolUpdateWithoutVoteDataInput!
}

input SchoolUpsertWithWhereUniqueWithoutDomainInput {
  create: SchoolCreateWithoutDomainInput!
  update: SchoolUpdateWithoutDomainDataInput!
  where: SchoolWhereUniqueInput!
}

input SchoolWhereInput {
  address: StringFilter
  AND: [SchoolWhereInput!]
  ballots: BallotListRelationFilter
  canton: StringFilter
  city: StringFilter
  domain: DomainWhereInput
  domainId: StringNullableFilter
  id: StringFilter
  members: UserListRelationFilter
  name: StringFilter
  NOT: [SchoolWhereInput!]
  OR: [SchoolWhereInput!]
  teams: TeamListRelationFilter
  type: StringFilter
  Vote: VoteListRelationFilter
  Voted: VotedListRelationFilter
  zip: StringFilter
}

input SchoolWhereUniqueInput {
  id: String
}

enum SortOrder {
  asc
  desc
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type Team {
  ballots(after: BallotWhereUniqueInput, before: BallotWhereUniqueInput, first: Int, last: Int): [Ballot!]!
  code: String
  domain: Domain
  id: String!
  invite: String
  members(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
  name: String!
  school: School!
  teacher: User!
}

input TeamCreateInput {
  BallotRuns: BallotRunCreateManyWithoutTeamInput
  ballots: BallotCreateManyWithoutTeamInput
  domain: DomainCreateOneWithoutTeamInput
  id: String
  members: UserCreateManyWithoutTeamInput
  name: String!
  school: SchoolCreateOneWithoutTeamsInput!
  teacher: UserCreateOneWithoutTeachesInput!
  User: UserCreateManyWithoutTeamInput
  Vote: VoteCreateManyWithoutTeamInput
  Voted: VotedCreateManyWithoutTeamInput
  year: Int
}

input TeamCreateManyWithoutDomainInput {
  connect: [TeamWhereUniqueInput!]
  create: [TeamCreateWithoutDomainInput!]
}

input TeamCreateManyWithoutSchoolInput {
  connect: [TeamWhereUniqueInput!]
  create: [TeamCreateWithoutSchoolInput!]
}

input TeamCreateManyWithoutTeacherInput {
  connect: [TeamWhereUniqueInput!]
  create: [TeamCreateWithoutTeacherInput!]
}

input TeamCreateOneWithoutBallotRunsInput {
  connect: TeamWhereUniqueInput
  create: TeamCreateWithoutBallotRunsInput
}

input TeamCreateOneWithoutBallotsInput {
  connect: TeamWhereUniqueInput
  create: TeamCreateWithoutBallotsInput
}

input TeamCreateOneWithoutMembersInput {
  connect: TeamWhereUniqueInput
  create: TeamCreateWithoutMembersInput
}

input TeamCreateOneWithoutUserInput {
  connect: TeamWhereUniqueInput
  create: TeamCreateWithoutUserInput
}

input TeamCreateOneWithoutVotedInput {
  connect: TeamWhereUniqueInput
  create: TeamCreateWithoutVotedInput
}

input TeamCreateOneWithoutVoteInput {
  connect: TeamWhereUniqueInput
  create: TeamCreateWithoutVoteInput
}

input TeamCreateWithoutBallotRunsInput {
  ballots: BallotCreateManyWithoutTeamInput
  code: String
  domain: DomainCreateOneWithoutTeamInput
  id: String
  invite: String
  members: UserCreateManyWithoutTeamInput
  name: String!
  school: SchoolCreateOneWithoutTeamsInput!
  teacher: UserCreateOneWithoutTeachesInput!
  User: UserCreateManyWithoutTeamInput
  Vote: VoteCreateManyWithoutTeamInput
  Voted: VotedCreateManyWithoutTeamInput
  year: Int
}

input TeamCreateWithoutBallotsInput {
  BallotRuns: BallotRunCreateManyWithoutTeamInput
  code: String
  domain: DomainCreateOneWithoutTeamInput
  id: String
  invite: String
  members: UserCreateManyWithoutTeamInput
  name: String!
  school: SchoolCreateOneWithoutTeamsInput!
  teacher: UserCreateOneWithoutTeachesInput!
  User: UserCreateManyWithoutTeamInput
  Vote: VoteCreateManyWithoutTeamInput
  Voted: VotedCreateManyWithoutTeamInput
  year: Int
}

input TeamCreateWithoutDomainInput {
  BallotRuns: BallotRunCreateManyWithoutTeamInput
  ballots: BallotCreateManyWithoutTeamInput
  code: String
  id: String
  invite: String
  members: UserCreateManyWithoutTeamInput
  name: String!
  school: SchoolCreateOneWithoutTeamsInput!
  teacher: UserCreateOneWithoutTeachesInput!
  User: UserCreateManyWithoutTeamInput
  Vote: VoteCreateManyWithoutTeamInput
  Voted: VotedCreateManyWithoutTeamInput
  year: Int
}

input TeamCreateWithoutMembersInput {
  BallotRuns: BallotRunCreateManyWithoutTeamInput
  ballots: BallotCreateManyWithoutTeamInput
  code: String
  domain: DomainCreateOneWithoutTeamInput
  id: String
  invite: String
  name: String!
  school: SchoolCreateOneWithoutTeamsInput!
  teacher: UserCreateOneWithoutTeachesInput!
  User: UserCreateManyWithoutTeamInput
  Vote: VoteCreateManyWithoutTeamInput
  Voted: VotedCreateManyWithoutTeamInput
  year: Int
}

input TeamCreateWithoutSchoolInput {
  BallotRuns: BallotRunCreateManyWithoutTeamInput
  ballots: BallotCreateManyWithoutTeamInput
  code: String
  domain: DomainCreateOneWithoutTeamInput
  id: String
  invite: String
  members: UserCreateManyWithoutTeamInput
  name: String!
  teacher: UserCreateOneWithoutTeachesInput!
  User: UserCreateManyWithoutTeamInput
  Vote: VoteCreateManyWithoutTeamInput
  Voted: VotedCreateManyWithoutTeamInput
  year: Int
}

input TeamCreateWithoutTeacherInput {
  BallotRuns: BallotRunCreateManyWithoutTeamInput
  ballots: BallotCreateManyWithoutTeamInput
  code: String
  domain: DomainCreateOneWithoutTeamInput
  id: String
  invite: String
  members: UserCreateManyWithoutTeamInput
  name: String!
  school: SchoolCreateOneWithoutTeamsInput!
  User: UserCreateManyWithoutTeamInput
  Vote: VoteCreateManyWithoutTeamInput
  Voted: VotedCreateManyWithoutTeamInput
  year: Int
}

input TeamCreateWithoutUserInput {
  BallotRuns: BallotRunCreateManyWithoutTeamInput
  ballots: BallotCreateManyWithoutTeamInput
  code: String
  domain: DomainCreateOneWithoutTeamInput
  id: String
  invite: String
  members: UserCreateManyWithoutTeamInput
  name: String!
  school: SchoolCreateOneWithoutTeamsInput!
  teacher: UserCreateOneWithoutTeachesInput!
  Vote: VoteCreateManyWithoutTeamInput
  Voted: VotedCreateManyWithoutTeamInput
  year: Int
}

input TeamCreateWithoutVotedInput {
  BallotRuns: BallotRunCreateManyWithoutTeamInput
  ballots: BallotCreateManyWithoutTeamInput
  code: String
  domain: DomainCreateOneWithoutTeamInput
  id: String
  invite: String
  members: UserCreateManyWithoutTeamInput
  name: String!
  school: SchoolCreateOneWithoutTeamsInput!
  teacher: UserCreateOneWithoutTeachesInput!
  User: UserCreateManyWithoutTeamInput
  Vote: VoteCreateManyWithoutTeamInput
  year: Int
}

input TeamCreateWithoutVoteInput {
  BallotRuns: BallotRunCreateManyWithoutTeamInput
  ballots: BallotCreateManyWithoutTeamInput
  code: String
  domain: DomainCreateOneWithoutTeamInput
  id: String
  invite: String
  members: UserCreateManyWithoutTeamInput
  name: String!
  school: SchoolCreateOneWithoutTeamsInput!
  teacher: UserCreateOneWithoutTeachesInput!
  User: UserCreateManyWithoutTeamInput
  Voted: VotedCreateManyWithoutTeamInput
  year: Int
}

input TeamListRelationFilter {
  every: TeamWhereInput
  none: TeamWhereInput
  some: TeamWhereInput
}

input TeamOrderByInput {
  code: SortOrder
  domainId: SortOrder
  id: SortOrder
  invite: SortOrder
  name: SortOrder
  schoolId: SortOrder
  teacherId: SortOrder
  year: SortOrder
}

input TeamScalarWhereInput {
  AND: [TeamScalarWhereInput!]
  code: StringNullableFilter
  domainId: StringNullableFilter
  id: StringFilter
  invite: StringNullableFilter
  name: StringFilter
  NOT: [TeamScalarWhereInput!]
  OR: [TeamScalarWhereInput!]
  schoolId: StringFilter
  teacherId: StringFilter
  year: IntNullableFilter
}

input TeamUpdateManyDataInput {
  code: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  invite: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  year: NullableIntFieldUpdateOperationsInput
}

input TeamUpdateManyWithoutDomainInput {
  connect: [TeamWhereUniqueInput!]
  create: [TeamCreateWithoutDomainInput!]
  delete: [TeamWhereUniqueInput!]
  deleteMany: [TeamScalarWhereInput!]
  disconnect: [TeamWhereUniqueInput!]
  set: [TeamWhereUniqueInput!]
  update: [TeamUpdateWithWhereUniqueWithoutDomainInput!]
  updateMany: [TeamUpdateManyWithWhereNestedInput!]
  upsert: [TeamUpsertWithWhereUniqueWithoutDomainInput!]
}

input TeamUpdateManyWithoutSchoolInput {
  connect: [TeamWhereUniqueInput!]
  create: [TeamCreateWithoutSchoolInput!]
  delete: [TeamWhereUniqueInput!]
  deleteMany: [TeamScalarWhereInput!]
  disconnect: [TeamWhereUniqueInput!]
  set: [TeamWhereUniqueInput!]
  update: [TeamUpdateWithWhereUniqueWithoutSchoolInput!]
  updateMany: [TeamUpdateManyWithWhereNestedInput!]
  upsert: [TeamUpsertWithWhereUniqueWithoutSchoolInput!]
}

input TeamUpdateManyWithoutTeacherInput {
  connect: [TeamWhereUniqueInput!]
  create: [TeamCreateWithoutTeacherInput!]
  delete: [TeamWhereUniqueInput!]
  deleteMany: [TeamScalarWhereInput!]
  disconnect: [TeamWhereUniqueInput!]
  set: [TeamWhereUniqueInput!]
  update: [TeamUpdateWithWhereUniqueWithoutTeacherInput!]
  updateMany: [TeamUpdateManyWithWhereNestedInput!]
  upsert: [TeamUpsertWithWhereUniqueWithoutTeacherInput!]
}

input TeamUpdateManyWithWhereNestedInput {
  data: TeamUpdateManyDataInput!
  where: TeamScalarWhereInput!
}

input TeamUpdateOneRequiredWithoutBallotRunsInput {
  connect: TeamWhereUniqueInput
  create: TeamCreateWithoutBallotRunsInput
  update: TeamUpdateWithoutBallotRunsDataInput
  upsert: TeamUpsertWithoutBallotRunsInput
}

input TeamUpdateOneWithoutBallotsInput {
  connect: TeamWhereUniqueInput
  create: TeamCreateWithoutBallotsInput
  delete: Boolean
  disconnect: Boolean
  update: TeamUpdateWithoutBallotsDataInput
  upsert: TeamUpsertWithoutBallotsInput
}

input TeamUpdateOneWithoutMembersInput {
  connect: TeamWhereUniqueInput
  create: TeamCreateWithoutMembersInput
  delete: Boolean
  disconnect: Boolean
  update: TeamUpdateWithoutMembersDataInput
  upsert: TeamUpsertWithoutMembersInput
}

input TeamUpdateOneWithoutUserInput {
  connect: TeamWhereUniqueInput
  create: TeamCreateWithoutUserInput
  delete: Boolean
  disconnect: Boolean
  update: TeamUpdateWithoutUserDataInput
  upsert: TeamUpsertWithoutUserInput
}

input TeamUpdateOneWithoutVotedInput {
  connect: TeamWhereUniqueInput
  create: TeamCreateWithoutVotedInput
  delete: Boolean
  disconnect: Boolean
  update: TeamUpdateWithoutVotedDataInput
  upsert: TeamUpsertWithoutVotedInput
}

input TeamUpdateOneWithoutVoteInput {
  connect: TeamWhereUniqueInput
  create: TeamCreateWithoutVoteInput
  delete: Boolean
  disconnect: Boolean
  update: TeamUpdateWithoutVoteDataInput
  upsert: TeamUpsertWithoutVoteInput
}

input TeamUpdateWithoutBallotRunsDataInput {
  ballots: BallotUpdateManyWithoutTeamInput
  code: NullableStringFieldUpdateOperationsInput
  domain: DomainUpdateOneWithoutTeamInput
  id: StringFieldUpdateOperationsInput
  invite: NullableStringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutTeamInput
  name: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneRequiredWithoutTeamsInput
  teacher: UserUpdateOneRequiredWithoutTeachesInput
  User: UserUpdateManyWithoutTeamInput
  Vote: VoteUpdateManyWithoutTeamInput
  Voted: VotedUpdateManyWithoutTeamInput
  year: NullableIntFieldUpdateOperationsInput
}

input TeamUpdateWithoutBallotsDataInput {
  BallotRuns: BallotRunUpdateManyWithoutTeamInput
  code: NullableStringFieldUpdateOperationsInput
  domain: DomainUpdateOneWithoutTeamInput
  id: StringFieldUpdateOperationsInput
  invite: NullableStringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutTeamInput
  name: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneRequiredWithoutTeamsInput
  teacher: UserUpdateOneRequiredWithoutTeachesInput
  User: UserUpdateManyWithoutTeamInput
  Vote: VoteUpdateManyWithoutTeamInput
  Voted: VotedUpdateManyWithoutTeamInput
  year: NullableIntFieldUpdateOperationsInput
}

input TeamUpdateWithoutDomainDataInput {
  BallotRuns: BallotRunUpdateManyWithoutTeamInput
  ballots: BallotUpdateManyWithoutTeamInput
  code: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  invite: NullableStringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutTeamInput
  name: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneRequiredWithoutTeamsInput
  teacher: UserUpdateOneRequiredWithoutTeachesInput
  User: UserUpdateManyWithoutTeamInput
  Vote: VoteUpdateManyWithoutTeamInput
  Voted: VotedUpdateManyWithoutTeamInput
  year: NullableIntFieldUpdateOperationsInput
}

input TeamUpdateWithoutMembersDataInput {
  BallotRuns: BallotRunUpdateManyWithoutTeamInput
  ballots: BallotUpdateManyWithoutTeamInput
  code: NullableStringFieldUpdateOperationsInput
  domain: DomainUpdateOneWithoutTeamInput
  id: StringFieldUpdateOperationsInput
  invite: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneRequiredWithoutTeamsInput
  teacher: UserUpdateOneRequiredWithoutTeachesInput
  User: UserUpdateManyWithoutTeamInput
  Vote: VoteUpdateManyWithoutTeamInput
  Voted: VotedUpdateManyWithoutTeamInput
  year: NullableIntFieldUpdateOperationsInput
}

input TeamUpdateWithoutSchoolDataInput {
  BallotRuns: BallotRunUpdateManyWithoutTeamInput
  ballots: BallotUpdateManyWithoutTeamInput
  code: NullableStringFieldUpdateOperationsInput
  domain: DomainUpdateOneWithoutTeamInput
  id: StringFieldUpdateOperationsInput
  invite: NullableStringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutTeamInput
  name: StringFieldUpdateOperationsInput
  teacher: UserUpdateOneRequiredWithoutTeachesInput
  User: UserUpdateManyWithoutTeamInput
  Vote: VoteUpdateManyWithoutTeamInput
  Voted: VotedUpdateManyWithoutTeamInput
  year: NullableIntFieldUpdateOperationsInput
}

input TeamUpdateWithoutTeacherDataInput {
  BallotRuns: BallotRunUpdateManyWithoutTeamInput
  ballots: BallotUpdateManyWithoutTeamInput
  code: NullableStringFieldUpdateOperationsInput
  domain: DomainUpdateOneWithoutTeamInput
  id: StringFieldUpdateOperationsInput
  invite: NullableStringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutTeamInput
  name: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneRequiredWithoutTeamsInput
  User: UserUpdateManyWithoutTeamInput
  Vote: VoteUpdateManyWithoutTeamInput
  Voted: VotedUpdateManyWithoutTeamInput
  year: NullableIntFieldUpdateOperationsInput
}

input TeamUpdateWithoutUserDataInput {
  BallotRuns: BallotRunUpdateManyWithoutTeamInput
  ballots: BallotUpdateManyWithoutTeamInput
  code: NullableStringFieldUpdateOperationsInput
  domain: DomainUpdateOneWithoutTeamInput
  id: StringFieldUpdateOperationsInput
  invite: NullableStringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutTeamInput
  name: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneRequiredWithoutTeamsInput
  teacher: UserUpdateOneRequiredWithoutTeachesInput
  Vote: VoteUpdateManyWithoutTeamInput
  Voted: VotedUpdateManyWithoutTeamInput
  year: NullableIntFieldUpdateOperationsInput
}

input TeamUpdateWithoutVoteDataInput {
  BallotRuns: BallotRunUpdateManyWithoutTeamInput
  ballots: BallotUpdateManyWithoutTeamInput
  code: NullableStringFieldUpdateOperationsInput
  domain: DomainUpdateOneWithoutTeamInput
  id: StringFieldUpdateOperationsInput
  invite: NullableStringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutTeamInput
  name: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneRequiredWithoutTeamsInput
  teacher: UserUpdateOneRequiredWithoutTeachesInput
  User: UserUpdateManyWithoutTeamInput
  Voted: VotedUpdateManyWithoutTeamInput
  year: NullableIntFieldUpdateOperationsInput
}

input TeamUpdateWithoutVotedDataInput {
  BallotRuns: BallotRunUpdateManyWithoutTeamInput
  ballots: BallotUpdateManyWithoutTeamInput
  code: NullableStringFieldUpdateOperationsInput
  domain: DomainUpdateOneWithoutTeamInput
  id: StringFieldUpdateOperationsInput
  invite: NullableStringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutTeamInput
  name: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneRequiredWithoutTeamsInput
  teacher: UserUpdateOneRequiredWithoutTeachesInput
  User: UserUpdateManyWithoutTeamInput
  Vote: VoteUpdateManyWithoutTeamInput
  year: NullableIntFieldUpdateOperationsInput
}

input TeamUpdateWithWhereUniqueWithoutDomainInput {
  data: TeamUpdateWithoutDomainDataInput!
  where: TeamWhereUniqueInput!
}

input TeamUpdateWithWhereUniqueWithoutSchoolInput {
  data: TeamUpdateWithoutSchoolDataInput!
  where: TeamWhereUniqueInput!
}

input TeamUpdateWithWhereUniqueWithoutTeacherInput {
  data: TeamUpdateWithoutTeacherDataInput!
  where: TeamWhereUniqueInput!
}

input TeamUpsertWithoutBallotRunsInput {
  create: TeamCreateWithoutBallotRunsInput!
  update: TeamUpdateWithoutBallotRunsDataInput!
}

input TeamUpsertWithoutBallotsInput {
  create: TeamCreateWithoutBallotsInput!
  update: TeamUpdateWithoutBallotsDataInput!
}

input TeamUpsertWithoutMembersInput {
  create: TeamCreateWithoutMembersInput!
  update: TeamUpdateWithoutMembersDataInput!
}

input TeamUpsertWithoutUserInput {
  create: TeamCreateWithoutUserInput!
  update: TeamUpdateWithoutUserDataInput!
}

input TeamUpsertWithoutVotedInput {
  create: TeamCreateWithoutVotedInput!
  update: TeamUpdateWithoutVotedDataInput!
}

input TeamUpsertWithoutVoteInput {
  create: TeamCreateWithoutVoteInput!
  update: TeamUpdateWithoutVoteDataInput!
}

input TeamUpsertWithWhereUniqueWithoutDomainInput {
  create: TeamCreateWithoutDomainInput!
  update: TeamUpdateWithoutDomainDataInput!
  where: TeamWhereUniqueInput!
}

input TeamUpsertWithWhereUniqueWithoutSchoolInput {
  create: TeamCreateWithoutSchoolInput!
  update: TeamUpdateWithoutSchoolDataInput!
  where: TeamWhereUniqueInput!
}

input TeamUpsertWithWhereUniqueWithoutTeacherInput {
  create: TeamCreateWithoutTeacherInput!
  update: TeamUpdateWithoutTeacherDataInput!
  where: TeamWhereUniqueInput!
}

input TeamWhereInput {
  AND: [TeamWhereInput!]
  BallotRuns: BallotRunListRelationFilter
  ballots: BallotListRelationFilter
  code: StringNullableFilter
  domain: DomainWhereInput
  domainId: StringNullableFilter
  id: StringFilter
  invite: StringNullableFilter
  members: UserListRelationFilter
  name: StringFilter
  NOT: [TeamWhereInput!]
  OR: [TeamWhereInput!]
  school: SchoolWhereInput
  schoolId: StringFilter
  teacher: UserWhereInput
  teacherId: StringFilter
  User: UserListRelationFilter
  Vote: VoteListRelationFilter
  Voted: VotedListRelationFilter
  year: IntNullableFilter
}

input TeamWhereUniqueInput {
  code: String
  id: String
  invite: String
}

type Thread {
  attachments(after: AttachmentWhereUniqueInput, before: AttachmentWhereUniqueInput, first: Int, last: Int): [Attachment!]!
  children(after: ThreadWhereUniqueInput, before: ThreadWhereUniqueInput, first: Int, last: Int): [Thread!]!
  createdAt: DateTime!
  id: String!
  parent: Thread
  reactions(after: ReactionWhereUniqueInput, before: ReactionWhereUniqueInput, first: Int, last: Int): [Reaction!]!
  text: String!
  title: String!
  updatedAt: DateTime!
  user: User!
}

input ThreadCreateManyWithoutParentInput {
  connect: [ThreadWhereUniqueInput!]
  create: [ThreadCreateWithoutParentInput!]
}

input ThreadCreateManyWithoutUserInput {
  connect: [ThreadWhereUniqueInput!]
  create: [ThreadCreateWithoutUserInput!]
}

input ThreadCreateOneWithoutAttachmentsInput {
  connect: ThreadWhereUniqueInput
  create: ThreadCreateWithoutAttachmentsInput
}

input ThreadCreateOneWithoutBallotInput {
  connect: ThreadWhereUniqueInput
  create: ThreadCreateWithoutBallotInput
}

input ThreadCreateOneWithoutChildrenInput {
  connect: ThreadWhereUniqueInput
  create: ThreadCreateWithoutChildrenInput
}

input ThreadCreateOneWithoutReactionsInput {
  connect: ThreadWhereUniqueInput
  create: ThreadCreateWithoutReactionsInput
}

input ThreadCreateWithoutAttachmentsInput {
  ballot: BallotCreateOneWithoutThreadInput
  children: ThreadCreateManyWithoutParentInput
  createdAt: DateTime
  id: String
  parent: ThreadCreateOneWithoutChildrenInput
  reactions: ReactionCreateManyWithoutThreadInput
  ref: String
  text: String
  title: String
  updatedAt: DateTime
  user: UserCreateOneWithoutThreadsInput!
}

input ThreadCreateWithoutBallotInput {
  attachments: AttachmentCreateManyWithoutThreadInput
  children: ThreadCreateManyWithoutParentInput
  createdAt: DateTime
  id: String
  parent: ThreadCreateOneWithoutChildrenInput
  reactions: ReactionCreateManyWithoutThreadInput
  ref: String
  text: String
  title: String
  updatedAt: DateTime
  user: UserCreateOneWithoutThreadsInput!
}

input ThreadCreateWithoutChildrenInput {
  attachments: AttachmentCreateManyWithoutThreadInput
  ballot: BallotCreateOneWithoutThreadInput
  createdAt: DateTime
  id: String
  parent: ThreadCreateOneWithoutChildrenInput
  reactions: ReactionCreateManyWithoutThreadInput
  ref: String
  text: String
  title: String
  updatedAt: DateTime
  user: UserCreateOneWithoutThreadsInput!
}

input ThreadCreateWithoutParentInput {
  attachments: AttachmentCreateManyWithoutThreadInput
  ballot: BallotCreateOneWithoutThreadInput
  children: ThreadCreateManyWithoutParentInput
  createdAt: DateTime
  id: String
  reactions: ReactionCreateManyWithoutThreadInput
  ref: String
  text: String
  title: String
  updatedAt: DateTime
  user: UserCreateOneWithoutThreadsInput!
}

input ThreadCreateWithoutReactionsInput {
  attachments: AttachmentCreateManyWithoutThreadInput
  ballot: BallotCreateOneWithoutThreadInput
  children: ThreadCreateManyWithoutParentInput
  createdAt: DateTime
  id: String
  parent: ThreadCreateOneWithoutChildrenInput
  ref: String
  text: String
  title: String
  updatedAt: DateTime
  user: UserCreateOneWithoutThreadsInput!
}

input ThreadCreateWithoutUserInput {
  attachments: AttachmentCreateManyWithoutThreadInput
  ballot: BallotCreateOneWithoutThreadInput
  children: ThreadCreateManyWithoutParentInput
  createdAt: DateTime
  id: String
  parent: ThreadCreateOneWithoutChildrenInput
  reactions: ReactionCreateManyWithoutThreadInput
  ref: String
  text: String
  title: String
  updatedAt: DateTime
}

input ThreadListRelationFilter {
  every: ThreadWhereInput
  none: ThreadWhereInput
  some: ThreadWhereInput
}

input ThreadScalarWhereInput {
  AND: [ThreadScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  NOT: [ThreadScalarWhereInput!]
  OR: [ThreadScalarWhereInput!]
  parentId: StringNullableFilter
  ref: StringNullableFilter
  text: StringFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  userId: StringFilter
}

input ThreadUpdateManyDataInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  ref: NullableStringFieldUpdateOperationsInput
  text: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ThreadUpdateManyWithoutParentInput {
  connect: [ThreadWhereUniqueInput!]
  create: [ThreadCreateWithoutParentInput!]
  delete: [ThreadWhereUniqueInput!]
  deleteMany: [ThreadScalarWhereInput!]
  disconnect: [ThreadWhereUniqueInput!]
  set: [ThreadWhereUniqueInput!]
  update: [ThreadUpdateWithWhereUniqueWithoutParentInput!]
  updateMany: [ThreadUpdateManyWithWhereNestedInput!]
  upsert: [ThreadUpsertWithWhereUniqueWithoutParentInput!]
}

input ThreadUpdateManyWithoutUserInput {
  connect: [ThreadWhereUniqueInput!]
  create: [ThreadCreateWithoutUserInput!]
  delete: [ThreadWhereUniqueInput!]
  deleteMany: [ThreadScalarWhereInput!]
  disconnect: [ThreadWhereUniqueInput!]
  set: [ThreadWhereUniqueInput!]
  update: [ThreadUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [ThreadUpdateManyWithWhereNestedInput!]
  upsert: [ThreadUpsertWithWhereUniqueWithoutUserInput!]
}

input ThreadUpdateManyWithWhereNestedInput {
  data: ThreadUpdateManyDataInput!
  where: ThreadScalarWhereInput!
}

input ThreadUpdateOneWithoutAttachmentsInput {
  connect: ThreadWhereUniqueInput
  create: ThreadCreateWithoutAttachmentsInput
  delete: Boolean
  disconnect: Boolean
  update: ThreadUpdateWithoutAttachmentsDataInput
  upsert: ThreadUpsertWithoutAttachmentsInput
}

input ThreadUpdateOneWithoutBallotInput {
  connect: ThreadWhereUniqueInput
  create: ThreadCreateWithoutBallotInput
  delete: Boolean
  disconnect: Boolean
  update: ThreadUpdateWithoutBallotDataInput
  upsert: ThreadUpsertWithoutBallotInput
}

input ThreadUpdateOneWithoutChildrenInput {
  connect: ThreadWhereUniqueInput
  create: ThreadCreateWithoutChildrenInput
  delete: Boolean
  disconnect: Boolean
  update: ThreadUpdateWithoutChildrenDataInput
  upsert: ThreadUpsertWithoutChildrenInput
}

input ThreadUpdateOneWithoutReactionsInput {
  connect: ThreadWhereUniqueInput
  create: ThreadCreateWithoutReactionsInput
  delete: Boolean
  disconnect: Boolean
  update: ThreadUpdateWithoutReactionsDataInput
  upsert: ThreadUpsertWithoutReactionsInput
}

input ThreadUpdateWithoutAttachmentsDataInput {
  ballot: BallotUpdateOneWithoutThreadInput
  children: ThreadUpdateManyWithoutParentInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  parent: ThreadUpdateOneWithoutChildrenInput
  reactions: ReactionUpdateManyWithoutThreadInput
  ref: NullableStringFieldUpdateOperationsInput
  text: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutThreadsInput
}

input ThreadUpdateWithoutBallotDataInput {
  attachments: AttachmentUpdateManyWithoutThreadInput
  children: ThreadUpdateManyWithoutParentInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  parent: ThreadUpdateOneWithoutChildrenInput
  reactions: ReactionUpdateManyWithoutThreadInput
  ref: NullableStringFieldUpdateOperationsInput
  text: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutThreadsInput
}

input ThreadUpdateWithoutChildrenDataInput {
  attachments: AttachmentUpdateManyWithoutThreadInput
  ballot: BallotUpdateOneWithoutThreadInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  parent: ThreadUpdateOneWithoutChildrenInput
  reactions: ReactionUpdateManyWithoutThreadInput
  ref: NullableStringFieldUpdateOperationsInput
  text: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutThreadsInput
}

input ThreadUpdateWithoutParentDataInput {
  attachments: AttachmentUpdateManyWithoutThreadInput
  ballot: BallotUpdateOneWithoutThreadInput
  children: ThreadUpdateManyWithoutParentInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  reactions: ReactionUpdateManyWithoutThreadInput
  ref: NullableStringFieldUpdateOperationsInput
  text: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutThreadsInput
}

input ThreadUpdateWithoutReactionsDataInput {
  attachments: AttachmentUpdateManyWithoutThreadInput
  ballot: BallotUpdateOneWithoutThreadInput
  children: ThreadUpdateManyWithoutParentInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  parent: ThreadUpdateOneWithoutChildrenInput
  ref: NullableStringFieldUpdateOperationsInput
  text: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutThreadsInput
}

input ThreadUpdateWithoutUserDataInput {
  attachments: AttachmentUpdateManyWithoutThreadInput
  ballot: BallotUpdateOneWithoutThreadInput
  children: ThreadUpdateManyWithoutParentInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  parent: ThreadUpdateOneWithoutChildrenInput
  reactions: ReactionUpdateManyWithoutThreadInput
  ref: NullableStringFieldUpdateOperationsInput
  text: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ThreadUpdateWithWhereUniqueWithoutParentInput {
  data: ThreadUpdateWithoutParentDataInput!
  where: ThreadWhereUniqueInput!
}

input ThreadUpdateWithWhereUniqueWithoutUserInput {
  data: ThreadUpdateWithoutUserDataInput!
  where: ThreadWhereUniqueInput!
}

input ThreadUpsertWithoutAttachmentsInput {
  create: ThreadCreateWithoutAttachmentsInput!
  update: ThreadUpdateWithoutAttachmentsDataInput!
}

input ThreadUpsertWithoutBallotInput {
  create: ThreadCreateWithoutBallotInput!
  update: ThreadUpdateWithoutBallotDataInput!
}

input ThreadUpsertWithoutChildrenInput {
  create: ThreadCreateWithoutChildrenInput!
  update: ThreadUpdateWithoutChildrenDataInput!
}

input ThreadUpsertWithoutReactionsInput {
  create: ThreadCreateWithoutReactionsInput!
  update: ThreadUpdateWithoutReactionsDataInput!
}

input ThreadUpsertWithWhereUniqueWithoutParentInput {
  create: ThreadCreateWithoutParentInput!
  update: ThreadUpdateWithoutParentDataInput!
  where: ThreadWhereUniqueInput!
}

input ThreadUpsertWithWhereUniqueWithoutUserInput {
  create: ThreadCreateWithoutUserInput!
  update: ThreadUpdateWithoutUserDataInput!
  where: ThreadWhereUniqueInput!
}

input ThreadWhereInput {
  AND: [ThreadWhereInput!]
  attachments: AttachmentListRelationFilter
  ballot: BallotWhereInput
  children: ThreadListRelationFilter
  createdAt: DateTimeFilter
  id: StringFilter
  NOT: [ThreadWhereInput!]
  OR: [ThreadWhereInput!]
  parent: ThreadWhereInput
  parentId: StringNullableFilter
  reactions: ReactionListRelationFilter
  ref: StringNullableFilter
  text: StringFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  user: UserWhereInput
  userId: StringFilter
}

input ThreadWhereUniqueInput {
  id: String
}

type User {
  attachments(after: AttachmentWhereUniqueInput, before: AttachmentWhereUniqueInput, first: Int, last: Int): [Attachment!]!
  ballots(after: BallotWhereUniqueInput, before: BallotWhereUniqueInput, first: Int, last: Int): [Ballot!]!
  email: String
  emailVerified: DateTime
  gender: Gender!
  id: String!
  image: String
  lastname: String
  name: String
  reactions(after: ReactionWhereUniqueInput, before: ReactionWhereUniqueInput, first: Int, last: Int): [Reaction!]!
  role: Role!
  school: School
  shortname: String
  teaches(after: TeamWhereUniqueInput, before: TeamWhereUniqueInput, first: Int, last: Int): [Team!]!
  team: Team
  threads(after: ThreadWhereUniqueInput, before: ThreadWhereUniqueInput, first: Int, last: Int): [Thread!]!
}

input UserCreateInput {
  attachments: AttachmentCreateManyWithoutUserInput
  ballots: BallotCreateManyWithoutCreatorInput
  canton: String
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  gender: Gender
  id: String
  image: String
  lastname: String
  name: String
  password: String
  reactions: ReactionCreateManyWithoutUserInput
  role: Role
  school: SchoolCreateOneWithoutMembersInput
  teaches: TeamCreateManyWithoutTeacherInput
  team: TeamCreateOneWithoutUserInput
  Team: TeamCreateOneWithoutMembersInput
  threads: ThreadCreateManyWithoutUserInput
  updatedAt: DateTime
  verified: Boolean
  voted: VotedCreateManyWithoutUserInput
  year: Int
}

input UserCreateManyWithoutSchoolInput {
  connect: [UserWhereUniqueInput!]
  create: [UserCreateWithoutSchoolInput!]
}

input UserCreateManyWithoutTeamInput {
  connect: [UserWhereUniqueInput!]
  create: [UserCreateWithoutTeamInput!]
}

input UserCreateOneWithoutAttachmentsInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutAttachmentsInput
}

input UserCreateOneWithoutBallotsInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutBallotsInput
}

input UserCreateOneWithoutReactionsInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutReactionsInput
}

input UserCreateOneWithoutTeachesInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutTeachesInput
}

input UserCreateOneWithoutThreadsInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutThreadsInput
}

input UserCreateOneWithoutVotedInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutVotedInput
}

input UserCreateWithoutAttachmentsInput {
  ballots: BallotCreateManyWithoutCreatorInput
  canton: String
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  gender: Gender
  id: String
  image: String
  lastname: String
  name: String
  password: String
  reactions: ReactionCreateManyWithoutUserInput
  role: Role
  school: SchoolCreateOneWithoutMembersInput
  teaches: TeamCreateManyWithoutTeacherInput
  team: TeamCreateOneWithoutUserInput
  Team: TeamCreateOneWithoutMembersInput
  threads: ThreadCreateManyWithoutUserInput
  updatedAt: DateTime
  verified: Boolean
  voted: VotedCreateManyWithoutUserInput
  year: Int
}

input UserCreateWithoutBallotsInput {
  attachments: AttachmentCreateManyWithoutUserInput
  canton: String
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  gender: Gender
  id: String
  image: String
  lastname: String
  name: String
  password: String
  reactions: ReactionCreateManyWithoutUserInput
  role: Role
  school: SchoolCreateOneWithoutMembersInput
  teaches: TeamCreateManyWithoutTeacherInput
  team: TeamCreateOneWithoutUserInput
  Team: TeamCreateOneWithoutMembersInput
  threads: ThreadCreateManyWithoutUserInput
  updatedAt: DateTime
  verified: Boolean
  voted: VotedCreateManyWithoutUserInput
  year: Int
}

input UserCreateWithoutReactionsInput {
  attachments: AttachmentCreateManyWithoutUserInput
  ballots: BallotCreateManyWithoutCreatorInput
  canton: String
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  gender: Gender
  id: String
  image: String
  lastname: String
  name: String
  password: String
  role: Role
  school: SchoolCreateOneWithoutMembersInput
  teaches: TeamCreateManyWithoutTeacherInput
  team: TeamCreateOneWithoutUserInput
  Team: TeamCreateOneWithoutMembersInput
  threads: ThreadCreateManyWithoutUserInput
  updatedAt: DateTime
  verified: Boolean
  voted: VotedCreateManyWithoutUserInput
  year: Int
}

input UserCreateWithoutSchoolInput {
  attachments: AttachmentCreateManyWithoutUserInput
  ballots: BallotCreateManyWithoutCreatorInput
  canton: String
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  gender: Gender
  id: String
  image: String
  lastname: String
  name: String
  password: String
  reactions: ReactionCreateManyWithoutUserInput
  role: Role
  teaches: TeamCreateManyWithoutTeacherInput
  team: TeamCreateOneWithoutUserInput
  Team: TeamCreateOneWithoutMembersInput
  threads: ThreadCreateManyWithoutUserInput
  updatedAt: DateTime
  verified: Boolean
  voted: VotedCreateManyWithoutUserInput
  year: Int
}

input UserCreateWithoutTeachesInput {
  attachments: AttachmentCreateManyWithoutUserInput
  ballots: BallotCreateManyWithoutCreatorInput
  canton: String
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  gender: Gender
  id: String
  image: String
  lastname: String
  name: String
  password: String
  reactions: ReactionCreateManyWithoutUserInput
  role: Role
  school: SchoolCreateOneWithoutMembersInput
  team: TeamCreateOneWithoutUserInput
  Team: TeamCreateOneWithoutMembersInput
  threads: ThreadCreateManyWithoutUserInput
  updatedAt: DateTime
  verified: Boolean
  voted: VotedCreateManyWithoutUserInput
  year: Int
}

input UserCreateWithoutTeamInput {
  attachments: AttachmentCreateManyWithoutUserInput
  ballots: BallotCreateManyWithoutCreatorInput
  canton: String
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  gender: Gender
  id: String
  image: String
  lastname: String
  name: String
  password: String
  reactions: ReactionCreateManyWithoutUserInput
  role: Role
  school: SchoolCreateOneWithoutMembersInput
  teaches: TeamCreateManyWithoutTeacherInput
  team: TeamCreateOneWithoutUserInput
  threads: ThreadCreateManyWithoutUserInput
  updatedAt: DateTime
  verified: Boolean
  voted: VotedCreateManyWithoutUserInput
  year: Int
}

input UserCreateWithoutThreadsInput {
  attachments: AttachmentCreateManyWithoutUserInput
  ballots: BallotCreateManyWithoutCreatorInput
  canton: String
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  gender: Gender
  id: String
  image: String
  lastname: String
  name: String
  password: String
  reactions: ReactionCreateManyWithoutUserInput
  role: Role
  school: SchoolCreateOneWithoutMembersInput
  teaches: TeamCreateManyWithoutTeacherInput
  team: TeamCreateOneWithoutUserInput
  Team: TeamCreateOneWithoutMembersInput
  updatedAt: DateTime
  verified: Boolean
  voted: VotedCreateManyWithoutUserInput
  year: Int
}

input UserCreateWithoutVotedInput {
  attachments: AttachmentCreateManyWithoutUserInput
  ballots: BallotCreateManyWithoutCreatorInput
  canton: String
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  gender: Gender
  id: String
  image: String
  lastname: String
  name: String
  password: String
  reactions: ReactionCreateManyWithoutUserInput
  role: Role
  school: SchoolCreateOneWithoutMembersInput
  teaches: TeamCreateManyWithoutTeacherInput
  team: TeamCreateOneWithoutUserInput
  Team: TeamCreateOneWithoutMembersInput
  threads: ThreadCreateManyWithoutUserInput
  updatedAt: DateTime
  verified: Boolean
  year: Int
}

input UserListRelationFilter {
  every: UserWhereInput
  none: UserWhereInput
  some: UserWhereInput
}

input UserOrderByInput {
  canton: SortOrder
  createdAt: SortOrder
  email: SortOrder
  emailVerified: SortOrder
  gender: SortOrder
  id: SortOrder
  image: SortOrder
  lastname: SortOrder
  name: SortOrder
  password: SortOrder
  role: SortOrder
  schoolId: SortOrder
  teamId: SortOrder
  updatedAt: SortOrder
  verified: SortOrder
  year: SortOrder
}

input UserScalarWhereInput {
  AND: [UserScalarWhereInput!]
  canton: StringNullableFilter
  createdAt: DateTimeFilter
  email: StringNullableFilter
  emailVerified: DateTimeNullableFilter
  gender: Gender
  id: StringFilter
  image: StringNullableFilter
  lastname: StringNullableFilter
  name: StringNullableFilter
  NOT: [UserScalarWhereInput!]
  OR: [UserScalarWhereInput!]
  password: StringNullableFilter
  role: Role
  schoolId: StringNullableFilter
  teamId: StringNullableFilter
  updatedAt: DateTimeFilter
  verified: BoolNullableFilter
  year: IntNullableFilter
}

input UserUpdateInput {
  attachments: AttachmentUpdateManyWithoutUserInput
  ballots: BallotUpdateManyWithoutCreatorInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  gender: Gender
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  lastname: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  reactions: ReactionUpdateManyWithoutUserInput
  role: Role
  school: SchoolUpdateOneWithoutMembersInput
  teaches: TeamUpdateManyWithoutTeacherInput
  team: TeamUpdateOneWithoutUserInput
  Team: TeamUpdateOneWithoutMembersInput
  threads: ThreadUpdateManyWithoutUserInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  verified: NullableBoolFieldUpdateOperationsInput
  voted: VotedUpdateManyWithoutUserInput
  year: NullableIntFieldUpdateOperationsInput
}

input UserUpdateManyDataInput {
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  gender: Gender
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  lastname: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  role: Role
  updatedAt: DateTimeFieldUpdateOperationsInput
  verified: NullableBoolFieldUpdateOperationsInput
  year: NullableIntFieldUpdateOperationsInput
}

input UserUpdateManyWithoutSchoolInput {
  connect: [UserWhereUniqueInput!]
  create: [UserCreateWithoutSchoolInput!]
  delete: [UserWhereUniqueInput!]
  deleteMany: [UserScalarWhereInput!]
  disconnect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutSchoolInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutSchoolInput!]
}

input UserUpdateManyWithoutTeamInput {
  connect: [UserWhereUniqueInput!]
  create: [UserCreateWithoutTeamInput!]
  delete: [UserWhereUniqueInput!]
  deleteMany: [UserScalarWhereInput!]
  disconnect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutTeamInput!]
  updateMany: [UserUpdateManyWithWhereNestedInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutTeamInput!]
}

input UserUpdateManyWithWhereNestedInput {
  data: UserUpdateManyDataInput!
  where: UserScalarWhereInput!
}

input UserUpdateOneRequiredWithoutAttachmentsInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutAttachmentsInput
  update: UserUpdateWithoutAttachmentsDataInput
  upsert: UserUpsertWithoutAttachmentsInput
}

input UserUpdateOneRequiredWithoutReactionsInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutReactionsInput
  update: UserUpdateWithoutReactionsDataInput
  upsert: UserUpsertWithoutReactionsInput
}

input UserUpdateOneRequiredWithoutTeachesInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutTeachesInput
  update: UserUpdateWithoutTeachesDataInput
  upsert: UserUpsertWithoutTeachesInput
}

input UserUpdateOneRequiredWithoutThreadsInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutThreadsInput
  update: UserUpdateWithoutThreadsDataInput
  upsert: UserUpsertWithoutThreadsInput
}

input UserUpdateOneRequiredWithoutVotedInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutVotedInput
  update: UserUpdateWithoutVotedDataInput
  upsert: UserUpsertWithoutVotedInput
}

input UserUpdateOneWithoutBallotsInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutBallotsInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutBallotsDataInput
  upsert: UserUpsertWithoutBallotsInput
}

input UserUpdateWithoutAttachmentsDataInput {
  ballots: BallotUpdateManyWithoutCreatorInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  gender: Gender
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  lastname: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  reactions: ReactionUpdateManyWithoutUserInput
  role: Role
  school: SchoolUpdateOneWithoutMembersInput
  teaches: TeamUpdateManyWithoutTeacherInput
  team: TeamUpdateOneWithoutUserInput
  Team: TeamUpdateOneWithoutMembersInput
  threads: ThreadUpdateManyWithoutUserInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  verified: NullableBoolFieldUpdateOperationsInput
  voted: VotedUpdateManyWithoutUserInput
  year: NullableIntFieldUpdateOperationsInput
}

input UserUpdateWithoutBallotsDataInput {
  attachments: AttachmentUpdateManyWithoutUserInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  gender: Gender
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  lastname: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  reactions: ReactionUpdateManyWithoutUserInput
  role: Role
  school: SchoolUpdateOneWithoutMembersInput
  teaches: TeamUpdateManyWithoutTeacherInput
  team: TeamUpdateOneWithoutUserInput
  Team: TeamUpdateOneWithoutMembersInput
  threads: ThreadUpdateManyWithoutUserInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  verified: NullableBoolFieldUpdateOperationsInput
  voted: VotedUpdateManyWithoutUserInput
  year: NullableIntFieldUpdateOperationsInput
}

input UserUpdateWithoutReactionsDataInput {
  attachments: AttachmentUpdateManyWithoutUserInput
  ballots: BallotUpdateManyWithoutCreatorInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  gender: Gender
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  lastname: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  role: Role
  school: SchoolUpdateOneWithoutMembersInput
  teaches: TeamUpdateManyWithoutTeacherInput
  team: TeamUpdateOneWithoutUserInput
  Team: TeamUpdateOneWithoutMembersInput
  threads: ThreadUpdateManyWithoutUserInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  verified: NullableBoolFieldUpdateOperationsInput
  voted: VotedUpdateManyWithoutUserInput
  year: NullableIntFieldUpdateOperationsInput
}

input UserUpdateWithoutSchoolDataInput {
  attachments: AttachmentUpdateManyWithoutUserInput
  ballots: BallotUpdateManyWithoutCreatorInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  gender: Gender
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  lastname: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  reactions: ReactionUpdateManyWithoutUserInput
  role: Role
  teaches: TeamUpdateManyWithoutTeacherInput
  team: TeamUpdateOneWithoutUserInput
  Team: TeamUpdateOneWithoutMembersInput
  threads: ThreadUpdateManyWithoutUserInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  verified: NullableBoolFieldUpdateOperationsInput
  voted: VotedUpdateManyWithoutUserInput
  year: NullableIntFieldUpdateOperationsInput
}

input UserUpdateWithoutTeachesDataInput {
  attachments: AttachmentUpdateManyWithoutUserInput
  ballots: BallotUpdateManyWithoutCreatorInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  gender: Gender
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  lastname: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  reactions: ReactionUpdateManyWithoutUserInput
  role: Role
  school: SchoolUpdateOneWithoutMembersInput
  team: TeamUpdateOneWithoutUserInput
  Team: TeamUpdateOneWithoutMembersInput
  threads: ThreadUpdateManyWithoutUserInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  verified: NullableBoolFieldUpdateOperationsInput
  voted: VotedUpdateManyWithoutUserInput
  year: NullableIntFieldUpdateOperationsInput
}

input UserUpdateWithoutTeamDataInput {
  attachments: AttachmentUpdateManyWithoutUserInput
  ballots: BallotUpdateManyWithoutCreatorInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  gender: Gender
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  lastname: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  reactions: ReactionUpdateManyWithoutUserInput
  role: Role
  school: SchoolUpdateOneWithoutMembersInput
  teaches: TeamUpdateManyWithoutTeacherInput
  team: TeamUpdateOneWithoutUserInput
  threads: ThreadUpdateManyWithoutUserInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  verified: NullableBoolFieldUpdateOperationsInput
  voted: VotedUpdateManyWithoutUserInput
  year: NullableIntFieldUpdateOperationsInput
}

input UserUpdateWithoutThreadsDataInput {
  attachments: AttachmentUpdateManyWithoutUserInput
  ballots: BallotUpdateManyWithoutCreatorInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  gender: Gender
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  lastname: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  reactions: ReactionUpdateManyWithoutUserInput
  role: Role
  school: SchoolUpdateOneWithoutMembersInput
  teaches: TeamUpdateManyWithoutTeacherInput
  team: TeamUpdateOneWithoutUserInput
  Team: TeamUpdateOneWithoutMembersInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  verified: NullableBoolFieldUpdateOperationsInput
  voted: VotedUpdateManyWithoutUserInput
  year: NullableIntFieldUpdateOperationsInput
}

input UserUpdateWithoutVotedDataInput {
  attachments: AttachmentUpdateManyWithoutUserInput
  ballots: BallotUpdateManyWithoutCreatorInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  gender: Gender
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  lastname: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  reactions: ReactionUpdateManyWithoutUserInput
  role: Role
  school: SchoolUpdateOneWithoutMembersInput
  teaches: TeamUpdateManyWithoutTeacherInput
  team: TeamUpdateOneWithoutUserInput
  Team: TeamUpdateOneWithoutMembersInput
  threads: ThreadUpdateManyWithoutUserInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  verified: NullableBoolFieldUpdateOperationsInput
  year: NullableIntFieldUpdateOperationsInput
}

input UserUpdateWithWhereUniqueWithoutSchoolInput {
  data: UserUpdateWithoutSchoolDataInput!
  where: UserWhereUniqueInput!
}

input UserUpdateWithWhereUniqueWithoutTeamInput {
  data: UserUpdateWithoutTeamDataInput!
  where: UserWhereUniqueInput!
}

input UserUpsertWithoutAttachmentsInput {
  create: UserCreateWithoutAttachmentsInput!
  update: UserUpdateWithoutAttachmentsDataInput!
}

input UserUpsertWithoutBallotsInput {
  create: UserCreateWithoutBallotsInput!
  update: UserUpdateWithoutBallotsDataInput!
}

input UserUpsertWithoutReactionsInput {
  create: UserCreateWithoutReactionsInput!
  update: UserUpdateWithoutReactionsDataInput!
}

input UserUpsertWithoutTeachesInput {
  create: UserCreateWithoutTeachesInput!
  update: UserUpdateWithoutTeachesDataInput!
}

input UserUpsertWithoutThreadsInput {
  create: UserCreateWithoutThreadsInput!
  update: UserUpdateWithoutThreadsDataInput!
}

input UserUpsertWithoutVotedInput {
  create: UserCreateWithoutVotedInput!
  update: UserUpdateWithoutVotedDataInput!
}

input UserUpsertWithWhereUniqueWithoutSchoolInput {
  create: UserCreateWithoutSchoolInput!
  update: UserUpdateWithoutSchoolDataInput!
  where: UserWhereUniqueInput!
}

input UserUpsertWithWhereUniqueWithoutTeamInput {
  create: UserCreateWithoutTeamInput!
  update: UserUpdateWithoutTeamDataInput!
  where: UserWhereUniqueInput!
}

input UserWhereInput {
  AND: [UserWhereInput!]
  attachments: AttachmentListRelationFilter
  ballots: BallotListRelationFilter
  canton: StringNullableFilter
  createdAt: DateTimeFilter
  email: StringNullableFilter
  emailVerified: DateTimeNullableFilter
  gender: Gender
  id: StringFilter
  image: StringNullableFilter
  lastname: StringNullableFilter
  name: StringNullableFilter
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  password: StringNullableFilter
  reactions: ReactionListRelationFilter
  role: Role
  school: SchoolWhereInput
  schoolId: StringNullableFilter
  teaches: TeamListRelationFilter
  team: TeamWhereInput
  Team: TeamWhereInput
  teamId: StringNullableFilter
  threads: ThreadListRelationFilter
  updatedAt: DateTimeFilter
  verified: BoolNullableFilter
  voted: VotedListRelationFilter
  year: IntNullableFilter
}

input UserWhereUniqueInput {
  email: String
  id: String
}

type Vote {
  ballot: Ballot!
  verify: String
}

input VoteCreateManyWithoutBallotInput {
  connect: [VoteWhereUniqueInput!]
  create: [VoteCreateWithoutBallotInput!]
}

input VoteCreateManyWithoutBallotRunInput {
  connect: [VoteWhereUniqueInput!]
  create: [VoteCreateWithoutBallotRunInput!]
}

input VoteCreateManyWithoutSchoolInput {
  connect: [VoteWhereUniqueInput!]
  create: [VoteCreateWithoutSchoolInput!]
}

input VoteCreateManyWithoutTeamInput {
  connect: [VoteWhereUniqueInput!]
  create: [VoteCreateWithoutTeamInput!]
}

input VoteCreateWithoutBallotInput {
  ballotRun: BallotRunCreateOneWithoutVoteInput
  canton: String
  id: String
  school: SchoolCreateOneWithoutVoteInput
  schooltype: String
  team: TeamCreateOneWithoutVoteInput
  verify: String
  vote: Int!
  year: Int
}

input VoteCreateWithoutBallotRunInput {
  ballot: BallotCreateOneWithoutVotesInput!
  canton: String
  id: String
  school: SchoolCreateOneWithoutVoteInput
  schooltype: String
  team: TeamCreateOneWithoutVoteInput
  verify: String
  vote: Int!
  year: Int
}

input VoteCreateWithoutSchoolInput {
  ballot: BallotCreateOneWithoutVotesInput!
  ballotRun: BallotRunCreateOneWithoutVoteInput
  canton: String
  id: String
  schooltype: String
  team: TeamCreateOneWithoutVoteInput
  verify: String
  vote: Int!
  year: Int
}

input VoteCreateWithoutTeamInput {
  ballot: BallotCreateOneWithoutVotesInput!
  ballotRun: BallotRunCreateOneWithoutVoteInput
  canton: String
  id: String
  school: SchoolCreateOneWithoutVoteInput
  schooltype: String
  verify: String
  vote: Int!
  year: Int
}

input VotedCreateManyWithoutBallotInput {
  connect: [VotedWhereUniqueInput!]
  create: [VotedCreateWithoutBallotInput!]
}

input VotedCreateManyWithoutSchoolInput {
  connect: [VotedWhereUniqueInput!]
  create: [VotedCreateWithoutSchoolInput!]
}

input VotedCreateManyWithoutTeamInput {
  connect: [VotedWhereUniqueInput!]
  create: [VotedCreateWithoutTeamInput!]
}

input VotedCreateManyWithoutUserInput {
  connect: [VotedWhereUniqueInput!]
  create: [VotedCreateWithoutUserInput!]
}

input VotedCreateWithoutBallotInput {
  id: String
  school: SchoolCreateOneWithoutVotedInput
  signature: String
  team: TeamCreateOneWithoutVotedInput
  user: UserCreateOneWithoutVotedInput!
}

input VotedCreateWithoutSchoolInput {
  ballot: BallotCreateOneWithoutVotedInput!
  id: String
  signature: String
  team: TeamCreateOneWithoutVotedInput
  user: UserCreateOneWithoutVotedInput!
}

input VotedCreateWithoutTeamInput {
  ballot: BallotCreateOneWithoutVotedInput!
  id: String
  school: SchoolCreateOneWithoutVotedInput
  signature: String
  user: UserCreateOneWithoutVotedInput!
}

input VotedCreateWithoutUserInput {
  ballot: BallotCreateOneWithoutVotedInput!
  id: String
  school: SchoolCreateOneWithoutVotedInput
  signature: String
  team: TeamCreateOneWithoutVotedInput
}

input VotedListRelationFilter {
  every: VotedWhereInput
  none: VotedWhereInput
  some: VotedWhereInput
}

input VotedScalarWhereInput {
  AND: [VotedScalarWhereInput!]
  ballotId: StringFilter
  id: StringFilter
  NOT: [VotedScalarWhereInput!]
  OR: [VotedScalarWhereInput!]
  schoolId: StringNullableFilter
  signature: StringNullableFilter
  teamId: StringNullableFilter
  userId: StringFilter
}

input VotedUpdateManyDataInput {
  id: StringFieldUpdateOperationsInput
  signature: NullableStringFieldUpdateOperationsInput
}

input VotedUpdateManyWithoutBallotInput {
  connect: [VotedWhereUniqueInput!]
  create: [VotedCreateWithoutBallotInput!]
  delete: [VotedWhereUniqueInput!]
  deleteMany: [VotedScalarWhereInput!]
  disconnect: [VotedWhereUniqueInput!]
  set: [VotedWhereUniqueInput!]
  update: [VotedUpdateWithWhereUniqueWithoutBallotInput!]
  updateMany: [VotedUpdateManyWithWhereNestedInput!]
  upsert: [VotedUpsertWithWhereUniqueWithoutBallotInput!]
}

input VotedUpdateManyWithoutSchoolInput {
  connect: [VotedWhereUniqueInput!]
  create: [VotedCreateWithoutSchoolInput!]
  delete: [VotedWhereUniqueInput!]
  deleteMany: [VotedScalarWhereInput!]
  disconnect: [VotedWhereUniqueInput!]
  set: [VotedWhereUniqueInput!]
  update: [VotedUpdateWithWhereUniqueWithoutSchoolInput!]
  updateMany: [VotedUpdateManyWithWhereNestedInput!]
  upsert: [VotedUpsertWithWhereUniqueWithoutSchoolInput!]
}

input VotedUpdateManyWithoutTeamInput {
  connect: [VotedWhereUniqueInput!]
  create: [VotedCreateWithoutTeamInput!]
  delete: [VotedWhereUniqueInput!]
  deleteMany: [VotedScalarWhereInput!]
  disconnect: [VotedWhereUniqueInput!]
  set: [VotedWhereUniqueInput!]
  update: [VotedUpdateWithWhereUniqueWithoutTeamInput!]
  updateMany: [VotedUpdateManyWithWhereNestedInput!]
  upsert: [VotedUpsertWithWhereUniqueWithoutTeamInput!]
}

input VotedUpdateManyWithoutUserInput {
  connect: [VotedWhereUniqueInput!]
  create: [VotedCreateWithoutUserInput!]
  delete: [VotedWhereUniqueInput!]
  deleteMany: [VotedScalarWhereInput!]
  disconnect: [VotedWhereUniqueInput!]
  set: [VotedWhereUniqueInput!]
  update: [VotedUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [VotedUpdateManyWithWhereNestedInput!]
  upsert: [VotedUpsertWithWhereUniqueWithoutUserInput!]
}

input VotedUpdateManyWithWhereNestedInput {
  data: VotedUpdateManyDataInput!
  where: VotedScalarWhereInput!
}

input VotedUpdateWithoutBallotDataInput {
  id: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneWithoutVotedInput
  signature: NullableStringFieldUpdateOperationsInput
  team: TeamUpdateOneWithoutVotedInput
  user: UserUpdateOneRequiredWithoutVotedInput
}

input VotedUpdateWithoutSchoolDataInput {
  ballot: BallotUpdateOneRequiredWithoutVotedInput
  id: StringFieldUpdateOperationsInput
  signature: NullableStringFieldUpdateOperationsInput
  team: TeamUpdateOneWithoutVotedInput
  user: UserUpdateOneRequiredWithoutVotedInput
}

input VotedUpdateWithoutTeamDataInput {
  ballot: BallotUpdateOneRequiredWithoutVotedInput
  id: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneWithoutVotedInput
  signature: NullableStringFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutVotedInput
}

input VotedUpdateWithoutUserDataInput {
  ballot: BallotUpdateOneRequiredWithoutVotedInput
  id: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneWithoutVotedInput
  signature: NullableStringFieldUpdateOperationsInput
  team: TeamUpdateOneWithoutVotedInput
}

input VotedUpdateWithWhereUniqueWithoutBallotInput {
  data: VotedUpdateWithoutBallotDataInput!
  where: VotedWhereUniqueInput!
}

input VotedUpdateWithWhereUniqueWithoutSchoolInput {
  data: VotedUpdateWithoutSchoolDataInput!
  where: VotedWhereUniqueInput!
}

input VotedUpdateWithWhereUniqueWithoutTeamInput {
  data: VotedUpdateWithoutTeamDataInput!
  where: VotedWhereUniqueInput!
}

input VotedUpdateWithWhereUniqueWithoutUserInput {
  data: VotedUpdateWithoutUserDataInput!
  where: VotedWhereUniqueInput!
}

input VotedUpsertWithWhereUniqueWithoutBallotInput {
  create: VotedCreateWithoutBallotInput!
  update: VotedUpdateWithoutBallotDataInput!
  where: VotedWhereUniqueInput!
}

input VotedUpsertWithWhereUniqueWithoutSchoolInput {
  create: VotedCreateWithoutSchoolInput!
  update: VotedUpdateWithoutSchoolDataInput!
  where: VotedWhereUniqueInput!
}

input VotedUpsertWithWhereUniqueWithoutTeamInput {
  create: VotedCreateWithoutTeamInput!
  update: VotedUpdateWithoutTeamDataInput!
  where: VotedWhereUniqueInput!
}

input VotedUpsertWithWhereUniqueWithoutUserInput {
  create: VotedCreateWithoutUserInput!
  update: VotedUpdateWithoutUserDataInput!
  where: VotedWhereUniqueInput!
}

input VotedWhereInput {
  AND: [VotedWhereInput!]
  ballot: BallotWhereInput
  ballotId: StringFilter
  id: StringFilter
  NOT: [VotedWhereInput!]
  OR: [VotedWhereInput!]
  school: SchoolWhereInput
  schoolId: StringNullableFilter
  signature: StringNullableFilter
  team: TeamWhereInput
  teamId: StringNullableFilter
  user: UserWhereInput
  userId: StringFilter
}

input VotedWhereUniqueInput {
  id: String
}

input VoteListRelationFilter {
  every: VoteWhereInput
  none: VoteWhereInput
  some: VoteWhereInput
}

input VoteScalarWhereInput {
  AND: [VoteScalarWhereInput!]
  ballotId: StringFilter
  ballotRunId: StringNullableFilter
  canton: StringNullableFilter
  id: StringFilter
  NOT: [VoteScalarWhereInput!]
  OR: [VoteScalarWhereInput!]
  schoolId: StringNullableFilter
  schooltype: StringNullableFilter
  teamId: StringNullableFilter
  verify: StringNullableFilter
  vote: IntFilter
  year: IntNullableFilter
}

input VoteUpdateManyDataInput {
  canton: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  schooltype: NullableStringFieldUpdateOperationsInput
  verify: NullableStringFieldUpdateOperationsInput
  vote: IntFieldUpdateOperationsInput
  year: NullableIntFieldUpdateOperationsInput
}

input VoteUpdateManyWithoutBallotInput {
  connect: [VoteWhereUniqueInput!]
  create: [VoteCreateWithoutBallotInput!]
  delete: [VoteWhereUniqueInput!]
  deleteMany: [VoteScalarWhereInput!]
  disconnect: [VoteWhereUniqueInput!]
  set: [VoteWhereUniqueInput!]
  update: [VoteUpdateWithWhereUniqueWithoutBallotInput!]
  updateMany: [VoteUpdateManyWithWhereNestedInput!]
  upsert: [VoteUpsertWithWhereUniqueWithoutBallotInput!]
}

input VoteUpdateManyWithoutBallotRunInput {
  connect: [VoteWhereUniqueInput!]
  create: [VoteCreateWithoutBallotRunInput!]
  delete: [VoteWhereUniqueInput!]
  deleteMany: [VoteScalarWhereInput!]
  disconnect: [VoteWhereUniqueInput!]
  set: [VoteWhereUniqueInput!]
  update: [VoteUpdateWithWhereUniqueWithoutBallotRunInput!]
  updateMany: [VoteUpdateManyWithWhereNestedInput!]
  upsert: [VoteUpsertWithWhereUniqueWithoutBallotRunInput!]
}

input VoteUpdateManyWithoutSchoolInput {
  connect: [VoteWhereUniqueInput!]
  create: [VoteCreateWithoutSchoolInput!]
  delete: [VoteWhereUniqueInput!]
  deleteMany: [VoteScalarWhereInput!]
  disconnect: [VoteWhereUniqueInput!]
  set: [VoteWhereUniqueInput!]
  update: [VoteUpdateWithWhereUniqueWithoutSchoolInput!]
  updateMany: [VoteUpdateManyWithWhereNestedInput!]
  upsert: [VoteUpsertWithWhereUniqueWithoutSchoolInput!]
}

input VoteUpdateManyWithoutTeamInput {
  connect: [VoteWhereUniqueInput!]
  create: [VoteCreateWithoutTeamInput!]
  delete: [VoteWhereUniqueInput!]
  deleteMany: [VoteScalarWhereInput!]
  disconnect: [VoteWhereUniqueInput!]
  set: [VoteWhereUniqueInput!]
  update: [VoteUpdateWithWhereUniqueWithoutTeamInput!]
  updateMany: [VoteUpdateManyWithWhereNestedInput!]
  upsert: [VoteUpsertWithWhereUniqueWithoutTeamInput!]
}

input VoteUpdateManyWithWhereNestedInput {
  data: VoteUpdateManyDataInput!
  where: VoteScalarWhereInput!
}

input VoteUpdateWithoutBallotDataInput {
  ballotRun: BallotRunUpdateOneWithoutVoteInput
  canton: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneWithoutVoteInput
  schooltype: NullableStringFieldUpdateOperationsInput
  team: TeamUpdateOneWithoutVoteInput
  verify: NullableStringFieldUpdateOperationsInput
  vote: IntFieldUpdateOperationsInput
  year: NullableIntFieldUpdateOperationsInput
}

input VoteUpdateWithoutBallotRunDataInput {
  ballot: BallotUpdateOneRequiredWithoutVotesInput
  canton: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneWithoutVoteInput
  schooltype: NullableStringFieldUpdateOperationsInput
  team: TeamUpdateOneWithoutVoteInput
  verify: NullableStringFieldUpdateOperationsInput
  vote: IntFieldUpdateOperationsInput
  year: NullableIntFieldUpdateOperationsInput
}

input VoteUpdateWithoutSchoolDataInput {
  ballot: BallotUpdateOneRequiredWithoutVotesInput
  ballotRun: BallotRunUpdateOneWithoutVoteInput
  canton: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  schooltype: NullableStringFieldUpdateOperationsInput
  team: TeamUpdateOneWithoutVoteInput
  verify: NullableStringFieldUpdateOperationsInput
  vote: IntFieldUpdateOperationsInput
  year: NullableIntFieldUpdateOperationsInput
}

input VoteUpdateWithoutTeamDataInput {
  ballot: BallotUpdateOneRequiredWithoutVotesInput
  ballotRun: BallotRunUpdateOneWithoutVoteInput
  canton: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneWithoutVoteInput
  schooltype: NullableStringFieldUpdateOperationsInput
  verify: NullableStringFieldUpdateOperationsInput
  vote: IntFieldUpdateOperationsInput
  year: NullableIntFieldUpdateOperationsInput
}

input VoteUpdateWithWhereUniqueWithoutBallotInput {
  data: VoteUpdateWithoutBallotDataInput!
  where: VoteWhereUniqueInput!
}

input VoteUpdateWithWhereUniqueWithoutBallotRunInput {
  data: VoteUpdateWithoutBallotRunDataInput!
  where: VoteWhereUniqueInput!
}

input VoteUpdateWithWhereUniqueWithoutSchoolInput {
  data: VoteUpdateWithoutSchoolDataInput!
  where: VoteWhereUniqueInput!
}

input VoteUpdateWithWhereUniqueWithoutTeamInput {
  data: VoteUpdateWithoutTeamDataInput!
  where: VoteWhereUniqueInput!
}

input VoteUpsertWithWhereUniqueWithoutBallotInput {
  create: VoteCreateWithoutBallotInput!
  update: VoteUpdateWithoutBallotDataInput!
  where: VoteWhereUniqueInput!
}

input VoteUpsertWithWhereUniqueWithoutBallotRunInput {
  create: VoteCreateWithoutBallotRunInput!
  update: VoteUpdateWithoutBallotRunDataInput!
  where: VoteWhereUniqueInput!
}

input VoteUpsertWithWhereUniqueWithoutSchoolInput {
  create: VoteCreateWithoutSchoolInput!
  update: VoteUpdateWithoutSchoolDataInput!
  where: VoteWhereUniqueInput!
}

input VoteUpsertWithWhereUniqueWithoutTeamInput {
  create: VoteCreateWithoutTeamInput!
  update: VoteUpdateWithoutTeamDataInput!
  where: VoteWhereUniqueInput!
}

input VoteWhereInput {
  AND: [VoteWhereInput!]
  ballot: BallotWhereInput
  ballotId: StringFilter
  ballotRun: BallotRunWhereInput
  ballotRunId: StringNullableFilter
  canton: StringNullableFilter
  id: StringFilter
  NOT: [VoteWhereInput!]
  OR: [VoteWhereInput!]
  school: SchoolWhereInput
  schoolId: StringNullableFilter
  schooltype: StringNullableFilter
  team: TeamWhereInput
  teamId: StringNullableFilter
  verify: StringNullableFilter
  vote: IntFilter
  year: IntNullableFilter
}

input VoteWhereUniqueInput {
  id: String
}
