### This file was generated by Nexus Schema
### Do not make changes to this file directly

type Activity {
  ballotId: String
  card: String
  id: Int!
  school: School!
  summary: String
  team: Team!
  time: DateTime!
  type: ActivityType!
  user: User!
  visibility: Visibility!
  workId: String
}

input ActivityCreateInput {
  ballot: BallotCreateOneWithoutActivityInput
  card: String
  discussion: DiscussionCreateOneWithoutActivityInput
  school: SchoolCreateOneWithoutActivityInput!
  summary: String
  team: TeamCreateOneWithoutActivityInput!
  time: DateTime
  type: ActivityType!
  user: UserCreateOneWithoutActivityInput!
  visibility: Visibility!
  work: WorkCreateOneWithoutActivitiesInput
}

input ActivityCreateManyWithoutBallotInput {
  connect: [ActivityWhereUniqueInput!]
  connectOrCreate: [ActivityCreateOrConnectWithoutballotInput!]
  create: [ActivityCreateWithoutBallotInput!]
}

input ActivityCreateManyWithoutDiscussionInput {
  connect: [ActivityWhereUniqueInput!]
  connectOrCreate: [ActivityCreateOrConnectWithoutdiscussionInput!]
  create: [ActivityCreateWithoutDiscussionInput!]
}

input ActivityCreateManyWithoutSchoolInput {
  connect: [ActivityWhereUniqueInput!]
  connectOrCreate: [ActivityCreateOrConnectWithoutschoolInput!]
  create: [ActivityCreateWithoutSchoolInput!]
}

input ActivityCreateManyWithoutTeamInput {
  connect: [ActivityWhereUniqueInput!]
  connectOrCreate: [ActivityCreateOrConnectWithoutteamInput!]
  create: [ActivityCreateWithoutTeamInput!]
}

input ActivityCreateManyWithoutUserInput {
  connect: [ActivityWhereUniqueInput!]
  connectOrCreate: [ActivityCreateOrConnectWithoutuserInput!]
  create: [ActivityCreateWithoutUserInput!]
}

input ActivityCreateManyWithoutWorkInput {
  connect: [ActivityWhereUniqueInput!]
  connectOrCreate: [ActivityCreateOrConnectWithoutworkInput!]
  create: [ActivityCreateWithoutWorkInput!]
}

input ActivityCreateOrConnectWithoutballotInput {
  create: ActivityCreateWithoutBallotInput!
  where: ActivityWhereUniqueInput!
}

input ActivityCreateOrConnectWithoutdiscussionInput {
  create: ActivityCreateWithoutDiscussionInput!
  where: ActivityWhereUniqueInput!
}

input ActivityCreateOrConnectWithoutschoolInput {
  create: ActivityCreateWithoutSchoolInput!
  where: ActivityWhereUniqueInput!
}

input ActivityCreateOrConnectWithoutteamInput {
  create: ActivityCreateWithoutTeamInput!
  where: ActivityWhereUniqueInput!
}

input ActivityCreateOrConnectWithoutuserInput {
  create: ActivityCreateWithoutUserInput!
  where: ActivityWhereUniqueInput!
}

input ActivityCreateOrConnectWithoutworkInput {
  create: ActivityCreateWithoutWorkInput!
  where: ActivityWhereUniqueInput!
}

input ActivityCreateWithoutBallotInput {
  card: String
  discussion: DiscussionCreateOneWithoutActivityInput
  school: SchoolCreateOneWithoutActivityInput!
  summary: String
  team: TeamCreateOneWithoutActivityInput!
  time: DateTime
  type: ActivityType!
  user: UserCreateOneWithoutActivityInput!
  visibility: Visibility!
  work: WorkCreateOneWithoutActivitiesInput
}

input ActivityCreateWithoutDiscussionInput {
  ballot: BallotCreateOneWithoutActivityInput
  card: String
  school: SchoolCreateOneWithoutActivityInput!
  summary: String
  team: TeamCreateOneWithoutActivityInput!
  time: DateTime
  type: ActivityType!
  user: UserCreateOneWithoutActivityInput!
  visibility: Visibility!
  work: WorkCreateOneWithoutActivitiesInput
}

input ActivityCreateWithoutSchoolInput {
  ballot: BallotCreateOneWithoutActivityInput
  card: String
  discussion: DiscussionCreateOneWithoutActivityInput
  summary: String
  team: TeamCreateOneWithoutActivityInput!
  time: DateTime
  type: ActivityType!
  user: UserCreateOneWithoutActivityInput!
  visibility: Visibility!
  work: WorkCreateOneWithoutActivitiesInput
}

input ActivityCreateWithoutTeamInput {
  ballot: BallotCreateOneWithoutActivityInput
  card: String
  discussion: DiscussionCreateOneWithoutActivityInput
  school: SchoolCreateOneWithoutActivityInput!
  summary: String
  time: DateTime
  type: ActivityType!
  user: UserCreateOneWithoutActivityInput!
  visibility: Visibility!
  work: WorkCreateOneWithoutActivitiesInput
}

input ActivityCreateWithoutUserInput {
  ballot: BallotCreateOneWithoutActivityInput
  card: String
  discussion: DiscussionCreateOneWithoutActivityInput
  school: SchoolCreateOneWithoutActivityInput!
  summary: String
  team: TeamCreateOneWithoutActivityInput!
  time: DateTime
  type: ActivityType!
  visibility: Visibility!
  work: WorkCreateOneWithoutActivitiesInput
}

input ActivityCreateWithoutWorkInput {
  ballot: BallotCreateOneWithoutActivityInput
  card: String
  discussion: DiscussionCreateOneWithoutActivityInput
  school: SchoolCreateOneWithoutActivityInput!
  summary: String
  team: TeamCreateOneWithoutActivityInput!
  time: DateTime
  type: ActivityType!
  user: UserCreateOneWithoutActivityInput!
  visibility: Visibility!
}

input ActivityListRelationFilter {
  every: ActivityWhereInput
  none: ActivityWhereInput
  some: ActivityWhereInput
}

input ActivityOrderByInput {
  ballotId: SortOrder
  card: SortOrder
  discussionId: SortOrder
  id: SortOrder
  schoolId: SortOrder
  summary: SortOrder
  teamId: SortOrder
  time: SortOrder
  type: SortOrder
  userId: SortOrder
  visibility: SortOrder
  workId: SortOrder
}

input ActivityScalarWhereInput {
  AND: [ActivityScalarWhereInput!]
  ballotId: StringNullableFilter
  card: StringNullableFilter
  discussionId: StringNullableFilter
  id: IntFilter
  NOT: [ActivityScalarWhereInput!]
  OR: [ActivityScalarWhereInput!]
  schoolId: StringFilter
  summary: StringNullableFilter
  teamId: StringFilter
  time: DateTimeFilter
  type: EnumActivityTypeFilter
  userId: StringFilter
  visibility: EnumVisibilityFilter
  workId: StringNullableFilter
}

enum ActivityType {
  Attachment
  Discussion
  Test
  UserAccept
  UserInvite
  Vote
  Work
}

input ActivityUpdateManyMutationInput {
  card: NullableStringFieldUpdateOperationsInput
  summary: NullableStringFieldUpdateOperationsInput
  time: DateTimeFieldUpdateOperationsInput
  type: EnumActivityTypeFieldUpdateOperationsInput
  visibility: EnumVisibilityFieldUpdateOperationsInput
}

input ActivityUpdateManyWithoutBallotInput {
  connect: [ActivityWhereUniqueInput!]
  connectOrCreate: [ActivityCreateOrConnectWithoutballotInput!]
  create: [ActivityCreateWithoutBallotInput!]
  delete: [ActivityWhereUniqueInput!]
  deleteMany: [ActivityScalarWhereInput!]
  disconnect: [ActivityWhereUniqueInput!]
  set: [ActivityWhereUniqueInput!]
  update: [ActivityUpdateWithWhereUniqueWithoutBallotInput!]
  updateMany: [ActivityUpdateManyWithWhereWithoutBallotInput!]
  upsert: [ActivityUpsertWithWhereUniqueWithoutBallotInput!]
}

input ActivityUpdateManyWithoutDiscussionInput {
  connect: [ActivityWhereUniqueInput!]
  connectOrCreate: [ActivityCreateOrConnectWithoutdiscussionInput!]
  create: [ActivityCreateWithoutDiscussionInput!]
  delete: [ActivityWhereUniqueInput!]
  deleteMany: [ActivityScalarWhereInput!]
  disconnect: [ActivityWhereUniqueInput!]
  set: [ActivityWhereUniqueInput!]
  update: [ActivityUpdateWithWhereUniqueWithoutDiscussionInput!]
  updateMany: [ActivityUpdateManyWithWhereWithoutDiscussionInput!]
  upsert: [ActivityUpsertWithWhereUniqueWithoutDiscussionInput!]
}

input ActivityUpdateManyWithoutSchoolInput {
  connect: [ActivityWhereUniqueInput!]
  connectOrCreate: [ActivityCreateOrConnectWithoutschoolInput!]
  create: [ActivityCreateWithoutSchoolInput!]
  delete: [ActivityWhereUniqueInput!]
  deleteMany: [ActivityScalarWhereInput!]
  disconnect: [ActivityWhereUniqueInput!]
  set: [ActivityWhereUniqueInput!]
  update: [ActivityUpdateWithWhereUniqueWithoutSchoolInput!]
  updateMany: [ActivityUpdateManyWithWhereWithoutSchoolInput!]
  upsert: [ActivityUpsertWithWhereUniqueWithoutSchoolInput!]
}

input ActivityUpdateManyWithoutTeamInput {
  connect: [ActivityWhereUniqueInput!]
  connectOrCreate: [ActivityCreateOrConnectWithoutteamInput!]
  create: [ActivityCreateWithoutTeamInput!]
  delete: [ActivityWhereUniqueInput!]
  deleteMany: [ActivityScalarWhereInput!]
  disconnect: [ActivityWhereUniqueInput!]
  set: [ActivityWhereUniqueInput!]
  update: [ActivityUpdateWithWhereUniqueWithoutTeamInput!]
  updateMany: [ActivityUpdateManyWithWhereWithoutTeamInput!]
  upsert: [ActivityUpsertWithWhereUniqueWithoutTeamInput!]
}

input ActivityUpdateManyWithoutUserInput {
  connect: [ActivityWhereUniqueInput!]
  connectOrCreate: [ActivityCreateOrConnectWithoutuserInput!]
  create: [ActivityCreateWithoutUserInput!]
  delete: [ActivityWhereUniqueInput!]
  deleteMany: [ActivityScalarWhereInput!]
  disconnect: [ActivityWhereUniqueInput!]
  set: [ActivityWhereUniqueInput!]
  update: [ActivityUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [ActivityUpdateManyWithWhereWithoutUserInput!]
  upsert: [ActivityUpsertWithWhereUniqueWithoutUserInput!]
}

input ActivityUpdateManyWithoutWorkInput {
  connect: [ActivityWhereUniqueInput!]
  connectOrCreate: [ActivityCreateOrConnectWithoutworkInput!]
  create: [ActivityCreateWithoutWorkInput!]
  delete: [ActivityWhereUniqueInput!]
  deleteMany: [ActivityScalarWhereInput!]
  disconnect: [ActivityWhereUniqueInput!]
  set: [ActivityWhereUniqueInput!]
  update: [ActivityUpdateWithWhereUniqueWithoutWorkInput!]
  updateMany: [ActivityUpdateManyWithWhereWithoutWorkInput!]
  upsert: [ActivityUpsertWithWhereUniqueWithoutWorkInput!]
}

input ActivityUpdateManyWithWhereWithoutBallotInput {
  data: ActivityUpdateManyMutationInput!
  where: ActivityScalarWhereInput!
}

input ActivityUpdateManyWithWhereWithoutDiscussionInput {
  data: ActivityUpdateManyMutationInput!
  where: ActivityScalarWhereInput!
}

input ActivityUpdateManyWithWhereWithoutSchoolInput {
  data: ActivityUpdateManyMutationInput!
  where: ActivityScalarWhereInput!
}

input ActivityUpdateManyWithWhereWithoutTeamInput {
  data: ActivityUpdateManyMutationInput!
  where: ActivityScalarWhereInput!
}

input ActivityUpdateManyWithWhereWithoutUserInput {
  data: ActivityUpdateManyMutationInput!
  where: ActivityScalarWhereInput!
}

input ActivityUpdateManyWithWhereWithoutWorkInput {
  data: ActivityUpdateManyMutationInput!
  where: ActivityScalarWhereInput!
}

input ActivityUpdateWithoutBallotInput {
  card: NullableStringFieldUpdateOperationsInput
  discussion: DiscussionUpdateOneWithoutActivityInput
  school: SchoolUpdateOneRequiredWithoutActivityInput
  summary: NullableStringFieldUpdateOperationsInput
  team: TeamUpdateOneRequiredWithoutActivityInput
  time: DateTimeFieldUpdateOperationsInput
  type: EnumActivityTypeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutActivityInput
  visibility: EnumVisibilityFieldUpdateOperationsInput
  work: WorkUpdateOneWithoutActivitiesInput
}

input ActivityUpdateWithoutDiscussionInput {
  ballot: BallotUpdateOneWithoutActivityInput
  card: NullableStringFieldUpdateOperationsInput
  school: SchoolUpdateOneRequiredWithoutActivityInput
  summary: NullableStringFieldUpdateOperationsInput
  team: TeamUpdateOneRequiredWithoutActivityInput
  time: DateTimeFieldUpdateOperationsInput
  type: EnumActivityTypeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutActivityInput
  visibility: EnumVisibilityFieldUpdateOperationsInput
  work: WorkUpdateOneWithoutActivitiesInput
}

input ActivityUpdateWithoutSchoolInput {
  ballot: BallotUpdateOneWithoutActivityInput
  card: NullableStringFieldUpdateOperationsInput
  discussion: DiscussionUpdateOneWithoutActivityInput
  summary: NullableStringFieldUpdateOperationsInput
  team: TeamUpdateOneRequiredWithoutActivityInput
  time: DateTimeFieldUpdateOperationsInput
  type: EnumActivityTypeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutActivityInput
  visibility: EnumVisibilityFieldUpdateOperationsInput
  work: WorkUpdateOneWithoutActivitiesInput
}

input ActivityUpdateWithoutTeamInput {
  ballot: BallotUpdateOneWithoutActivityInput
  card: NullableStringFieldUpdateOperationsInput
  discussion: DiscussionUpdateOneWithoutActivityInput
  school: SchoolUpdateOneRequiredWithoutActivityInput
  summary: NullableStringFieldUpdateOperationsInput
  time: DateTimeFieldUpdateOperationsInput
  type: EnumActivityTypeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutActivityInput
  visibility: EnumVisibilityFieldUpdateOperationsInput
  work: WorkUpdateOneWithoutActivitiesInput
}

input ActivityUpdateWithoutUserInput {
  ballot: BallotUpdateOneWithoutActivityInput
  card: NullableStringFieldUpdateOperationsInput
  discussion: DiscussionUpdateOneWithoutActivityInput
  school: SchoolUpdateOneRequiredWithoutActivityInput
  summary: NullableStringFieldUpdateOperationsInput
  team: TeamUpdateOneRequiredWithoutActivityInput
  time: DateTimeFieldUpdateOperationsInput
  type: EnumActivityTypeFieldUpdateOperationsInput
  visibility: EnumVisibilityFieldUpdateOperationsInput
  work: WorkUpdateOneWithoutActivitiesInput
}

input ActivityUpdateWithoutWorkInput {
  ballot: BallotUpdateOneWithoutActivityInput
  card: NullableStringFieldUpdateOperationsInput
  discussion: DiscussionUpdateOneWithoutActivityInput
  school: SchoolUpdateOneRequiredWithoutActivityInput
  summary: NullableStringFieldUpdateOperationsInput
  team: TeamUpdateOneRequiredWithoutActivityInput
  time: DateTimeFieldUpdateOperationsInput
  type: EnumActivityTypeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutActivityInput
  visibility: EnumVisibilityFieldUpdateOperationsInput
}

input ActivityUpdateWithWhereUniqueWithoutBallotInput {
  data: ActivityUpdateWithoutBallotInput!
  where: ActivityWhereUniqueInput!
}

input ActivityUpdateWithWhereUniqueWithoutDiscussionInput {
  data: ActivityUpdateWithoutDiscussionInput!
  where: ActivityWhereUniqueInput!
}

input ActivityUpdateWithWhereUniqueWithoutSchoolInput {
  data: ActivityUpdateWithoutSchoolInput!
  where: ActivityWhereUniqueInput!
}

input ActivityUpdateWithWhereUniqueWithoutTeamInput {
  data: ActivityUpdateWithoutTeamInput!
  where: ActivityWhereUniqueInput!
}

input ActivityUpdateWithWhereUniqueWithoutUserInput {
  data: ActivityUpdateWithoutUserInput!
  where: ActivityWhereUniqueInput!
}

input ActivityUpdateWithWhereUniqueWithoutWorkInput {
  data: ActivityUpdateWithoutWorkInput!
  where: ActivityWhereUniqueInput!
}

input ActivityUpsertWithWhereUniqueWithoutBallotInput {
  create: ActivityCreateWithoutBallotInput!
  update: ActivityUpdateWithoutBallotInput!
  where: ActivityWhereUniqueInput!
}

input ActivityUpsertWithWhereUniqueWithoutDiscussionInput {
  create: ActivityCreateWithoutDiscussionInput!
  update: ActivityUpdateWithoutDiscussionInput!
  where: ActivityWhereUniqueInput!
}

input ActivityUpsertWithWhereUniqueWithoutSchoolInput {
  create: ActivityCreateWithoutSchoolInput!
  update: ActivityUpdateWithoutSchoolInput!
  where: ActivityWhereUniqueInput!
}

input ActivityUpsertWithWhereUniqueWithoutTeamInput {
  create: ActivityCreateWithoutTeamInput!
  update: ActivityUpdateWithoutTeamInput!
  where: ActivityWhereUniqueInput!
}

input ActivityUpsertWithWhereUniqueWithoutUserInput {
  create: ActivityCreateWithoutUserInput!
  update: ActivityUpdateWithoutUserInput!
  where: ActivityWhereUniqueInput!
}

input ActivityUpsertWithWhereUniqueWithoutWorkInput {
  create: ActivityCreateWithoutWorkInput!
  update: ActivityUpdateWithoutWorkInput!
  where: ActivityWhereUniqueInput!
}

input ActivityWhereInput {
  AND: [ActivityWhereInput!]
  ballot: BallotWhereInput
  ballotId: StringNullableFilter
  card: StringNullableFilter
  discussion: DiscussionWhereInput
  discussionId: StringNullableFilter
  id: IntFilter
  NOT: [ActivityWhereInput!]
  OR: [ActivityWhereInput!]
  school: SchoolWhereInput
  schoolId: StringFilter
  summary: StringNullableFilter
  team: TeamWhereInput
  teamId: StringFilter
  time: DateTimeFilter
  type: EnumActivityTypeFilter
  user: UserWhereInput
  userId: StringFilter
  visibility: EnumVisibilityFilter
  work: WorkWhereInput
  workId: StringNullableFilter
}

input ActivityWhereUniqueInput {
  id: Int
}

type Attachment {
  createdAt: DateTime!
  file: String!
  id: String!
  title: String!
  type: String!
  updatedAt: DateTime!
  user: User!
}

input AttachmentCreateManyWithoutBallotInput {
  connect: [AttachmentWhereUniqueInput!]
  connectOrCreate: [AttachmentCreateOrConnectWithoutballotInput!]
  create: [AttachmentCreateWithoutBallotInput!]
}

input AttachmentCreateManyWithoutDiscussionInput {
  connect: [AttachmentWhereUniqueInput!]
  connectOrCreate: [AttachmentCreateOrConnectWithoutdiscussionInput!]
  create: [AttachmentCreateWithoutDiscussionInput!]
}

input AttachmentCreateManyWithoutSchoolInput {
  connect: [AttachmentWhereUniqueInput!]
  connectOrCreate: [AttachmentCreateOrConnectWithoutschoolInput!]
  create: [AttachmentCreateWithoutSchoolInput!]
}

input AttachmentCreateManyWithoutTeamInput {
  connect: [AttachmentWhereUniqueInput!]
  connectOrCreate: [AttachmentCreateOrConnectWithoutteamInput!]
  create: [AttachmentCreateWithoutTeamInput!]
}

input AttachmentCreateManyWithoutUserInput {
  connect: [AttachmentWhereUniqueInput!]
  connectOrCreate: [AttachmentCreateOrConnectWithoutuserInput!]
  create: [AttachmentCreateWithoutUserInput!]
}

input AttachmentCreateManyWithoutWorkInput {
  connect: [AttachmentWhereUniqueInput!]
  connectOrCreate: [AttachmentCreateOrConnectWithoutworkInput!]
  create: [AttachmentCreateWithoutWorkInput!]
}

input AttachmentCreateOrConnectWithoutballotInput {
  create: AttachmentCreateWithoutBallotInput!
  where: AttachmentWhereUniqueInput!
}

input AttachmentCreateOrConnectWithoutdiscussionInput {
  create: AttachmentCreateWithoutDiscussionInput!
  where: AttachmentWhereUniqueInput!
}

input AttachmentCreateOrConnectWithoutschoolInput {
  create: AttachmentCreateWithoutSchoolInput!
  where: AttachmentWhereUniqueInput!
}

input AttachmentCreateOrConnectWithoutteamInput {
  create: AttachmentCreateWithoutTeamInput!
  where: AttachmentWhereUniqueInput!
}

input AttachmentCreateOrConnectWithoutuserInput {
  create: AttachmentCreateWithoutUserInput!
  where: AttachmentWhereUniqueInput!
}

input AttachmentCreateOrConnectWithoutworkInput {
  create: AttachmentCreateWithoutWorkInput!
  where: AttachmentWhereUniqueInput!
}

input AttachmentCreateWithoutBallotInput {
  card: String
  createdAt: DateTime
  discussion: DiscussionCreateOneWithoutAttachmentsInput
  file: String!
  id: String
  school: SchoolCreateOneWithoutAttachmentInput
  team: TeamCreateOneWithoutAttachmentInput!
  title: String
  type: String
  updatedAt: DateTime
  user: UserCreateOneWithoutAttachmentsInput!
  work: WorkCreateOneWithoutAttachmentsInput
}

input AttachmentCreateWithoutDiscussionInput {
  ballot: BallotCreateOneWithoutAttachmentsInput
  card: String
  createdAt: DateTime
  file: String!
  id: String
  school: SchoolCreateOneWithoutAttachmentInput
  team: TeamCreateOneWithoutAttachmentInput!
  title: String
  type: String
  updatedAt: DateTime
  user: UserCreateOneWithoutAttachmentsInput!
  work: WorkCreateOneWithoutAttachmentsInput
}

input AttachmentCreateWithoutSchoolInput {
  ballot: BallotCreateOneWithoutAttachmentsInput
  card: String
  createdAt: DateTime
  discussion: DiscussionCreateOneWithoutAttachmentsInput
  file: String!
  id: String
  team: TeamCreateOneWithoutAttachmentInput!
  title: String
  type: String
  updatedAt: DateTime
  user: UserCreateOneWithoutAttachmentsInput!
  work: WorkCreateOneWithoutAttachmentsInput
}

input AttachmentCreateWithoutTeamInput {
  ballot: BallotCreateOneWithoutAttachmentsInput
  card: String
  createdAt: DateTime
  discussion: DiscussionCreateOneWithoutAttachmentsInput
  file: String!
  id: String
  school: SchoolCreateOneWithoutAttachmentInput
  title: String
  type: String
  updatedAt: DateTime
  user: UserCreateOneWithoutAttachmentsInput!
  work: WorkCreateOneWithoutAttachmentsInput
}

input AttachmentCreateWithoutUserInput {
  ballot: BallotCreateOneWithoutAttachmentsInput
  card: String
  createdAt: DateTime
  discussion: DiscussionCreateOneWithoutAttachmentsInput
  file: String!
  id: String
  school: SchoolCreateOneWithoutAttachmentInput
  team: TeamCreateOneWithoutAttachmentInput!
  title: String
  type: String
  updatedAt: DateTime
  work: WorkCreateOneWithoutAttachmentsInput
}

input AttachmentCreateWithoutWorkInput {
  ballot: BallotCreateOneWithoutAttachmentsInput
  card: String
  createdAt: DateTime
  discussion: DiscussionCreateOneWithoutAttachmentsInput
  file: String!
  id: String
  school: SchoolCreateOneWithoutAttachmentInput
  team: TeamCreateOneWithoutAttachmentInput!
  title: String
  type: String
  updatedAt: DateTime
  user: UserCreateOneWithoutAttachmentsInput!
}

input AttachmentListRelationFilter {
  every: AttachmentWhereInput
  none: AttachmentWhereInput
  some: AttachmentWhereInput
}

input AttachmentOrderByInput {
  ballotId: SortOrder
  card: SortOrder
  createdAt: SortOrder
  discussionId: SortOrder
  file: SortOrder
  id: SortOrder
  schoolId: SortOrder
  teamId: SortOrder
  title: SortOrder
  type: SortOrder
  updatedAt: SortOrder
  userId: SortOrder
  workId: SortOrder
}

input AttachmentScalarWhereInput {
  AND: [AttachmentScalarWhereInput!]
  ballotId: StringNullableFilter
  card: StringNullableFilter
  createdAt: DateTimeFilter
  discussionId: StringNullableFilter
  file: StringFilter
  id: StringFilter
  NOT: [AttachmentScalarWhereInput!]
  OR: [AttachmentScalarWhereInput!]
  schoolId: StringNullableFilter
  teamId: StringFilter
  title: StringFilter
  type: StringFilter
  updatedAt: DateTimeFilter
  userId: StringFilter
  workId: StringNullableFilter
}

input AttachmentUpdateManyMutationInput {
  card: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  file: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input AttachmentUpdateManyWithoutBallotInput {
  connect: [AttachmentWhereUniqueInput!]
  connectOrCreate: [AttachmentCreateOrConnectWithoutballotInput!]
  create: [AttachmentCreateWithoutBallotInput!]
  delete: [AttachmentWhereUniqueInput!]
  deleteMany: [AttachmentScalarWhereInput!]
  disconnect: [AttachmentWhereUniqueInput!]
  set: [AttachmentWhereUniqueInput!]
  update: [AttachmentUpdateWithWhereUniqueWithoutBallotInput!]
  updateMany: [AttachmentUpdateManyWithWhereWithoutBallotInput!]
  upsert: [AttachmentUpsertWithWhereUniqueWithoutBallotInput!]
}

input AttachmentUpdateManyWithoutDiscussionInput {
  connect: [AttachmentWhereUniqueInput!]
  connectOrCreate: [AttachmentCreateOrConnectWithoutdiscussionInput!]
  create: [AttachmentCreateWithoutDiscussionInput!]
  delete: [AttachmentWhereUniqueInput!]
  deleteMany: [AttachmentScalarWhereInput!]
  disconnect: [AttachmentWhereUniqueInput!]
  set: [AttachmentWhereUniqueInput!]
  update: [AttachmentUpdateWithWhereUniqueWithoutDiscussionInput!]
  updateMany: [AttachmentUpdateManyWithWhereWithoutDiscussionInput!]
  upsert: [AttachmentUpsertWithWhereUniqueWithoutDiscussionInput!]
}

input AttachmentUpdateManyWithoutSchoolInput {
  connect: [AttachmentWhereUniqueInput!]
  connectOrCreate: [AttachmentCreateOrConnectWithoutschoolInput!]
  create: [AttachmentCreateWithoutSchoolInput!]
  delete: [AttachmentWhereUniqueInput!]
  deleteMany: [AttachmentScalarWhereInput!]
  disconnect: [AttachmentWhereUniqueInput!]
  set: [AttachmentWhereUniqueInput!]
  update: [AttachmentUpdateWithWhereUniqueWithoutSchoolInput!]
  updateMany: [AttachmentUpdateManyWithWhereWithoutSchoolInput!]
  upsert: [AttachmentUpsertWithWhereUniqueWithoutSchoolInput!]
}

input AttachmentUpdateManyWithoutTeamInput {
  connect: [AttachmentWhereUniqueInput!]
  connectOrCreate: [AttachmentCreateOrConnectWithoutteamInput!]
  create: [AttachmentCreateWithoutTeamInput!]
  delete: [AttachmentWhereUniqueInput!]
  deleteMany: [AttachmentScalarWhereInput!]
  disconnect: [AttachmentWhereUniqueInput!]
  set: [AttachmentWhereUniqueInput!]
  update: [AttachmentUpdateWithWhereUniqueWithoutTeamInput!]
  updateMany: [AttachmentUpdateManyWithWhereWithoutTeamInput!]
  upsert: [AttachmentUpsertWithWhereUniqueWithoutTeamInput!]
}

input AttachmentUpdateManyWithoutUserInput {
  connect: [AttachmentWhereUniqueInput!]
  connectOrCreate: [AttachmentCreateOrConnectWithoutuserInput!]
  create: [AttachmentCreateWithoutUserInput!]
  delete: [AttachmentWhereUniqueInput!]
  deleteMany: [AttachmentScalarWhereInput!]
  disconnect: [AttachmentWhereUniqueInput!]
  set: [AttachmentWhereUniqueInput!]
  update: [AttachmentUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [AttachmentUpdateManyWithWhereWithoutUserInput!]
  upsert: [AttachmentUpsertWithWhereUniqueWithoutUserInput!]
}

input AttachmentUpdateManyWithoutWorkInput {
  connect: [AttachmentWhereUniqueInput!]
  connectOrCreate: [AttachmentCreateOrConnectWithoutworkInput!]
  create: [AttachmentCreateWithoutWorkInput!]
  delete: [AttachmentWhereUniqueInput!]
  deleteMany: [AttachmentScalarWhereInput!]
  disconnect: [AttachmentWhereUniqueInput!]
  set: [AttachmentWhereUniqueInput!]
  update: [AttachmentUpdateWithWhereUniqueWithoutWorkInput!]
  updateMany: [AttachmentUpdateManyWithWhereWithoutWorkInput!]
  upsert: [AttachmentUpsertWithWhereUniqueWithoutWorkInput!]
}

input AttachmentUpdateManyWithWhereWithoutBallotInput {
  data: AttachmentUpdateManyMutationInput!
  where: AttachmentScalarWhereInput!
}

input AttachmentUpdateManyWithWhereWithoutDiscussionInput {
  data: AttachmentUpdateManyMutationInput!
  where: AttachmentScalarWhereInput!
}

input AttachmentUpdateManyWithWhereWithoutSchoolInput {
  data: AttachmentUpdateManyMutationInput!
  where: AttachmentScalarWhereInput!
}

input AttachmentUpdateManyWithWhereWithoutTeamInput {
  data: AttachmentUpdateManyMutationInput!
  where: AttachmentScalarWhereInput!
}

input AttachmentUpdateManyWithWhereWithoutUserInput {
  data: AttachmentUpdateManyMutationInput!
  where: AttachmentScalarWhereInput!
}

input AttachmentUpdateManyWithWhereWithoutWorkInput {
  data: AttachmentUpdateManyMutationInput!
  where: AttachmentScalarWhereInput!
}

input AttachmentUpdateWithoutBallotInput {
  card: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discussion: DiscussionUpdateOneWithoutAttachmentsInput
  file: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneWithoutAttachmentInput
  team: TeamUpdateOneRequiredWithoutAttachmentInput
  title: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutAttachmentsInput
  work: WorkUpdateOneWithoutAttachmentsInput
}

input AttachmentUpdateWithoutDiscussionInput {
  ballot: BallotUpdateOneWithoutAttachmentsInput
  card: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  file: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneWithoutAttachmentInput
  team: TeamUpdateOneRequiredWithoutAttachmentInput
  title: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutAttachmentsInput
  work: WorkUpdateOneWithoutAttachmentsInput
}

input AttachmentUpdateWithoutSchoolInput {
  ballot: BallotUpdateOneWithoutAttachmentsInput
  card: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discussion: DiscussionUpdateOneWithoutAttachmentsInput
  file: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  team: TeamUpdateOneRequiredWithoutAttachmentInput
  title: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutAttachmentsInput
  work: WorkUpdateOneWithoutAttachmentsInput
}

input AttachmentUpdateWithoutTeamInput {
  ballot: BallotUpdateOneWithoutAttachmentsInput
  card: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discussion: DiscussionUpdateOneWithoutAttachmentsInput
  file: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneWithoutAttachmentInput
  title: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutAttachmentsInput
  work: WorkUpdateOneWithoutAttachmentsInput
}

input AttachmentUpdateWithoutUserInput {
  ballot: BallotUpdateOneWithoutAttachmentsInput
  card: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discussion: DiscussionUpdateOneWithoutAttachmentsInput
  file: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneWithoutAttachmentInput
  team: TeamUpdateOneRequiredWithoutAttachmentInput
  title: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  work: WorkUpdateOneWithoutAttachmentsInput
}

input AttachmentUpdateWithoutWorkInput {
  ballot: BallotUpdateOneWithoutAttachmentsInput
  card: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discussion: DiscussionUpdateOneWithoutAttachmentsInput
  file: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneWithoutAttachmentInput
  team: TeamUpdateOneRequiredWithoutAttachmentInput
  title: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutAttachmentsInput
}

input AttachmentUpdateWithWhereUniqueWithoutBallotInput {
  data: AttachmentUpdateWithoutBallotInput!
  where: AttachmentWhereUniqueInput!
}

input AttachmentUpdateWithWhereUniqueWithoutDiscussionInput {
  data: AttachmentUpdateWithoutDiscussionInput!
  where: AttachmentWhereUniqueInput!
}

input AttachmentUpdateWithWhereUniqueWithoutSchoolInput {
  data: AttachmentUpdateWithoutSchoolInput!
  where: AttachmentWhereUniqueInput!
}

input AttachmentUpdateWithWhereUniqueWithoutTeamInput {
  data: AttachmentUpdateWithoutTeamInput!
  where: AttachmentWhereUniqueInput!
}

input AttachmentUpdateWithWhereUniqueWithoutUserInput {
  data: AttachmentUpdateWithoutUserInput!
  where: AttachmentWhereUniqueInput!
}

input AttachmentUpdateWithWhereUniqueWithoutWorkInput {
  data: AttachmentUpdateWithoutWorkInput!
  where: AttachmentWhereUniqueInput!
}

input AttachmentUpsertWithWhereUniqueWithoutBallotInput {
  create: AttachmentCreateWithoutBallotInput!
  update: AttachmentUpdateWithoutBallotInput!
  where: AttachmentWhereUniqueInput!
}

input AttachmentUpsertWithWhereUniqueWithoutDiscussionInput {
  create: AttachmentCreateWithoutDiscussionInput!
  update: AttachmentUpdateWithoutDiscussionInput!
  where: AttachmentWhereUniqueInput!
}

input AttachmentUpsertWithWhereUniqueWithoutSchoolInput {
  create: AttachmentCreateWithoutSchoolInput!
  update: AttachmentUpdateWithoutSchoolInput!
  where: AttachmentWhereUniqueInput!
}

input AttachmentUpsertWithWhereUniqueWithoutTeamInput {
  create: AttachmentCreateWithoutTeamInput!
  update: AttachmentUpdateWithoutTeamInput!
  where: AttachmentWhereUniqueInput!
}

input AttachmentUpsertWithWhereUniqueWithoutUserInput {
  create: AttachmentCreateWithoutUserInput!
  update: AttachmentUpdateWithoutUserInput!
  where: AttachmentWhereUniqueInput!
}

input AttachmentUpsertWithWhereUniqueWithoutWorkInput {
  create: AttachmentCreateWithoutWorkInput!
  update: AttachmentUpdateWithoutWorkInput!
  where: AttachmentWhereUniqueInput!
}

input AttachmentWhereInput {
  AND: [AttachmentWhereInput!]
  ballot: BallotWhereInput
  ballotId: StringNullableFilter
  card: StringNullableFilter
  createdAt: DateTimeFilter
  discussion: DiscussionWhereInput
  discussionId: StringNullableFilter
  file: StringFilter
  id: StringFilter
  NOT: [AttachmentWhereInput!]
  OR: [AttachmentWhereInput!]
  school: SchoolWhereInput
  schoolId: StringNullableFilter
  team: TeamWhereInput
  teamId: StringFilter
  title: StringFilter
  type: StringFilter
  updatedAt: DateTimeFilter
  user: UserWhereInput
  userId: StringFilter
  work: WorkWhereInput
  workId: StringNullableFilter
}

input AttachmentWhereUniqueInput {
  file: String
  id: String
}

type Ballot {
  body: String!
  canton: String
  canVote: Boolean
  description: String!
  end: DateTime!
  hasVoted: Boolean
  id: String!
  schoolId: String
  scope: BallotScope!
  start: DateTime!
  teamId: String
  title: String!
}

input BallotCreateManyWithoutCreatorInput {
  connect: [BallotWhereUniqueInput!]
  connectOrCreate: [BallotCreateOrConnectWithoutcreatorInput!]
  create: [BallotCreateWithoutCreatorInput!]
}

input BallotCreateManyWithoutSchoolInput {
  connect: [BallotWhereUniqueInput!]
  connectOrCreate: [BallotCreateOrConnectWithoutschoolInput!]
  create: [BallotCreateWithoutSchoolInput!]
}

input BallotCreateManyWithoutTeamInput {
  connect: [BallotWhereUniqueInput!]
  connectOrCreate: [BallotCreateOrConnectWithoutteamInput!]
  create: [BallotCreateWithoutTeamInput!]
}

input BallotCreateOneWithoutActivityInput {
  connect: BallotWhereUniqueInput
  connectOrCreate: BallotCreateOrConnectWithoutactivityInput
  create: BallotCreateWithoutActivityInput
}

input BallotCreateOneWithoutAttachmentsInput {
  connect: BallotWhereUniqueInput
  connectOrCreate: BallotCreateOrConnectWithoutattachmentsInput
  create: BallotCreateWithoutAttachmentsInput
}

input BallotCreateOneWithoutBallotRunsInput {
  connect: BallotWhereUniqueInput
  connectOrCreate: BallotCreateOrConnectWithoutballotRunsInput
  create: BallotCreateWithoutBallotRunsInput
}

input BallotCreateOneWithoutDiscussionInput {
  connect: BallotWhereUniqueInput
  connectOrCreate: BallotCreateOrConnectWithoutdiscussionInput
  create: BallotCreateWithoutDiscussionInput
}

input BallotCreateOneWithoutVotedInput {
  connect: BallotWhereUniqueInput
  connectOrCreate: BallotCreateOrConnectWithoutvotedInput
  create: BallotCreateWithoutVotedInput
}

input BallotCreateOneWithoutVotesInput {
  connect: BallotWhereUniqueInput
  connectOrCreate: BallotCreateOrConnectWithoutvotesInput
  create: BallotCreateWithoutVotesInput
}

input BallotCreateOrConnectWithoutactivityInput {
  create: BallotCreateWithoutActivityInput!
  where: BallotWhereUniqueInput!
}

input BallotCreateOrConnectWithoutattachmentsInput {
  create: BallotCreateWithoutAttachmentsInput!
  where: BallotWhereUniqueInput!
}

input BallotCreateOrConnectWithoutballotRunsInput {
  create: BallotCreateWithoutBallotRunsInput!
  where: BallotWhereUniqueInput!
}

input BallotCreateOrConnectWithoutcreatorInput {
  create: BallotCreateWithoutCreatorInput!
  where: BallotWhereUniqueInput!
}

input BallotCreateOrConnectWithoutdiscussionInput {
  create: BallotCreateWithoutDiscussionInput!
  where: BallotWhereUniqueInput!
}

input BallotCreateOrConnectWithoutschoolInput {
  create: BallotCreateWithoutSchoolInput!
  where: BallotWhereUniqueInput!
}

input BallotCreateOrConnectWithoutteamInput {
  create: BallotCreateWithoutTeamInput!
  where: BallotWhereUniqueInput!
}

input BallotCreateOrConnectWithoutvotedInput {
  create: BallotCreateWithoutVotedInput!
  where: BallotWhereUniqueInput!
}

input BallotCreateOrConnectWithoutvotesInput {
  create: BallotCreateWithoutVotesInput!
  where: BallotWhereUniqueInput!
}

input BallotCreateWithoutActivityInput {
  attachments: AttachmentCreateManyWithoutBallotInput
  ballotRuns: BallotRunCreateManyWithoutBallotInput
  body: String!
  canton: String
  createdAt: DateTime
  creator: UserCreateOneWithoutBallotsInput
  description: String!
  discussion: DiscussionCreateManyWithoutBallotInput
  end: DateTime!
  id: String
  options: OptionCreateManyWithoutBallotInput
  school: SchoolCreateOneWithoutBallotsInput
  scope: BallotScope
  start: DateTime!
  team: TeamCreateOneWithoutBallotsInput
  title: String!
  updatedAt: DateTime
  voted: VotedCreateManyWithoutBallotInput
  votes: VoteCreateManyWithoutBallotInput
}

input BallotCreateWithoutAttachmentsInput {
  activity: ActivityCreateManyWithoutBallotInput
  ballotRuns: BallotRunCreateManyWithoutBallotInput
  body: String!
  canton: String
  createdAt: DateTime
  creator: UserCreateOneWithoutBallotsInput
  description: String!
  discussion: DiscussionCreateManyWithoutBallotInput
  end: DateTime!
  id: String
  options: OptionCreateManyWithoutBallotInput
  school: SchoolCreateOneWithoutBallotsInput
  scope: BallotScope
  start: DateTime!
  team: TeamCreateOneWithoutBallotsInput
  title: String!
  updatedAt: DateTime
  voted: VotedCreateManyWithoutBallotInput
  votes: VoteCreateManyWithoutBallotInput
}

input BallotCreateWithoutBallotRunsInput {
  activity: ActivityCreateManyWithoutBallotInput
  attachments: AttachmentCreateManyWithoutBallotInput
  body: String!
  canton: String
  createdAt: DateTime
  creator: UserCreateOneWithoutBallotsInput
  description: String!
  discussion: DiscussionCreateManyWithoutBallotInput
  end: DateTime!
  id: String
  options: OptionCreateManyWithoutBallotInput
  school: SchoolCreateOneWithoutBallotsInput
  scope: BallotScope
  start: DateTime!
  team: TeamCreateOneWithoutBallotsInput
  title: String!
  updatedAt: DateTime
  voted: VotedCreateManyWithoutBallotInput
  votes: VoteCreateManyWithoutBallotInput
}

input BallotCreateWithoutCreatorInput {
  activity: ActivityCreateManyWithoutBallotInput
  attachments: AttachmentCreateManyWithoutBallotInput
  ballotRuns: BallotRunCreateManyWithoutBallotInput
  body: String!
  canton: String
  createdAt: DateTime
  description: String!
  discussion: DiscussionCreateManyWithoutBallotInput
  end: DateTime!
  id: String
  options: OptionCreateManyWithoutBallotInput
  school: SchoolCreateOneWithoutBallotsInput
  scope: BallotScope
  start: DateTime!
  team: TeamCreateOneWithoutBallotsInput
  title: String!
  updatedAt: DateTime
  voted: VotedCreateManyWithoutBallotInput
  votes: VoteCreateManyWithoutBallotInput
}

input BallotCreateWithoutDiscussionInput {
  activity: ActivityCreateManyWithoutBallotInput
  attachments: AttachmentCreateManyWithoutBallotInput
  ballotRuns: BallotRunCreateManyWithoutBallotInput
  body: String!
  canton: String
  createdAt: DateTime
  creator: UserCreateOneWithoutBallotsInput
  description: String!
  end: DateTime!
  id: String
  options: OptionCreateManyWithoutBallotInput
  school: SchoolCreateOneWithoutBallotsInput
  scope: BallotScope
  start: DateTime!
  team: TeamCreateOneWithoutBallotsInput
  title: String!
  updatedAt: DateTime
  voted: VotedCreateManyWithoutBallotInput
  votes: VoteCreateManyWithoutBallotInput
}

input BallotCreateWithoutSchoolInput {
  activity: ActivityCreateManyWithoutBallotInput
  attachments: AttachmentCreateManyWithoutBallotInput
  ballotRuns: BallotRunCreateManyWithoutBallotInput
  body: String!
  canton: String
  createdAt: DateTime
  creator: UserCreateOneWithoutBallotsInput
  description: String!
  discussion: DiscussionCreateManyWithoutBallotInput
  end: DateTime!
  id: String
  options: OptionCreateManyWithoutBallotInput
  scope: BallotScope
  start: DateTime!
  team: TeamCreateOneWithoutBallotsInput
  title: String!
  updatedAt: DateTime
  voted: VotedCreateManyWithoutBallotInput
  votes: VoteCreateManyWithoutBallotInput
}

input BallotCreateWithoutTeamInput {
  activity: ActivityCreateManyWithoutBallotInput
  attachments: AttachmentCreateManyWithoutBallotInput
  ballotRuns: BallotRunCreateManyWithoutBallotInput
  body: String!
  canton: String
  createdAt: DateTime
  creator: UserCreateOneWithoutBallotsInput
  description: String!
  discussion: DiscussionCreateManyWithoutBallotInput
  end: DateTime!
  id: String
  options: OptionCreateManyWithoutBallotInput
  school: SchoolCreateOneWithoutBallotsInput
  scope: BallotScope
  start: DateTime!
  title: String!
  updatedAt: DateTime
  voted: VotedCreateManyWithoutBallotInput
  votes: VoteCreateManyWithoutBallotInput
}

input BallotCreateWithoutVotedInput {
  activity: ActivityCreateManyWithoutBallotInput
  attachments: AttachmentCreateManyWithoutBallotInput
  ballotRuns: BallotRunCreateManyWithoutBallotInput
  body: String!
  canton: String
  createdAt: DateTime
  creator: UserCreateOneWithoutBallotsInput
  description: String!
  discussion: DiscussionCreateManyWithoutBallotInput
  end: DateTime!
  id: String
  options: OptionCreateManyWithoutBallotInput
  school: SchoolCreateOneWithoutBallotsInput
  scope: BallotScope
  start: DateTime!
  team: TeamCreateOneWithoutBallotsInput
  title: String!
  updatedAt: DateTime
  votes: VoteCreateManyWithoutBallotInput
}

input BallotCreateWithoutVotesInput {
  activity: ActivityCreateManyWithoutBallotInput
  attachments: AttachmentCreateManyWithoutBallotInput
  ballotRuns: BallotRunCreateManyWithoutBallotInput
  body: String!
  canton: String
  createdAt: DateTime
  creator: UserCreateOneWithoutBallotsInput
  description: String!
  discussion: DiscussionCreateManyWithoutBallotInput
  end: DateTime!
  id: String
  options: OptionCreateManyWithoutBallotInput
  school: SchoolCreateOneWithoutBallotsInput
  scope: BallotScope
  start: DateTime!
  team: TeamCreateOneWithoutBallotsInput
  title: String!
  updatedAt: DateTime
  voted: VotedCreateManyWithoutBallotInput
}

input BallotIdTeamIdCompoundUniqueInput {
  ballotId: String!
  teamId: String!
}

input BallotListRelationFilter {
  every: BallotWhereInput
  none: BallotWhereInput
  some: BallotWhereInput
}

input BallotOrderByInput {
  body: SortOrder
  canton: SortOrder
  createdAt: SortOrder
  creatorId: SortOrder
  description: SortOrder
  end: SortOrder
  id: SortOrder
  schoolId: SortOrder
  scope: SortOrder
  start: SortOrder
  teamId: SortOrder
  title: SortOrder
  updatedAt: SortOrder
}

type BallotResults {
  abs: Int
  no: Int
  total: Int
  yes: Int
}

type BallotRun {
  ballot: Ballot!
  end: DateTime
  id: String!
  start: DateTime
  team: Team!
}

input BallotRunCreateManyWithoutBallotInput {
  connect: [BallotRunWhereUniqueInput!]
  connectOrCreate: [BallotRunCreateOrConnectWithoutballotInput!]
  create: [BallotRunCreateWithoutBallotInput!]
}

input BallotRunCreateManyWithoutTeamInput {
  connect: [BallotRunWhereUniqueInput!]
  connectOrCreate: [BallotRunCreateOrConnectWithoutteamInput!]
  create: [BallotRunCreateWithoutTeamInput!]
}

input BallotRunCreateOneWithoutVoteInput {
  connect: BallotRunWhereUniqueInput
  connectOrCreate: BallotRunCreateOrConnectWithoutvoteInput
  create: BallotRunCreateWithoutVoteInput
}

input BallotRunCreateOrConnectWithoutballotInput {
  create: BallotRunCreateWithoutBallotInput!
  where: BallotRunWhereUniqueInput!
}

input BallotRunCreateOrConnectWithoutteamInput {
  create: BallotRunCreateWithoutTeamInput!
  where: BallotRunWhereUniqueInput!
}

input BallotRunCreateOrConnectWithoutvoteInput {
  create: BallotRunCreateWithoutVoteInput!
  where: BallotRunWhereUniqueInput!
}

input BallotRunCreateWithoutBallotInput {
  end: DateTime
  id: String
  start: DateTime
  team: TeamCreateOneWithoutBallotRunsInput!
  vote: VoteCreateManyWithoutBallotRunInput
}

input BallotRunCreateWithoutTeamInput {
  ballot: BallotCreateOneWithoutBallotRunsInput!
  end: DateTime
  id: String
  start: DateTime
  vote: VoteCreateManyWithoutBallotRunInput
}

input BallotRunCreateWithoutVoteInput {
  ballot: BallotCreateOneWithoutBallotRunsInput!
  end: DateTime
  id: String
  start: DateTime
  team: TeamCreateOneWithoutBallotRunsInput!
}

input BallotRunListRelationFilter {
  every: BallotRunWhereInput
  none: BallotRunWhereInput
  some: BallotRunWhereInput
}

input BallotRunScalarWhereInput {
  AND: [BallotRunScalarWhereInput!]
  ballotId: StringFilter
  end: DateTimeNullableFilter
  id: StringFilter
  NOT: [BallotRunScalarWhereInput!]
  OR: [BallotRunScalarWhereInput!]
  start: DateTimeNullableFilter
  teamId: StringFilter
}

input BallotRunUpdateManyMutationInput {
  end: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  start: NullableDateTimeFieldUpdateOperationsInput
}

input BallotRunUpdateManyWithoutBallotInput {
  connect: [BallotRunWhereUniqueInput!]
  connectOrCreate: [BallotRunCreateOrConnectWithoutballotInput!]
  create: [BallotRunCreateWithoutBallotInput!]
  delete: [BallotRunWhereUniqueInput!]
  deleteMany: [BallotRunScalarWhereInput!]
  disconnect: [BallotRunWhereUniqueInput!]
  set: [BallotRunWhereUniqueInput!]
  update: [BallotRunUpdateWithWhereUniqueWithoutBallotInput!]
  updateMany: [BallotRunUpdateManyWithWhereWithoutBallotInput!]
  upsert: [BallotRunUpsertWithWhereUniqueWithoutBallotInput!]
}

input BallotRunUpdateManyWithoutTeamInput {
  connect: [BallotRunWhereUniqueInput!]
  connectOrCreate: [BallotRunCreateOrConnectWithoutteamInput!]
  create: [BallotRunCreateWithoutTeamInput!]
  delete: [BallotRunWhereUniqueInput!]
  deleteMany: [BallotRunScalarWhereInput!]
  disconnect: [BallotRunWhereUniqueInput!]
  set: [BallotRunWhereUniqueInput!]
  update: [BallotRunUpdateWithWhereUniqueWithoutTeamInput!]
  updateMany: [BallotRunUpdateManyWithWhereWithoutTeamInput!]
  upsert: [BallotRunUpsertWithWhereUniqueWithoutTeamInput!]
}

input BallotRunUpdateManyWithWhereWithoutBallotInput {
  data: BallotRunUpdateManyMutationInput!
  where: BallotRunScalarWhereInput!
}

input BallotRunUpdateManyWithWhereWithoutTeamInput {
  data: BallotRunUpdateManyMutationInput!
  where: BallotRunScalarWhereInput!
}

input BallotRunUpdateOneWithoutVoteInput {
  connect: BallotRunWhereUniqueInput
  connectOrCreate: BallotRunCreateOrConnectWithoutvoteInput
  create: BallotRunCreateWithoutVoteInput
  delete: Boolean
  disconnect: Boolean
  update: BallotRunUpdateWithoutVoteInput
  upsert: BallotRunUpsertWithoutVoteInput
}

input BallotRunUpdateWithoutBallotInput {
  end: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  start: NullableDateTimeFieldUpdateOperationsInput
  team: TeamUpdateOneRequiredWithoutBallotRunsInput
  vote: VoteUpdateManyWithoutBallotRunInput
}

input BallotRunUpdateWithoutTeamInput {
  ballot: BallotUpdateOneRequiredWithoutBallotRunsInput
  end: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  start: NullableDateTimeFieldUpdateOperationsInput
  vote: VoteUpdateManyWithoutBallotRunInput
}

input BallotRunUpdateWithoutVoteInput {
  ballot: BallotUpdateOneRequiredWithoutBallotRunsInput
  end: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  start: NullableDateTimeFieldUpdateOperationsInput
  team: TeamUpdateOneRequiredWithoutBallotRunsInput
}

input BallotRunUpdateWithWhereUniqueWithoutBallotInput {
  data: BallotRunUpdateWithoutBallotInput!
  where: BallotRunWhereUniqueInput!
}

input BallotRunUpdateWithWhereUniqueWithoutTeamInput {
  data: BallotRunUpdateWithoutTeamInput!
  where: BallotRunWhereUniqueInput!
}

input BallotRunUpsertWithoutVoteInput {
  create: BallotRunCreateWithoutVoteInput!
  update: BallotRunUpdateWithoutVoteInput!
}

input BallotRunUpsertWithWhereUniqueWithoutBallotInput {
  create: BallotRunCreateWithoutBallotInput!
  update: BallotRunUpdateWithoutBallotInput!
  where: BallotRunWhereUniqueInput!
}

input BallotRunUpsertWithWhereUniqueWithoutTeamInput {
  create: BallotRunCreateWithoutTeamInput!
  update: BallotRunUpdateWithoutTeamInput!
  where: BallotRunWhereUniqueInput!
}

input BallotRunWhereInput {
  AND: [BallotRunWhereInput!]
  ballot: BallotWhereInput
  ballotId: StringFilter
  end: DateTimeNullableFilter
  id: StringFilter
  NOT: [BallotRunWhereInput!]
  OR: [BallotRunWhereInput!]
  start: DateTimeNullableFilter
  team: TeamWhereInput
  teamId: StringFilter
  vote: VoteListRelationFilter
}

input BallotRunWhereUniqueInput {
  ballotId_teamId: BallotIdTeamIdCompoundUniqueInput
  id: String
}

input BallotScalarWhereInput {
  AND: [BallotScalarWhereInput!]
  body: StringFilter
  canton: StringNullableFilter
  createdAt: DateTimeFilter
  creatorId: StringNullableFilter
  description: StringFilter
  end: DateTimeFilter
  id: StringFilter
  NOT: [BallotScalarWhereInput!]
  OR: [BallotScalarWhereInput!]
  schoolId: StringNullableFilter
  scope: EnumBallotScopeFilter
  start: DateTimeFilter
  teamId: StringNullableFilter
  title: StringFilter
  updatedAt: DateTimeFilter
}

enum BallotScope {
  Cantonal
  National
  Public
  School
  Team
}

input BallotUpdateManyMutationInput {
  body: StringFieldUpdateOperationsInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  end: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  scope: EnumBallotScopeFieldUpdateOperationsInput
  start: DateTimeFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input BallotUpdateManyWithoutCreatorInput {
  connect: [BallotWhereUniqueInput!]
  connectOrCreate: [BallotCreateOrConnectWithoutcreatorInput!]
  create: [BallotCreateWithoutCreatorInput!]
  delete: [BallotWhereUniqueInput!]
  deleteMany: [BallotScalarWhereInput!]
  disconnect: [BallotWhereUniqueInput!]
  set: [BallotWhereUniqueInput!]
  update: [BallotUpdateWithWhereUniqueWithoutCreatorInput!]
  updateMany: [BallotUpdateManyWithWhereWithoutCreatorInput!]
  upsert: [BallotUpsertWithWhereUniqueWithoutCreatorInput!]
}

input BallotUpdateManyWithoutSchoolInput {
  connect: [BallotWhereUniqueInput!]
  connectOrCreate: [BallotCreateOrConnectWithoutschoolInput!]
  create: [BallotCreateWithoutSchoolInput!]
  delete: [BallotWhereUniqueInput!]
  deleteMany: [BallotScalarWhereInput!]
  disconnect: [BallotWhereUniqueInput!]
  set: [BallotWhereUniqueInput!]
  update: [BallotUpdateWithWhereUniqueWithoutSchoolInput!]
  updateMany: [BallotUpdateManyWithWhereWithoutSchoolInput!]
  upsert: [BallotUpsertWithWhereUniqueWithoutSchoolInput!]
}

input BallotUpdateManyWithoutTeamInput {
  connect: [BallotWhereUniqueInput!]
  connectOrCreate: [BallotCreateOrConnectWithoutteamInput!]
  create: [BallotCreateWithoutTeamInput!]
  delete: [BallotWhereUniqueInput!]
  deleteMany: [BallotScalarWhereInput!]
  disconnect: [BallotWhereUniqueInput!]
  set: [BallotWhereUniqueInput!]
  update: [BallotUpdateWithWhereUniqueWithoutTeamInput!]
  updateMany: [BallotUpdateManyWithWhereWithoutTeamInput!]
  upsert: [BallotUpsertWithWhereUniqueWithoutTeamInput!]
}

input BallotUpdateManyWithWhereWithoutCreatorInput {
  data: BallotUpdateManyMutationInput!
  where: BallotScalarWhereInput!
}

input BallotUpdateManyWithWhereWithoutSchoolInput {
  data: BallotUpdateManyMutationInput!
  where: BallotScalarWhereInput!
}

input BallotUpdateManyWithWhereWithoutTeamInput {
  data: BallotUpdateManyMutationInput!
  where: BallotScalarWhereInput!
}

input BallotUpdateOneRequiredWithoutBallotRunsInput {
  connect: BallotWhereUniqueInput
  connectOrCreate: BallotCreateOrConnectWithoutballotRunsInput
  create: BallotCreateWithoutBallotRunsInput
  update: BallotUpdateWithoutBallotRunsInput
  upsert: BallotUpsertWithoutBallotRunsInput
}

input BallotUpdateOneRequiredWithoutVotedInput {
  connect: BallotWhereUniqueInput
  connectOrCreate: BallotCreateOrConnectWithoutvotedInput
  create: BallotCreateWithoutVotedInput
  update: BallotUpdateWithoutVotedInput
  upsert: BallotUpsertWithoutVotedInput
}

input BallotUpdateOneRequiredWithoutVotesInput {
  connect: BallotWhereUniqueInput
  connectOrCreate: BallotCreateOrConnectWithoutvotesInput
  create: BallotCreateWithoutVotesInput
  update: BallotUpdateWithoutVotesInput
  upsert: BallotUpsertWithoutVotesInput
}

input BallotUpdateOneWithoutActivityInput {
  connect: BallotWhereUniqueInput
  connectOrCreate: BallotCreateOrConnectWithoutactivityInput
  create: BallotCreateWithoutActivityInput
  delete: Boolean
  disconnect: Boolean
  update: BallotUpdateWithoutActivityInput
  upsert: BallotUpsertWithoutActivityInput
}

input BallotUpdateOneWithoutAttachmentsInput {
  connect: BallotWhereUniqueInput
  connectOrCreate: BallotCreateOrConnectWithoutattachmentsInput
  create: BallotCreateWithoutAttachmentsInput
  delete: Boolean
  disconnect: Boolean
  update: BallotUpdateWithoutAttachmentsInput
  upsert: BallotUpsertWithoutAttachmentsInput
}

input BallotUpdateOneWithoutDiscussionInput {
  connect: BallotWhereUniqueInput
  connectOrCreate: BallotCreateOrConnectWithoutdiscussionInput
  create: BallotCreateWithoutDiscussionInput
  delete: Boolean
  disconnect: Boolean
  update: BallotUpdateWithoutDiscussionInput
  upsert: BallotUpsertWithoutDiscussionInput
}

input BallotUpdateWithoutActivityInput {
  attachments: AttachmentUpdateManyWithoutBallotInput
  ballotRuns: BallotRunUpdateManyWithoutBallotInput
  body: StringFieldUpdateOperationsInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creator: UserUpdateOneWithoutBallotsInput
  description: StringFieldUpdateOperationsInput
  discussion: DiscussionUpdateManyWithoutBallotInput
  end: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  options: OptionUpdateManyWithoutBallotInput
  school: SchoolUpdateOneWithoutBallotsInput
  scope: EnumBallotScopeFieldUpdateOperationsInput
  start: DateTimeFieldUpdateOperationsInput
  team: TeamUpdateOneWithoutBallotsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  voted: VotedUpdateManyWithoutBallotInput
  votes: VoteUpdateManyWithoutBallotInput
}

input BallotUpdateWithoutAttachmentsInput {
  activity: ActivityUpdateManyWithoutBallotInput
  ballotRuns: BallotRunUpdateManyWithoutBallotInput
  body: StringFieldUpdateOperationsInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creator: UserUpdateOneWithoutBallotsInput
  description: StringFieldUpdateOperationsInput
  discussion: DiscussionUpdateManyWithoutBallotInput
  end: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  options: OptionUpdateManyWithoutBallotInput
  school: SchoolUpdateOneWithoutBallotsInput
  scope: EnumBallotScopeFieldUpdateOperationsInput
  start: DateTimeFieldUpdateOperationsInput
  team: TeamUpdateOneWithoutBallotsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  voted: VotedUpdateManyWithoutBallotInput
  votes: VoteUpdateManyWithoutBallotInput
}

input BallotUpdateWithoutBallotRunsInput {
  activity: ActivityUpdateManyWithoutBallotInput
  attachments: AttachmentUpdateManyWithoutBallotInput
  body: StringFieldUpdateOperationsInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creator: UserUpdateOneWithoutBallotsInput
  description: StringFieldUpdateOperationsInput
  discussion: DiscussionUpdateManyWithoutBallotInput
  end: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  options: OptionUpdateManyWithoutBallotInput
  school: SchoolUpdateOneWithoutBallotsInput
  scope: EnumBallotScopeFieldUpdateOperationsInput
  start: DateTimeFieldUpdateOperationsInput
  team: TeamUpdateOneWithoutBallotsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  voted: VotedUpdateManyWithoutBallotInput
  votes: VoteUpdateManyWithoutBallotInput
}

input BallotUpdateWithoutCreatorInput {
  activity: ActivityUpdateManyWithoutBallotInput
  attachments: AttachmentUpdateManyWithoutBallotInput
  ballotRuns: BallotRunUpdateManyWithoutBallotInput
  body: StringFieldUpdateOperationsInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  discussion: DiscussionUpdateManyWithoutBallotInput
  end: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  options: OptionUpdateManyWithoutBallotInput
  school: SchoolUpdateOneWithoutBallotsInput
  scope: EnumBallotScopeFieldUpdateOperationsInput
  start: DateTimeFieldUpdateOperationsInput
  team: TeamUpdateOneWithoutBallotsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  voted: VotedUpdateManyWithoutBallotInput
  votes: VoteUpdateManyWithoutBallotInput
}

input BallotUpdateWithoutDiscussionInput {
  activity: ActivityUpdateManyWithoutBallotInput
  attachments: AttachmentUpdateManyWithoutBallotInput
  ballotRuns: BallotRunUpdateManyWithoutBallotInput
  body: StringFieldUpdateOperationsInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creator: UserUpdateOneWithoutBallotsInput
  description: StringFieldUpdateOperationsInput
  end: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  options: OptionUpdateManyWithoutBallotInput
  school: SchoolUpdateOneWithoutBallotsInput
  scope: EnumBallotScopeFieldUpdateOperationsInput
  start: DateTimeFieldUpdateOperationsInput
  team: TeamUpdateOneWithoutBallotsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  voted: VotedUpdateManyWithoutBallotInput
  votes: VoteUpdateManyWithoutBallotInput
}

input BallotUpdateWithoutSchoolInput {
  activity: ActivityUpdateManyWithoutBallotInput
  attachments: AttachmentUpdateManyWithoutBallotInput
  ballotRuns: BallotRunUpdateManyWithoutBallotInput
  body: StringFieldUpdateOperationsInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creator: UserUpdateOneWithoutBallotsInput
  description: StringFieldUpdateOperationsInput
  discussion: DiscussionUpdateManyWithoutBallotInput
  end: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  options: OptionUpdateManyWithoutBallotInput
  scope: EnumBallotScopeFieldUpdateOperationsInput
  start: DateTimeFieldUpdateOperationsInput
  team: TeamUpdateOneWithoutBallotsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  voted: VotedUpdateManyWithoutBallotInput
  votes: VoteUpdateManyWithoutBallotInput
}

input BallotUpdateWithoutTeamInput {
  activity: ActivityUpdateManyWithoutBallotInput
  attachments: AttachmentUpdateManyWithoutBallotInput
  ballotRuns: BallotRunUpdateManyWithoutBallotInput
  body: StringFieldUpdateOperationsInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creator: UserUpdateOneWithoutBallotsInput
  description: StringFieldUpdateOperationsInput
  discussion: DiscussionUpdateManyWithoutBallotInput
  end: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  options: OptionUpdateManyWithoutBallotInput
  school: SchoolUpdateOneWithoutBallotsInput
  scope: EnumBallotScopeFieldUpdateOperationsInput
  start: DateTimeFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  voted: VotedUpdateManyWithoutBallotInput
  votes: VoteUpdateManyWithoutBallotInput
}

input BallotUpdateWithoutVotedInput {
  activity: ActivityUpdateManyWithoutBallotInput
  attachments: AttachmentUpdateManyWithoutBallotInput
  ballotRuns: BallotRunUpdateManyWithoutBallotInput
  body: StringFieldUpdateOperationsInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creator: UserUpdateOneWithoutBallotsInput
  description: StringFieldUpdateOperationsInput
  discussion: DiscussionUpdateManyWithoutBallotInput
  end: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  options: OptionUpdateManyWithoutBallotInput
  school: SchoolUpdateOneWithoutBallotsInput
  scope: EnumBallotScopeFieldUpdateOperationsInput
  start: DateTimeFieldUpdateOperationsInput
  team: TeamUpdateOneWithoutBallotsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  votes: VoteUpdateManyWithoutBallotInput
}

input BallotUpdateWithoutVotesInput {
  activity: ActivityUpdateManyWithoutBallotInput
  attachments: AttachmentUpdateManyWithoutBallotInput
  ballotRuns: BallotRunUpdateManyWithoutBallotInput
  body: StringFieldUpdateOperationsInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creator: UserUpdateOneWithoutBallotsInput
  description: StringFieldUpdateOperationsInput
  discussion: DiscussionUpdateManyWithoutBallotInput
  end: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  options: OptionUpdateManyWithoutBallotInput
  school: SchoolUpdateOneWithoutBallotsInput
  scope: EnumBallotScopeFieldUpdateOperationsInput
  start: DateTimeFieldUpdateOperationsInput
  team: TeamUpdateOneWithoutBallotsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  voted: VotedUpdateManyWithoutBallotInput
}

input BallotUpdateWithWhereUniqueWithoutCreatorInput {
  data: BallotUpdateWithoutCreatorInput!
  where: BallotWhereUniqueInput!
}

input BallotUpdateWithWhereUniqueWithoutSchoolInput {
  data: BallotUpdateWithoutSchoolInput!
  where: BallotWhereUniqueInput!
}

input BallotUpdateWithWhereUniqueWithoutTeamInput {
  data: BallotUpdateWithoutTeamInput!
  where: BallotWhereUniqueInput!
}

input BallotUpsertWithoutActivityInput {
  create: BallotCreateWithoutActivityInput!
  update: BallotUpdateWithoutActivityInput!
}

input BallotUpsertWithoutAttachmentsInput {
  create: BallotCreateWithoutAttachmentsInput!
  update: BallotUpdateWithoutAttachmentsInput!
}

input BallotUpsertWithoutBallotRunsInput {
  create: BallotCreateWithoutBallotRunsInput!
  update: BallotUpdateWithoutBallotRunsInput!
}

input BallotUpsertWithoutDiscussionInput {
  create: BallotCreateWithoutDiscussionInput!
  update: BallotUpdateWithoutDiscussionInput!
}

input BallotUpsertWithoutVotedInput {
  create: BallotCreateWithoutVotedInput!
  update: BallotUpdateWithoutVotedInput!
}

input BallotUpsertWithoutVotesInput {
  create: BallotCreateWithoutVotesInput!
  update: BallotUpdateWithoutVotesInput!
}

input BallotUpsertWithWhereUniqueWithoutCreatorInput {
  create: BallotCreateWithoutCreatorInput!
  update: BallotUpdateWithoutCreatorInput!
  where: BallotWhereUniqueInput!
}

input BallotUpsertWithWhereUniqueWithoutSchoolInput {
  create: BallotCreateWithoutSchoolInput!
  update: BallotUpdateWithoutSchoolInput!
  where: BallotWhereUniqueInput!
}

input BallotUpsertWithWhereUniqueWithoutTeamInput {
  create: BallotCreateWithoutTeamInput!
  update: BallotUpdateWithoutTeamInput!
  where: BallotWhereUniqueInput!
}

input BallotWhereInput {
  activity: ActivityListRelationFilter
  AND: [BallotWhereInput!]
  attachments: AttachmentListRelationFilter
  ballotRuns: BallotRunListRelationFilter
  body: StringFilter
  canton: StringNullableFilter
  createdAt: DateTimeFilter
  creator: UserWhereInput
  creatorId: StringNullableFilter
  description: StringFilter
  discussion: DiscussionListRelationFilter
  end: DateTimeFilter
  id: StringFilter
  NOT: [BallotWhereInput!]
  options: OptionListRelationFilter
  OR: [BallotWhereInput!]
  school: SchoolWhereInput
  schoolId: StringNullableFilter
  scope: EnumBallotScopeFilter
  start: DateTimeFilter
  team: TeamWhereInput
  teamId: StringNullableFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  voted: VotedListRelationFilter
  votes: VoteListRelationFilter
}

input BallotWhereUniqueInput {
  id: String
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input BoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

type Card {
  age: String
  content: String
  description: String
  discussion: Boolean
  duration: String
  icon: String
  id: String
  keywords: String
  show: String
  source: String
  title: String
  type: String
  url: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input DateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

type Discussion {
  attachments(
    after: AttachmentWhereUniqueInput
    before: AttachmentWhereUniqueInput
    first: Int
    last: Int
  ): [Attachment!]!
  ballotId: String
  card: String
  children: [Discussion]
  createdAt: DateTime!
  id: String!
  reactions(
    after: ReactionWhereUniqueInput
    before: ReactionWhereUniqueInput
    first: Int
    last: Int
  ): [Reaction!]!
  text: String!
  title: String!
  updatedAt: DateTime!
  user: User!
}

input DiscussionCreateManyWithoutBallotInput {
  connect: [DiscussionWhereUniqueInput!]
  connectOrCreate: [DiscussionCreateOrConnectWithoutballotInput!]
  create: [DiscussionCreateWithoutBallotInput!]
}

input DiscussionCreateManyWithoutSchoolInput {
  connect: [DiscussionWhereUniqueInput!]
  connectOrCreate: [DiscussionCreateOrConnectWithoutschoolInput!]
  create: [DiscussionCreateWithoutSchoolInput!]
}

input DiscussionCreateManyWithoutTeamInput {
  connect: [DiscussionWhereUniqueInput!]
  connectOrCreate: [DiscussionCreateOrConnectWithoutteamInput!]
  create: [DiscussionCreateWithoutTeamInput!]
}

input DiscussionCreateManyWithoutUserInput {
  connect: [DiscussionWhereUniqueInput!]
  connectOrCreate: [DiscussionCreateOrConnectWithoutuserInput!]
  create: [DiscussionCreateWithoutUserInput!]
}

input DiscussionCreateOneWithoutActivityInput {
  connect: DiscussionWhereUniqueInput
  connectOrCreate: DiscussionCreateOrConnectWithoutActivityInput
  create: DiscussionCreateWithoutActivityInput
}

input DiscussionCreateOneWithoutAttachmentsInput {
  connect: DiscussionWhereUniqueInput
  connectOrCreate: DiscussionCreateOrConnectWithoutattachmentsInput
  create: DiscussionCreateWithoutAttachmentsInput
}

input DiscussionCreateOneWithoutReactionsInput {
  connect: DiscussionWhereUniqueInput
  connectOrCreate: DiscussionCreateOrConnectWithoutreactionsInput
  create: DiscussionCreateWithoutReactionsInput
}

input DiscussionCreateOrConnectWithoutActivityInput {
  create: DiscussionCreateWithoutActivityInput!
  where: DiscussionWhereUniqueInput!
}

input DiscussionCreateOrConnectWithoutattachmentsInput {
  create: DiscussionCreateWithoutAttachmentsInput!
  where: DiscussionWhereUniqueInput!
}

input DiscussionCreateOrConnectWithoutballotInput {
  create: DiscussionCreateWithoutBallotInput!
  where: DiscussionWhereUniqueInput!
}

input DiscussionCreateOrConnectWithoutreactionsInput {
  create: DiscussionCreateWithoutReactionsInput!
  where: DiscussionWhereUniqueInput!
}

input DiscussionCreateOrConnectWithoutschoolInput {
  create: DiscussionCreateWithoutSchoolInput!
  where: DiscussionWhereUniqueInput!
}

input DiscussionCreateOrConnectWithoutteamInput {
  create: DiscussionCreateWithoutTeamInput!
  where: DiscussionWhereUniqueInput!
}

input DiscussionCreateOrConnectWithoutuserInput {
  create: DiscussionCreateWithoutUserInput!
  where: DiscussionWhereUniqueInput!
}

input DiscussionCreateWithoutActivityInput {
  attachments: AttachmentCreateManyWithoutDiscussionInput
  ballot: BallotCreateOneWithoutDiscussionInput
  card: String
  createdAt: DateTime
  id: String
  reactions: ReactionCreateManyWithoutDiscussionInput
  school: SchoolCreateOneWithoutDiscussionInput
  team: TeamCreateOneWithoutDiscussionInput!
  text: String
  title: String
  updatedAt: DateTime
  user: UserCreateOneWithoutDiscussionsInput!
}

input DiscussionCreateWithoutAttachmentsInput {
  Activity: ActivityCreateManyWithoutDiscussionInput
  ballot: BallotCreateOneWithoutDiscussionInput
  card: String
  createdAt: DateTime
  id: String
  reactions: ReactionCreateManyWithoutDiscussionInput
  school: SchoolCreateOneWithoutDiscussionInput
  team: TeamCreateOneWithoutDiscussionInput!
  text: String
  title: String
  updatedAt: DateTime
  user: UserCreateOneWithoutDiscussionsInput!
}

input DiscussionCreateWithoutBallotInput {
  Activity: ActivityCreateManyWithoutDiscussionInput
  attachments: AttachmentCreateManyWithoutDiscussionInput
  card: String
  createdAt: DateTime
  id: String
  reactions: ReactionCreateManyWithoutDiscussionInput
  school: SchoolCreateOneWithoutDiscussionInput
  team: TeamCreateOneWithoutDiscussionInput!
  text: String
  title: String
  updatedAt: DateTime
  user: UserCreateOneWithoutDiscussionsInput!
}

input DiscussionCreateWithoutReactionsInput {
  Activity: ActivityCreateManyWithoutDiscussionInput
  attachments: AttachmentCreateManyWithoutDiscussionInput
  ballot: BallotCreateOneWithoutDiscussionInput
  card: String
  createdAt: DateTime
  id: String
  school: SchoolCreateOneWithoutDiscussionInput
  team: TeamCreateOneWithoutDiscussionInput!
  text: String
  title: String
  updatedAt: DateTime
  user: UserCreateOneWithoutDiscussionsInput!
}

input DiscussionCreateWithoutSchoolInput {
  Activity: ActivityCreateManyWithoutDiscussionInput
  attachments: AttachmentCreateManyWithoutDiscussionInput
  ballot: BallotCreateOneWithoutDiscussionInput
  card: String
  createdAt: DateTime
  id: String
  reactions: ReactionCreateManyWithoutDiscussionInput
  team: TeamCreateOneWithoutDiscussionInput!
  text: String
  title: String
  updatedAt: DateTime
  user: UserCreateOneWithoutDiscussionsInput!
}

input DiscussionCreateWithoutTeamInput {
  Activity: ActivityCreateManyWithoutDiscussionInput
  attachments: AttachmentCreateManyWithoutDiscussionInput
  ballot: BallotCreateOneWithoutDiscussionInput
  card: String
  createdAt: DateTime
  id: String
  reactions: ReactionCreateManyWithoutDiscussionInput
  school: SchoolCreateOneWithoutDiscussionInput
  text: String
  title: String
  updatedAt: DateTime
  user: UserCreateOneWithoutDiscussionsInput!
}

input DiscussionCreateWithoutUserInput {
  Activity: ActivityCreateManyWithoutDiscussionInput
  attachments: AttachmentCreateManyWithoutDiscussionInput
  ballot: BallotCreateOneWithoutDiscussionInput
  card: String
  createdAt: DateTime
  id: String
  reactions: ReactionCreateManyWithoutDiscussionInput
  school: SchoolCreateOneWithoutDiscussionInput
  team: TeamCreateOneWithoutDiscussionInput!
  text: String
  title: String
  updatedAt: DateTime
}

input DiscussionListRelationFilter {
  every: DiscussionWhereInput
  none: DiscussionWhereInput
  some: DiscussionWhereInput
}

input DiscussionScalarWhereInput {
  AND: [DiscussionScalarWhereInput!]
  ballotId: StringNullableFilter
  card: StringNullableFilter
  createdAt: DateTimeFilter
  id: StringFilter
  NOT: [DiscussionScalarWhereInput!]
  OR: [DiscussionScalarWhereInput!]
  schoolId: StringNullableFilter
  teamId: StringFilter
  text: StringFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  userId: StringFilter
}

input DiscussionUpdateManyMutationInput {
  card: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  text: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input DiscussionUpdateManyWithoutBallotInput {
  connect: [DiscussionWhereUniqueInput!]
  connectOrCreate: [DiscussionCreateOrConnectWithoutballotInput!]
  create: [DiscussionCreateWithoutBallotInput!]
  delete: [DiscussionWhereUniqueInput!]
  deleteMany: [DiscussionScalarWhereInput!]
  disconnect: [DiscussionWhereUniqueInput!]
  set: [DiscussionWhereUniqueInput!]
  update: [DiscussionUpdateWithWhereUniqueWithoutBallotInput!]
  updateMany: [DiscussionUpdateManyWithWhereWithoutBallotInput!]
  upsert: [DiscussionUpsertWithWhereUniqueWithoutBallotInput!]
}

input DiscussionUpdateManyWithoutSchoolInput {
  connect: [DiscussionWhereUniqueInput!]
  connectOrCreate: [DiscussionCreateOrConnectWithoutschoolInput!]
  create: [DiscussionCreateWithoutSchoolInput!]
  delete: [DiscussionWhereUniqueInput!]
  deleteMany: [DiscussionScalarWhereInput!]
  disconnect: [DiscussionWhereUniqueInput!]
  set: [DiscussionWhereUniqueInput!]
  update: [DiscussionUpdateWithWhereUniqueWithoutSchoolInput!]
  updateMany: [DiscussionUpdateManyWithWhereWithoutSchoolInput!]
  upsert: [DiscussionUpsertWithWhereUniqueWithoutSchoolInput!]
}

input DiscussionUpdateManyWithoutTeamInput {
  connect: [DiscussionWhereUniqueInput!]
  connectOrCreate: [DiscussionCreateOrConnectWithoutteamInput!]
  create: [DiscussionCreateWithoutTeamInput!]
  delete: [DiscussionWhereUniqueInput!]
  deleteMany: [DiscussionScalarWhereInput!]
  disconnect: [DiscussionWhereUniqueInput!]
  set: [DiscussionWhereUniqueInput!]
  update: [DiscussionUpdateWithWhereUniqueWithoutTeamInput!]
  updateMany: [DiscussionUpdateManyWithWhereWithoutTeamInput!]
  upsert: [DiscussionUpsertWithWhereUniqueWithoutTeamInput!]
}

input DiscussionUpdateManyWithoutUserInput {
  connect: [DiscussionWhereUniqueInput!]
  connectOrCreate: [DiscussionCreateOrConnectWithoutuserInput!]
  create: [DiscussionCreateWithoutUserInput!]
  delete: [DiscussionWhereUniqueInput!]
  deleteMany: [DiscussionScalarWhereInput!]
  disconnect: [DiscussionWhereUniqueInput!]
  set: [DiscussionWhereUniqueInput!]
  update: [DiscussionUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [DiscussionUpdateManyWithWhereWithoutUserInput!]
  upsert: [DiscussionUpsertWithWhereUniqueWithoutUserInput!]
}

input DiscussionUpdateManyWithWhereWithoutBallotInput {
  data: DiscussionUpdateManyMutationInput!
  where: DiscussionScalarWhereInput!
}

input DiscussionUpdateManyWithWhereWithoutSchoolInput {
  data: DiscussionUpdateManyMutationInput!
  where: DiscussionScalarWhereInput!
}

input DiscussionUpdateManyWithWhereWithoutTeamInput {
  data: DiscussionUpdateManyMutationInput!
  where: DiscussionScalarWhereInput!
}

input DiscussionUpdateManyWithWhereWithoutUserInput {
  data: DiscussionUpdateManyMutationInput!
  where: DiscussionScalarWhereInput!
}

input DiscussionUpdateOneWithoutActivityInput {
  connect: DiscussionWhereUniqueInput
  connectOrCreate: DiscussionCreateOrConnectWithoutActivityInput
  create: DiscussionCreateWithoutActivityInput
  delete: Boolean
  disconnect: Boolean
  update: DiscussionUpdateWithoutActivityInput
  upsert: DiscussionUpsertWithoutActivityInput
}

input DiscussionUpdateOneWithoutAttachmentsInput {
  connect: DiscussionWhereUniqueInput
  connectOrCreate: DiscussionCreateOrConnectWithoutattachmentsInput
  create: DiscussionCreateWithoutAttachmentsInput
  delete: Boolean
  disconnect: Boolean
  update: DiscussionUpdateWithoutAttachmentsInput
  upsert: DiscussionUpsertWithoutAttachmentsInput
}

input DiscussionUpdateOneWithoutReactionsInput {
  connect: DiscussionWhereUniqueInput
  connectOrCreate: DiscussionCreateOrConnectWithoutreactionsInput
  create: DiscussionCreateWithoutReactionsInput
  delete: Boolean
  disconnect: Boolean
  update: DiscussionUpdateWithoutReactionsInput
  upsert: DiscussionUpsertWithoutReactionsInput
}

input DiscussionUpdateWithoutActivityInput {
  attachments: AttachmentUpdateManyWithoutDiscussionInput
  ballot: BallotUpdateOneWithoutDiscussionInput
  card: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  reactions: ReactionUpdateManyWithoutDiscussionInput
  school: SchoolUpdateOneWithoutDiscussionInput
  team: TeamUpdateOneRequiredWithoutDiscussionInput
  text: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutDiscussionsInput
}

input DiscussionUpdateWithoutAttachmentsInput {
  Activity: ActivityUpdateManyWithoutDiscussionInput
  ballot: BallotUpdateOneWithoutDiscussionInput
  card: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  reactions: ReactionUpdateManyWithoutDiscussionInput
  school: SchoolUpdateOneWithoutDiscussionInput
  team: TeamUpdateOneRequiredWithoutDiscussionInput
  text: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutDiscussionsInput
}

input DiscussionUpdateWithoutBallotInput {
  Activity: ActivityUpdateManyWithoutDiscussionInput
  attachments: AttachmentUpdateManyWithoutDiscussionInput
  card: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  reactions: ReactionUpdateManyWithoutDiscussionInput
  school: SchoolUpdateOneWithoutDiscussionInput
  team: TeamUpdateOneRequiredWithoutDiscussionInput
  text: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutDiscussionsInput
}

input DiscussionUpdateWithoutReactionsInput {
  Activity: ActivityUpdateManyWithoutDiscussionInput
  attachments: AttachmentUpdateManyWithoutDiscussionInput
  ballot: BallotUpdateOneWithoutDiscussionInput
  card: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneWithoutDiscussionInput
  team: TeamUpdateOneRequiredWithoutDiscussionInput
  text: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutDiscussionsInput
}

input DiscussionUpdateWithoutSchoolInput {
  Activity: ActivityUpdateManyWithoutDiscussionInput
  attachments: AttachmentUpdateManyWithoutDiscussionInput
  ballot: BallotUpdateOneWithoutDiscussionInput
  card: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  reactions: ReactionUpdateManyWithoutDiscussionInput
  team: TeamUpdateOneRequiredWithoutDiscussionInput
  text: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutDiscussionsInput
}

input DiscussionUpdateWithoutTeamInput {
  Activity: ActivityUpdateManyWithoutDiscussionInput
  attachments: AttachmentUpdateManyWithoutDiscussionInput
  ballot: BallotUpdateOneWithoutDiscussionInput
  card: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  reactions: ReactionUpdateManyWithoutDiscussionInput
  school: SchoolUpdateOneWithoutDiscussionInput
  text: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutDiscussionsInput
}

input DiscussionUpdateWithoutUserInput {
  Activity: ActivityUpdateManyWithoutDiscussionInput
  attachments: AttachmentUpdateManyWithoutDiscussionInput
  ballot: BallotUpdateOneWithoutDiscussionInput
  card: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  reactions: ReactionUpdateManyWithoutDiscussionInput
  school: SchoolUpdateOneWithoutDiscussionInput
  team: TeamUpdateOneRequiredWithoutDiscussionInput
  text: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input DiscussionUpdateWithWhereUniqueWithoutBallotInput {
  data: DiscussionUpdateWithoutBallotInput!
  where: DiscussionWhereUniqueInput!
}

input DiscussionUpdateWithWhereUniqueWithoutSchoolInput {
  data: DiscussionUpdateWithoutSchoolInput!
  where: DiscussionWhereUniqueInput!
}

input DiscussionUpdateWithWhereUniqueWithoutTeamInput {
  data: DiscussionUpdateWithoutTeamInput!
  where: DiscussionWhereUniqueInput!
}

input DiscussionUpdateWithWhereUniqueWithoutUserInput {
  data: DiscussionUpdateWithoutUserInput!
  where: DiscussionWhereUniqueInput!
}

input DiscussionUpsertWithoutActivityInput {
  create: DiscussionCreateWithoutActivityInput!
  update: DiscussionUpdateWithoutActivityInput!
}

input DiscussionUpsertWithoutAttachmentsInput {
  create: DiscussionCreateWithoutAttachmentsInput!
  update: DiscussionUpdateWithoutAttachmentsInput!
}

input DiscussionUpsertWithoutReactionsInput {
  create: DiscussionCreateWithoutReactionsInput!
  update: DiscussionUpdateWithoutReactionsInput!
}

input DiscussionUpsertWithWhereUniqueWithoutBallotInput {
  create: DiscussionCreateWithoutBallotInput!
  update: DiscussionUpdateWithoutBallotInput!
  where: DiscussionWhereUniqueInput!
}

input DiscussionUpsertWithWhereUniqueWithoutSchoolInput {
  create: DiscussionCreateWithoutSchoolInput!
  update: DiscussionUpdateWithoutSchoolInput!
  where: DiscussionWhereUniqueInput!
}

input DiscussionUpsertWithWhereUniqueWithoutTeamInput {
  create: DiscussionCreateWithoutTeamInput!
  update: DiscussionUpdateWithoutTeamInput!
  where: DiscussionWhereUniqueInput!
}

input DiscussionUpsertWithWhereUniqueWithoutUserInput {
  create: DiscussionCreateWithoutUserInput!
  update: DiscussionUpdateWithoutUserInput!
  where: DiscussionWhereUniqueInput!
}

input DiscussionWhereInput {
  Activity: ActivityListRelationFilter
  AND: [DiscussionWhereInput!]
  attachments: AttachmentListRelationFilter
  ballot: BallotWhereInput
  ballotId: StringNullableFilter
  card: StringNullableFilter
  createdAt: DateTimeFilter
  id: StringFilter
  NOT: [DiscussionWhereInput!]
  OR: [DiscussionWhereInput!]
  reactions: ReactionListRelationFilter
  school: SchoolWhereInput
  schoolId: StringNullableFilter
  team: TeamWhereInput
  teamId: StringFilter
  text: StringFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  user: UserWhereInput
  userId: StringFilter
}

input DiscussionWhereUniqueInput {
  id: String
}

type Domain {
  approved: Boolean!
  id: String!
  name: String!
  schools(
    after: SchoolWhereUniqueInput
    before: SchoolWhereUniqueInput
    first: Int
    last: Int
  ): [School!]!
}

input DomainCreateOneWithoutSchoolsInput {
  connect: DomainWhereUniqueInput
  connectOrCreate: DomainCreateOrConnectWithoutschoolsInput
  create: DomainCreateWithoutSchoolsInput
}

input DomainCreateOneWithoutTeamInput {
  connect: DomainWhereUniqueInput
  connectOrCreate: DomainCreateOrConnectWithoutTeamInput
  create: DomainCreateWithoutTeamInput
}

input DomainCreateOrConnectWithoutschoolsInput {
  create: DomainCreateWithoutSchoolsInput!
  where: DomainWhereUniqueInput!
}

input DomainCreateOrConnectWithoutTeamInput {
  create: DomainCreateWithoutTeamInput!
  where: DomainWhereUniqueInput!
}

input DomainCreateWithoutSchoolsInput {
  approved: Boolean
  id: String
  name: String!
  Team: TeamCreateManyWithoutDomainInput
}

input DomainCreateWithoutTeamInput {
  approved: Boolean
  id: String
  name: String!
  schools: SchoolCreateManyWithoutDomainInput
}

input DomainUpdateOneWithoutSchoolsInput {
  connect: DomainWhereUniqueInput
  connectOrCreate: DomainCreateOrConnectWithoutschoolsInput
  create: DomainCreateWithoutSchoolsInput
  delete: Boolean
  disconnect: Boolean
  update: DomainUpdateWithoutSchoolsInput
  upsert: DomainUpsertWithoutSchoolsInput
}

input DomainUpdateOneWithoutTeamInput {
  connect: DomainWhereUniqueInput
  connectOrCreate: DomainCreateOrConnectWithoutTeamInput
  create: DomainCreateWithoutTeamInput
  delete: Boolean
  disconnect: Boolean
  update: DomainUpdateWithoutTeamInput
  upsert: DomainUpsertWithoutTeamInput
}

input DomainUpdateWithoutSchoolsInput {
  approved: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  Team: TeamUpdateManyWithoutDomainInput
}

input DomainUpdateWithoutTeamInput {
  approved: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  schools: SchoolUpdateManyWithoutDomainInput
}

input DomainUpsertWithoutSchoolsInput {
  create: DomainCreateWithoutSchoolsInput!
  update: DomainUpdateWithoutSchoolsInput!
}

input DomainUpsertWithoutTeamInput {
  create: DomainCreateWithoutTeamInput!
  update: DomainUpdateWithoutTeamInput!
}

input DomainWhereInput {
  AND: [DomainWhereInput!]
  approved: BoolFilter
  id: StringFilter
  name: StringFilter
  NOT: [DomainWhereInput!]
  OR: [DomainWhereInput!]
  schools: SchoolListRelationFilter
  Team: TeamListRelationFilter
}

input DomainWhereUniqueInput {
  id: String
  name: String
}

input EnumActivityTypeFieldUpdateOperationsInput {
  set: ActivityType
}

input EnumActivityTypeFilter {
  equals: ActivityType
  in: [ActivityType!]
  not: NestedEnumActivityTypeFilter
  notIn: [ActivityType!]
}

input EnumBallotScopeFieldUpdateOperationsInput {
  set: BallotScope
}

input EnumBallotScopeFilter {
  equals: BallotScope
  in: [BallotScope!]
  not: NestedEnumBallotScopeFilter
  notIn: [BallotScope!]
}

input EnumGenderNullableFilter {
  equals: Gender
  in: [Gender!]
  not: NestedEnumGenderNullableFilter
  notIn: [Gender!]
}

input EnumRoleFieldUpdateOperationsInput {
  set: Role
}

input EnumRoleFilter {
  equals: Role
  in: [Role!]
  not: NestedEnumRoleFilter
  notIn: [Role!]
}

input EnumVisibilityFieldUpdateOperationsInput {
  set: Visibility
}

input EnumVisibilityFilter {
  equals: Visibility
  in: [Visibility!]
  not: NestedEnumVisibilityFilter
  notIn: [Visibility!]
}

enum Gender {
  Female
  Male
  Other
  Unkown
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

type InviteResponse {
  created: [String]
  duplicated: [String]
  failed: [String]
  team: Team
}

"""
The `JSON` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar Json

input JsonNullableFilter {
  equals: Json
  not: Json
}

type Mutation {
  acceptInvite(invite: String!): Team
  addBallotRun(ballotId: String!, teamId: String!): BallotRun
  changePassword(password: String): ResponseLogin
  checkVerification(token: String): ResponseLogin
  createInvitedUser(
    email: String
    invite: String!
    lastname: String
    name: String
    password: String
  ): User
  createOneSchool(data: SchoolCreateInput!): School!
  createOneTeam(data: TeamCreateInput!): Team!
  createUser(data: UserCreateInput!): User!
  deleteAccount: Response
  deleteOneSchool(where: SchoolWhereUniqueInput!): School
  deleteOneTeam(where: TeamWhereUniqueInput!): Team
  deleteUser(where: UserWhereUniqueInput!): User
  emailVerification(email: String!, purpose: String!): ResponseLogin
  endBallotRun(ballotRunId: String!): BallotRun
  inviteStudents(emails: [String!]!, team: String!): InviteResponse
  login(email: String!, password: String!): ResponseLogin
  postActivity(data: ActivityCreateInput!): Activity!
  postDiscussion(
    ballotId: String
    card: String
    teamId: String!
    text: String!
    title: String!
  ): Discussion
  postWork(data: WorkCreateInput!): Work!
  removeBallotRun(ballotRunId: String!): Response
  setCards(cards: String!, teamId: String!): Team
  setSchool(school: String!): User
  startBallotRun(ballotRunId: String!): BallotRun
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  vote(ballotId: String!, vote: Int!): Vote
  voteCode(ballotRunId: String!, code: String!, vote: Int!): Response
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedBoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input NestedEnumActivityTypeFilter {
  equals: ActivityType
  in: [ActivityType!]
  not: NestedEnumActivityTypeFilter
  notIn: [ActivityType!]
}

input NestedEnumBallotScopeFilter {
  equals: BallotScope
  in: [BallotScope!]
  not: NestedEnumBallotScopeFilter
  notIn: [BallotScope!]
}

input NestedEnumGenderNullableFilter {
  equals: Gender
  in: [Gender!]
  not: NestedEnumGenderNullableFilter
  notIn: [Gender!]
}

input NestedEnumRoleFilter {
  equals: Role
  in: [Role!]
  not: NestedEnumRoleFilter
  notIn: [Role!]
}

input NestedEnumVisibilityFilter {
  equals: Visibility
  in: [Visibility!]
  not: NestedEnumVisibilityFilter
  notIn: [Visibility!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NullableBoolFieldUpdateOperationsInput {
  set: Boolean
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input NullableEnumGenderFieldUpdateOperationsInput {
  set: Gender
}

input NullableIntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

input OptionCreateManyWithoutBallotInput {
  connect: [OptionWhereUniqueInput!]
  connectOrCreate: [OptionCreateOrConnectWithoutballotInput!]
  create: [OptionCreateWithoutBallotInput!]
}

input OptionCreateOrConnectWithoutballotInput {
  create: OptionCreateWithoutBallotInput!
  where: OptionWhereUniqueInput!
}

input OptionCreateWithoutBallotInput {
  id: String
  title: String!
  vote: Int!
}

input OptionListRelationFilter {
  every: OptionWhereInput
  none: OptionWhereInput
  some: OptionWhereInput
}

input OptionScalarWhereInput {
  AND: [OptionScalarWhereInput!]
  ballotId: StringFilter
  id: StringFilter
  NOT: [OptionScalarWhereInput!]
  OR: [OptionScalarWhereInput!]
  title: StringFilter
  vote: IntFilter
}

input OptionUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  vote: IntFieldUpdateOperationsInput
}

input OptionUpdateManyWithoutBallotInput {
  connect: [OptionWhereUniqueInput!]
  connectOrCreate: [OptionCreateOrConnectWithoutballotInput!]
  create: [OptionCreateWithoutBallotInput!]
  delete: [OptionWhereUniqueInput!]
  deleteMany: [OptionScalarWhereInput!]
  disconnect: [OptionWhereUniqueInput!]
  set: [OptionWhereUniqueInput!]
  update: [OptionUpdateWithWhereUniqueWithoutBallotInput!]
  updateMany: [OptionUpdateManyWithWhereWithoutBallotInput!]
  upsert: [OptionUpsertWithWhereUniqueWithoutBallotInput!]
}

input OptionUpdateManyWithWhereWithoutBallotInput {
  data: OptionUpdateManyMutationInput!
  where: OptionScalarWhereInput!
}

input OptionUpdateWithoutBallotInput {
  id: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  vote: IntFieldUpdateOperationsInput
}

input OptionUpdateWithWhereUniqueWithoutBallotInput {
  data: OptionUpdateWithoutBallotInput!
  where: OptionWhereUniqueInput!
}

input OptionUpsertWithWhereUniqueWithoutBallotInput {
  create: OptionCreateWithoutBallotInput!
  update: OptionUpdateWithoutBallotInput!
  where: OptionWhereUniqueInput!
}

input OptionWhereInput {
  AND: [OptionWhereInput!]
  ballot: BallotWhereInput
  ballotId: StringFilter
  id: StringFilter
  NOT: [OptionWhereInput!]
  OR: [OptionWhereInput!]
  title: StringFilter
  vote: IntFilter
}

input OptionWhereUniqueInput {
  id: String
}

type Query {
  activities(
    after: ActivityWhereUniqueInput
    before: ActivityWhereUniqueInput
    first: Int
    last: Int
    orderBy: [ActivityOrderByInput!]
    where: ActivityWhereInput
  ): [Activity!]!
  attachment(where: AttachmentWhereUniqueInput!): Attachment
  attachments(
    after: AttachmentWhereUniqueInput
    before: AttachmentWhereUniqueInput
    first: Int
    last: Int
    orderBy: [AttachmentOrderByInput!]
    where: AttachmentWhereInput
  ): [Attachment!]!
  ballot(where: BallotWhereUniqueInput!): Ballot
  ballots(
    after: BallotWhereUniqueInput
    before: BallotWhereUniqueInput
    first: Int
    last: Int
    orderBy: [BallotOrderByInput!]
    where: BallotWhereInput
  ): [Ballot!]!
  cards(age: String, keywords: String, type: String): [Card]
  getBallotResults(
    ballotId: String!
    ballotRunId: String
    canton: String
    schoolId: String
    teamId: String
  ): BallotResults
  getBallotRuns(teamId: String!): [BallotRun]
  getTeamDiscussions(
    ballotId: String
    card: String
    teamId: String
  ): [Discussion]
  me: User
  school(where: SchoolWhereUniqueInput!): School
  schools(
    after: SchoolWhereUniqueInput
    before: SchoolWhereUniqueInput
    first: Int
    last: Int
    orderBy: [SchoolOrderByInput!]
    where: SchoolWhereInput
  ): [School!]!
  swissvotes(
    hasPosters: Boolean
    keywords: String
    limit: Int
    offset: Int
    result: Int
    sort: String
    type: Int
  ): [Swissvote]
  team(where: TeamWhereUniqueInput!): Team
  teams(
    after: TeamWhereUniqueInput
    before: TeamWhereUniqueInput
    first: Int
    last: Int
    orderBy: [TeamOrderByInput!]
    where: TeamWhereInput
  ): [Team!]!
  user(where: UserWhereUniqueInput!): User
  users(
    after: UserWhereUniqueInput
    before: UserWhereUniqueInput
    first: Int
    last: Int
    orderBy: [UserOrderByInput!]
    where: UserWhereInput
  ): [User!]!
  works(
    after: WorkWhereUniqueInput
    before: WorkWhereUniqueInput
    first: Int
    last: Int
    orderBy: [WorkOrderByInput!]
    where: WorkWhereInput
  ): [Work!]!
}

enum QueryMode {
  default
  insensitive
}

type Reaction {
  discussion: Discussion
  emoij: String!
  id: String!
  user: User!
}

input ReactionCreateManyWithoutDiscussionInput {
  connect: [ReactionWhereUniqueInput!]
  connectOrCreate: [ReactionCreateOrConnectWithoutdiscussionInput!]
  create: [ReactionCreateWithoutDiscussionInput!]
}

input ReactionCreateManyWithoutUserInput {
  connect: [ReactionWhereUniqueInput!]
  connectOrCreate: [ReactionCreateOrConnectWithoutuserInput!]
  create: [ReactionCreateWithoutUserInput!]
}

input ReactionCreateManyWithoutWorkInput {
  connect: [ReactionWhereUniqueInput!]
  connectOrCreate: [ReactionCreateOrConnectWithoutworkInput!]
  create: [ReactionCreateWithoutWorkInput!]
}

input ReactionCreateOrConnectWithoutdiscussionInput {
  create: ReactionCreateWithoutDiscussionInput!
  where: ReactionWhereUniqueInput!
}

input ReactionCreateOrConnectWithoutuserInput {
  create: ReactionCreateWithoutUserInput!
  where: ReactionWhereUniqueInput!
}

input ReactionCreateOrConnectWithoutworkInput {
  create: ReactionCreateWithoutWorkInput!
  where: ReactionWhereUniqueInput!
}

input ReactionCreateWithoutDiscussionInput {
  createdAt: DateTime
  emoij: String
  feedback: String!
  id: String
  stars: Int!
  updatedAt: DateTime
  user: UserCreateOneWithoutReactionsInput!
  work: WorkCreateOneWithoutReactionsInput
}

input ReactionCreateWithoutUserInput {
  createdAt: DateTime
  discussion: DiscussionCreateOneWithoutReactionsInput
  emoij: String
  feedback: String!
  id: String
  stars: Int!
  updatedAt: DateTime
  work: WorkCreateOneWithoutReactionsInput
}

input ReactionCreateWithoutWorkInput {
  createdAt: DateTime
  discussion: DiscussionCreateOneWithoutReactionsInput
  emoij: String
  feedback: String!
  id: String
  stars: Int!
  updatedAt: DateTime
  user: UserCreateOneWithoutReactionsInput!
}

input ReactionListRelationFilter {
  every: ReactionWhereInput
  none: ReactionWhereInput
  some: ReactionWhereInput
}

input ReactionScalarWhereInput {
  AND: [ReactionScalarWhereInput!]
  createdAt: DateTimeFilter
  discussionId: StringNullableFilter
  emoij: StringFilter
  feedback: StringFilter
  id: StringFilter
  NOT: [ReactionScalarWhereInput!]
  OR: [ReactionScalarWhereInput!]
  stars: IntFilter
  updatedAt: DateTimeFilter
  userId: StringFilter
  workId: StringNullableFilter
}

input ReactionUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  emoij: StringFieldUpdateOperationsInput
  feedback: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  stars: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ReactionUpdateManyWithoutDiscussionInput {
  connect: [ReactionWhereUniqueInput!]
  connectOrCreate: [ReactionCreateOrConnectWithoutdiscussionInput!]
  create: [ReactionCreateWithoutDiscussionInput!]
  delete: [ReactionWhereUniqueInput!]
  deleteMany: [ReactionScalarWhereInput!]
  disconnect: [ReactionWhereUniqueInput!]
  set: [ReactionWhereUniqueInput!]
  update: [ReactionUpdateWithWhereUniqueWithoutDiscussionInput!]
  updateMany: [ReactionUpdateManyWithWhereWithoutDiscussionInput!]
  upsert: [ReactionUpsertWithWhereUniqueWithoutDiscussionInput!]
}

input ReactionUpdateManyWithoutUserInput {
  connect: [ReactionWhereUniqueInput!]
  connectOrCreate: [ReactionCreateOrConnectWithoutuserInput!]
  create: [ReactionCreateWithoutUserInput!]
  delete: [ReactionWhereUniqueInput!]
  deleteMany: [ReactionScalarWhereInput!]
  disconnect: [ReactionWhereUniqueInput!]
  set: [ReactionWhereUniqueInput!]
  update: [ReactionUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [ReactionUpdateManyWithWhereWithoutUserInput!]
  upsert: [ReactionUpsertWithWhereUniqueWithoutUserInput!]
}

input ReactionUpdateManyWithoutWorkInput {
  connect: [ReactionWhereUniqueInput!]
  connectOrCreate: [ReactionCreateOrConnectWithoutworkInput!]
  create: [ReactionCreateWithoutWorkInput!]
  delete: [ReactionWhereUniqueInput!]
  deleteMany: [ReactionScalarWhereInput!]
  disconnect: [ReactionWhereUniqueInput!]
  set: [ReactionWhereUniqueInput!]
  update: [ReactionUpdateWithWhereUniqueWithoutWorkInput!]
  updateMany: [ReactionUpdateManyWithWhereWithoutWorkInput!]
  upsert: [ReactionUpsertWithWhereUniqueWithoutWorkInput!]
}

input ReactionUpdateManyWithWhereWithoutDiscussionInput {
  data: ReactionUpdateManyMutationInput!
  where: ReactionScalarWhereInput!
}

input ReactionUpdateManyWithWhereWithoutUserInput {
  data: ReactionUpdateManyMutationInput!
  where: ReactionScalarWhereInput!
}

input ReactionUpdateManyWithWhereWithoutWorkInput {
  data: ReactionUpdateManyMutationInput!
  where: ReactionScalarWhereInput!
}

input ReactionUpdateWithoutDiscussionInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  emoij: StringFieldUpdateOperationsInput
  feedback: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  stars: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutReactionsInput
  work: WorkUpdateOneWithoutReactionsInput
}

input ReactionUpdateWithoutUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  discussion: DiscussionUpdateOneWithoutReactionsInput
  emoij: StringFieldUpdateOperationsInput
  feedback: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  stars: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  work: WorkUpdateOneWithoutReactionsInput
}

input ReactionUpdateWithoutWorkInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  discussion: DiscussionUpdateOneWithoutReactionsInput
  emoij: StringFieldUpdateOperationsInput
  feedback: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  stars: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutReactionsInput
}

input ReactionUpdateWithWhereUniqueWithoutDiscussionInput {
  data: ReactionUpdateWithoutDiscussionInput!
  where: ReactionWhereUniqueInput!
}

input ReactionUpdateWithWhereUniqueWithoutUserInput {
  data: ReactionUpdateWithoutUserInput!
  where: ReactionWhereUniqueInput!
}

input ReactionUpdateWithWhereUniqueWithoutWorkInput {
  data: ReactionUpdateWithoutWorkInput!
  where: ReactionWhereUniqueInput!
}

input ReactionUpsertWithWhereUniqueWithoutDiscussionInput {
  create: ReactionCreateWithoutDiscussionInput!
  update: ReactionUpdateWithoutDiscussionInput!
  where: ReactionWhereUniqueInput!
}

input ReactionUpsertWithWhereUniqueWithoutUserInput {
  create: ReactionCreateWithoutUserInput!
  update: ReactionUpdateWithoutUserInput!
  where: ReactionWhereUniqueInput!
}

input ReactionUpsertWithWhereUniqueWithoutWorkInput {
  create: ReactionCreateWithoutWorkInput!
  update: ReactionUpdateWithoutWorkInput!
  where: ReactionWhereUniqueInput!
}

input ReactionWhereInput {
  AND: [ReactionWhereInput!]
  createdAt: DateTimeFilter
  discussion: DiscussionWhereInput
  discussionId: StringNullableFilter
  emoij: StringFilter
  feedback: StringFilter
  id: StringFilter
  NOT: [ReactionWhereInput!]
  OR: [ReactionWhereInput!]
  stars: IntFilter
  updatedAt: DateTimeFilter
  user: UserWhereInput
  userId: StringFilter
  work: WorkWhereInput
  workId: StringNullableFilter
}

input ReactionWhereUniqueInput {
  id: String
}

type Response {
  error: Boolean
  message: String
  success: Boolean
}

type ResponseLogin {
  token: String
  user: User
}

enum Role {
  Admin
  Principal
  Student
  Teacher
  User
}

type School {
  address: String!
  canton: String!
  city: String!
  id: String!
  members(
    after: UserWhereUniqueInput
    before: UserWhereUniqueInput
    first: Int
    last: Int
  ): [User!]!
  name: String!
  teams(
    after: TeamWhereUniqueInput
    before: TeamWhereUniqueInput
    first: Int
    last: Int
  ): [Team!]!
  type: String!
  zip: String!
}

input SchoolCreateInput {
  activity: ActivityCreateManyWithoutSchoolInput
  address: String
  attachment: AttachmentCreateManyWithoutSchoolInput
  ballots: BallotCreateManyWithoutSchoolInput
  canton: String
  city: String
  discussion: DiscussionCreateManyWithoutSchoolInput
  domain: DomainCreateOneWithoutSchoolsInput
  id: String
  members: UserCreateManyWithoutSchoolInput
  name: String!
  teams: TeamCreateManyWithoutSchoolInput
  type: String
  Vote: VoteCreateManyWithoutSchoolInput
  Voted: VotedCreateManyWithoutSchoolInput
  work: WorkCreateManyWithoutSchoolInput
  zip: String
}

input SchoolCreateManyWithoutDomainInput {
  connect: [SchoolWhereUniqueInput!]
  connectOrCreate: [SchoolCreateOrConnectWithoutdomainInput!]
  create: [SchoolCreateWithoutDomainInput!]
}

input SchoolCreateOneWithoutActivityInput {
  connect: SchoolWhereUniqueInput
  connectOrCreate: SchoolCreateOrConnectWithoutactivityInput
  create: SchoolCreateWithoutActivityInput
}

input SchoolCreateOneWithoutAttachmentInput {
  connect: SchoolWhereUniqueInput
  connectOrCreate: SchoolCreateOrConnectWithoutattachmentInput
  create: SchoolCreateWithoutAttachmentInput
}

input SchoolCreateOneWithoutBallotsInput {
  connect: SchoolWhereUniqueInput
  connectOrCreate: SchoolCreateOrConnectWithoutballotsInput
  create: SchoolCreateWithoutBallotsInput
}

input SchoolCreateOneWithoutDiscussionInput {
  connect: SchoolWhereUniqueInput
  connectOrCreate: SchoolCreateOrConnectWithoutdiscussionInput
  create: SchoolCreateWithoutDiscussionInput
}

input SchoolCreateOneWithoutMembersInput {
  connect: SchoolWhereUniqueInput
  connectOrCreate: SchoolCreateOrConnectWithoutmembersInput
  create: SchoolCreateWithoutMembersInput
}

input SchoolCreateOneWithoutTeamsInput {
  connect: SchoolWhereUniqueInput
  connectOrCreate: SchoolCreateOrConnectWithoutteamsInput
  create: SchoolCreateWithoutTeamsInput
}

input SchoolCreateOneWithoutVotedInput {
  connect: SchoolWhereUniqueInput
  connectOrCreate: SchoolCreateOrConnectWithoutVotedInput
  create: SchoolCreateWithoutVotedInput
}

input SchoolCreateOneWithoutVoteInput {
  connect: SchoolWhereUniqueInput
  connectOrCreate: SchoolCreateOrConnectWithoutVoteInput
  create: SchoolCreateWithoutVoteInput
}

input SchoolCreateOneWithoutWorkInput {
  connect: SchoolWhereUniqueInput
  connectOrCreate: SchoolCreateOrConnectWithoutworkInput
  create: SchoolCreateWithoutWorkInput
}

input SchoolCreateOrConnectWithoutactivityInput {
  create: SchoolCreateWithoutActivityInput!
  where: SchoolWhereUniqueInput!
}

input SchoolCreateOrConnectWithoutattachmentInput {
  create: SchoolCreateWithoutAttachmentInput!
  where: SchoolWhereUniqueInput!
}

input SchoolCreateOrConnectWithoutballotsInput {
  create: SchoolCreateWithoutBallotsInput!
  where: SchoolWhereUniqueInput!
}

input SchoolCreateOrConnectWithoutdiscussionInput {
  create: SchoolCreateWithoutDiscussionInput!
  where: SchoolWhereUniqueInput!
}

input SchoolCreateOrConnectWithoutdomainInput {
  create: SchoolCreateWithoutDomainInput!
  where: SchoolWhereUniqueInput!
}

input SchoolCreateOrConnectWithoutmembersInput {
  create: SchoolCreateWithoutMembersInput!
  where: SchoolWhereUniqueInput!
}

input SchoolCreateOrConnectWithoutteamsInput {
  create: SchoolCreateWithoutTeamsInput!
  where: SchoolWhereUniqueInput!
}

input SchoolCreateOrConnectWithoutVotedInput {
  create: SchoolCreateWithoutVotedInput!
  where: SchoolWhereUniqueInput!
}

input SchoolCreateOrConnectWithoutVoteInput {
  create: SchoolCreateWithoutVoteInput!
  where: SchoolWhereUniqueInput!
}

input SchoolCreateOrConnectWithoutworkInput {
  create: SchoolCreateWithoutWorkInput!
  where: SchoolWhereUniqueInput!
}

input SchoolCreateWithoutActivityInput {
  address: String
  attachment: AttachmentCreateManyWithoutSchoolInput
  ballots: BallotCreateManyWithoutSchoolInput
  canton: String
  city: String
  discussion: DiscussionCreateManyWithoutSchoolInput
  domain: DomainCreateOneWithoutSchoolsInput
  id: String
  members: UserCreateManyWithoutSchoolInput
  name: String!
  teams: TeamCreateManyWithoutSchoolInput
  type: String
  Vote: VoteCreateManyWithoutSchoolInput
  Voted: VotedCreateManyWithoutSchoolInput
  work: WorkCreateManyWithoutSchoolInput
  zip: String
}

input SchoolCreateWithoutAttachmentInput {
  activity: ActivityCreateManyWithoutSchoolInput
  address: String
  ballots: BallotCreateManyWithoutSchoolInput
  canton: String
  city: String
  discussion: DiscussionCreateManyWithoutSchoolInput
  domain: DomainCreateOneWithoutSchoolsInput
  id: String
  members: UserCreateManyWithoutSchoolInput
  name: String!
  teams: TeamCreateManyWithoutSchoolInput
  type: String
  Vote: VoteCreateManyWithoutSchoolInput
  Voted: VotedCreateManyWithoutSchoolInput
  work: WorkCreateManyWithoutSchoolInput
  zip: String
}

input SchoolCreateWithoutBallotsInput {
  activity: ActivityCreateManyWithoutSchoolInput
  address: String
  attachment: AttachmentCreateManyWithoutSchoolInput
  canton: String
  city: String
  discussion: DiscussionCreateManyWithoutSchoolInput
  domain: DomainCreateOneWithoutSchoolsInput
  id: String
  members: UserCreateManyWithoutSchoolInput
  name: String!
  teams: TeamCreateManyWithoutSchoolInput
  type: String
  Vote: VoteCreateManyWithoutSchoolInput
  Voted: VotedCreateManyWithoutSchoolInput
  work: WorkCreateManyWithoutSchoolInput
  zip: String
}

input SchoolCreateWithoutDiscussionInput {
  activity: ActivityCreateManyWithoutSchoolInput
  address: String
  attachment: AttachmentCreateManyWithoutSchoolInput
  ballots: BallotCreateManyWithoutSchoolInput
  canton: String
  city: String
  domain: DomainCreateOneWithoutSchoolsInput
  id: String
  members: UserCreateManyWithoutSchoolInput
  name: String!
  teams: TeamCreateManyWithoutSchoolInput
  type: String
  Vote: VoteCreateManyWithoutSchoolInput
  Voted: VotedCreateManyWithoutSchoolInput
  work: WorkCreateManyWithoutSchoolInput
  zip: String
}

input SchoolCreateWithoutDomainInput {
  activity: ActivityCreateManyWithoutSchoolInput
  address: String
  attachment: AttachmentCreateManyWithoutSchoolInput
  ballots: BallotCreateManyWithoutSchoolInput
  canton: String
  city: String
  discussion: DiscussionCreateManyWithoutSchoolInput
  id: String
  members: UserCreateManyWithoutSchoolInput
  name: String!
  teams: TeamCreateManyWithoutSchoolInput
  type: String
  Vote: VoteCreateManyWithoutSchoolInput
  Voted: VotedCreateManyWithoutSchoolInput
  work: WorkCreateManyWithoutSchoolInput
  zip: String
}

input SchoolCreateWithoutMembersInput {
  activity: ActivityCreateManyWithoutSchoolInput
  address: String
  attachment: AttachmentCreateManyWithoutSchoolInput
  ballots: BallotCreateManyWithoutSchoolInput
  canton: String
  city: String
  discussion: DiscussionCreateManyWithoutSchoolInput
  domain: DomainCreateOneWithoutSchoolsInput
  id: String
  name: String!
  teams: TeamCreateManyWithoutSchoolInput
  type: String
  Vote: VoteCreateManyWithoutSchoolInput
  Voted: VotedCreateManyWithoutSchoolInput
  work: WorkCreateManyWithoutSchoolInput
  zip: String
}

input SchoolCreateWithoutTeamsInput {
  activity: ActivityCreateManyWithoutSchoolInput
  address: String
  attachment: AttachmentCreateManyWithoutSchoolInput
  ballots: BallotCreateManyWithoutSchoolInput
  canton: String
  city: String
  discussion: DiscussionCreateManyWithoutSchoolInput
  domain: DomainCreateOneWithoutSchoolsInput
  id: String
  members: UserCreateManyWithoutSchoolInput
  name: String!
  type: String
  Vote: VoteCreateManyWithoutSchoolInput
  Voted: VotedCreateManyWithoutSchoolInput
  work: WorkCreateManyWithoutSchoolInput
  zip: String
}

input SchoolCreateWithoutVotedInput {
  activity: ActivityCreateManyWithoutSchoolInput
  address: String
  attachment: AttachmentCreateManyWithoutSchoolInput
  ballots: BallotCreateManyWithoutSchoolInput
  canton: String
  city: String
  discussion: DiscussionCreateManyWithoutSchoolInput
  domain: DomainCreateOneWithoutSchoolsInput
  id: String
  members: UserCreateManyWithoutSchoolInput
  name: String!
  teams: TeamCreateManyWithoutSchoolInput
  type: String
  Vote: VoteCreateManyWithoutSchoolInput
  work: WorkCreateManyWithoutSchoolInput
  zip: String
}

input SchoolCreateWithoutVoteInput {
  activity: ActivityCreateManyWithoutSchoolInput
  address: String
  attachment: AttachmentCreateManyWithoutSchoolInput
  ballots: BallotCreateManyWithoutSchoolInput
  canton: String
  city: String
  discussion: DiscussionCreateManyWithoutSchoolInput
  domain: DomainCreateOneWithoutSchoolsInput
  id: String
  members: UserCreateManyWithoutSchoolInput
  name: String!
  teams: TeamCreateManyWithoutSchoolInput
  type: String
  Voted: VotedCreateManyWithoutSchoolInput
  work: WorkCreateManyWithoutSchoolInput
  zip: String
}

input SchoolCreateWithoutWorkInput {
  activity: ActivityCreateManyWithoutSchoolInput
  address: String
  attachment: AttachmentCreateManyWithoutSchoolInput
  ballots: BallotCreateManyWithoutSchoolInput
  canton: String
  city: String
  discussion: DiscussionCreateManyWithoutSchoolInput
  domain: DomainCreateOneWithoutSchoolsInput
  id: String
  members: UserCreateManyWithoutSchoolInput
  name: String!
  teams: TeamCreateManyWithoutSchoolInput
  type: String
  Vote: VoteCreateManyWithoutSchoolInput
  Voted: VotedCreateManyWithoutSchoolInput
  zip: String
}

input SchoolListRelationFilter {
  every: SchoolWhereInput
  none: SchoolWhereInput
  some: SchoolWhereInput
}

input SchoolOrderByInput {
  address: SortOrder
  canton: SortOrder
  city: SortOrder
  domainId: SortOrder
  id: SortOrder
  name: SortOrder
  type: SortOrder
  zip: SortOrder
}

input SchoolScalarWhereInput {
  address: StringFilter
  AND: [SchoolScalarWhereInput!]
  canton: StringFilter
  city: StringFilter
  domainId: StringNullableFilter
  id: StringFilter
  name: StringFilter
  NOT: [SchoolScalarWhereInput!]
  OR: [SchoolScalarWhereInput!]
  type: StringFilter
  zip: StringFilter
}

input SchoolUpdateManyMutationInput {
  address: StringFieldUpdateOperationsInput
  canton: StringFieldUpdateOperationsInput
  city: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  zip: StringFieldUpdateOperationsInput
}

input SchoolUpdateManyWithoutDomainInput {
  connect: [SchoolWhereUniqueInput!]
  connectOrCreate: [SchoolCreateOrConnectWithoutdomainInput!]
  create: [SchoolCreateWithoutDomainInput!]
  delete: [SchoolWhereUniqueInput!]
  deleteMany: [SchoolScalarWhereInput!]
  disconnect: [SchoolWhereUniqueInput!]
  set: [SchoolWhereUniqueInput!]
  update: [SchoolUpdateWithWhereUniqueWithoutDomainInput!]
  updateMany: [SchoolUpdateManyWithWhereWithoutDomainInput!]
  upsert: [SchoolUpsertWithWhereUniqueWithoutDomainInput!]
}

input SchoolUpdateManyWithWhereWithoutDomainInput {
  data: SchoolUpdateManyMutationInput!
  where: SchoolScalarWhereInput!
}

input SchoolUpdateOneRequiredWithoutActivityInput {
  connect: SchoolWhereUniqueInput
  connectOrCreate: SchoolCreateOrConnectWithoutactivityInput
  create: SchoolCreateWithoutActivityInput
  update: SchoolUpdateWithoutActivityInput
  upsert: SchoolUpsertWithoutActivityInput
}

input SchoolUpdateOneRequiredWithoutTeamsInput {
  connect: SchoolWhereUniqueInput
  connectOrCreate: SchoolCreateOrConnectWithoutteamsInput
  create: SchoolCreateWithoutTeamsInput
  update: SchoolUpdateWithoutTeamsInput
  upsert: SchoolUpsertWithoutTeamsInput
}

input SchoolUpdateOneRequiredWithoutWorkInput {
  connect: SchoolWhereUniqueInput
  connectOrCreate: SchoolCreateOrConnectWithoutworkInput
  create: SchoolCreateWithoutWorkInput
  update: SchoolUpdateWithoutWorkInput
  upsert: SchoolUpsertWithoutWorkInput
}

input SchoolUpdateOneWithoutAttachmentInput {
  connect: SchoolWhereUniqueInput
  connectOrCreate: SchoolCreateOrConnectWithoutattachmentInput
  create: SchoolCreateWithoutAttachmentInput
  delete: Boolean
  disconnect: Boolean
  update: SchoolUpdateWithoutAttachmentInput
  upsert: SchoolUpsertWithoutAttachmentInput
}

input SchoolUpdateOneWithoutBallotsInput {
  connect: SchoolWhereUniqueInput
  connectOrCreate: SchoolCreateOrConnectWithoutballotsInput
  create: SchoolCreateWithoutBallotsInput
  delete: Boolean
  disconnect: Boolean
  update: SchoolUpdateWithoutBallotsInput
  upsert: SchoolUpsertWithoutBallotsInput
}

input SchoolUpdateOneWithoutDiscussionInput {
  connect: SchoolWhereUniqueInput
  connectOrCreate: SchoolCreateOrConnectWithoutdiscussionInput
  create: SchoolCreateWithoutDiscussionInput
  delete: Boolean
  disconnect: Boolean
  update: SchoolUpdateWithoutDiscussionInput
  upsert: SchoolUpsertWithoutDiscussionInput
}

input SchoolUpdateOneWithoutMembersInput {
  connect: SchoolWhereUniqueInput
  connectOrCreate: SchoolCreateOrConnectWithoutmembersInput
  create: SchoolCreateWithoutMembersInput
  delete: Boolean
  disconnect: Boolean
  update: SchoolUpdateWithoutMembersInput
  upsert: SchoolUpsertWithoutMembersInput
}

input SchoolUpdateOneWithoutVotedInput {
  connect: SchoolWhereUniqueInput
  connectOrCreate: SchoolCreateOrConnectWithoutVotedInput
  create: SchoolCreateWithoutVotedInput
  delete: Boolean
  disconnect: Boolean
  update: SchoolUpdateWithoutVotedInput
  upsert: SchoolUpsertWithoutVotedInput
}

input SchoolUpdateOneWithoutVoteInput {
  connect: SchoolWhereUniqueInput
  connectOrCreate: SchoolCreateOrConnectWithoutVoteInput
  create: SchoolCreateWithoutVoteInput
  delete: Boolean
  disconnect: Boolean
  update: SchoolUpdateWithoutVoteInput
  upsert: SchoolUpsertWithoutVoteInput
}

input SchoolUpdateWithoutActivityInput {
  address: StringFieldUpdateOperationsInput
  attachment: AttachmentUpdateManyWithoutSchoolInput
  ballots: BallotUpdateManyWithoutSchoolInput
  canton: StringFieldUpdateOperationsInput
  city: StringFieldUpdateOperationsInput
  discussion: DiscussionUpdateManyWithoutSchoolInput
  domain: DomainUpdateOneWithoutSchoolsInput
  id: StringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutSchoolInput
  name: StringFieldUpdateOperationsInput
  teams: TeamUpdateManyWithoutSchoolInput
  type: StringFieldUpdateOperationsInput
  Vote: VoteUpdateManyWithoutSchoolInput
  Voted: VotedUpdateManyWithoutSchoolInput
  work: WorkUpdateManyWithoutSchoolInput
  zip: StringFieldUpdateOperationsInput
}

input SchoolUpdateWithoutAttachmentInput {
  activity: ActivityUpdateManyWithoutSchoolInput
  address: StringFieldUpdateOperationsInput
  ballots: BallotUpdateManyWithoutSchoolInput
  canton: StringFieldUpdateOperationsInput
  city: StringFieldUpdateOperationsInput
  discussion: DiscussionUpdateManyWithoutSchoolInput
  domain: DomainUpdateOneWithoutSchoolsInput
  id: StringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutSchoolInput
  name: StringFieldUpdateOperationsInput
  teams: TeamUpdateManyWithoutSchoolInput
  type: StringFieldUpdateOperationsInput
  Vote: VoteUpdateManyWithoutSchoolInput
  Voted: VotedUpdateManyWithoutSchoolInput
  work: WorkUpdateManyWithoutSchoolInput
  zip: StringFieldUpdateOperationsInput
}

input SchoolUpdateWithoutBallotsInput {
  activity: ActivityUpdateManyWithoutSchoolInput
  address: StringFieldUpdateOperationsInput
  attachment: AttachmentUpdateManyWithoutSchoolInput
  canton: StringFieldUpdateOperationsInput
  city: StringFieldUpdateOperationsInput
  discussion: DiscussionUpdateManyWithoutSchoolInput
  domain: DomainUpdateOneWithoutSchoolsInput
  id: StringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutSchoolInput
  name: StringFieldUpdateOperationsInput
  teams: TeamUpdateManyWithoutSchoolInput
  type: StringFieldUpdateOperationsInput
  Vote: VoteUpdateManyWithoutSchoolInput
  Voted: VotedUpdateManyWithoutSchoolInput
  work: WorkUpdateManyWithoutSchoolInput
  zip: StringFieldUpdateOperationsInput
}

input SchoolUpdateWithoutDiscussionInput {
  activity: ActivityUpdateManyWithoutSchoolInput
  address: StringFieldUpdateOperationsInput
  attachment: AttachmentUpdateManyWithoutSchoolInput
  ballots: BallotUpdateManyWithoutSchoolInput
  canton: StringFieldUpdateOperationsInput
  city: StringFieldUpdateOperationsInput
  domain: DomainUpdateOneWithoutSchoolsInput
  id: StringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutSchoolInput
  name: StringFieldUpdateOperationsInput
  teams: TeamUpdateManyWithoutSchoolInput
  type: StringFieldUpdateOperationsInput
  Vote: VoteUpdateManyWithoutSchoolInput
  Voted: VotedUpdateManyWithoutSchoolInput
  work: WorkUpdateManyWithoutSchoolInput
  zip: StringFieldUpdateOperationsInput
}

input SchoolUpdateWithoutDomainInput {
  activity: ActivityUpdateManyWithoutSchoolInput
  address: StringFieldUpdateOperationsInput
  attachment: AttachmentUpdateManyWithoutSchoolInput
  ballots: BallotUpdateManyWithoutSchoolInput
  canton: StringFieldUpdateOperationsInput
  city: StringFieldUpdateOperationsInput
  discussion: DiscussionUpdateManyWithoutSchoolInput
  id: StringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutSchoolInput
  name: StringFieldUpdateOperationsInput
  teams: TeamUpdateManyWithoutSchoolInput
  type: StringFieldUpdateOperationsInput
  Vote: VoteUpdateManyWithoutSchoolInput
  Voted: VotedUpdateManyWithoutSchoolInput
  work: WorkUpdateManyWithoutSchoolInput
  zip: StringFieldUpdateOperationsInput
}

input SchoolUpdateWithoutMembersInput {
  activity: ActivityUpdateManyWithoutSchoolInput
  address: StringFieldUpdateOperationsInput
  attachment: AttachmentUpdateManyWithoutSchoolInput
  ballots: BallotUpdateManyWithoutSchoolInput
  canton: StringFieldUpdateOperationsInput
  city: StringFieldUpdateOperationsInput
  discussion: DiscussionUpdateManyWithoutSchoolInput
  domain: DomainUpdateOneWithoutSchoolsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  teams: TeamUpdateManyWithoutSchoolInput
  type: StringFieldUpdateOperationsInput
  Vote: VoteUpdateManyWithoutSchoolInput
  Voted: VotedUpdateManyWithoutSchoolInput
  work: WorkUpdateManyWithoutSchoolInput
  zip: StringFieldUpdateOperationsInput
}

input SchoolUpdateWithoutTeamsInput {
  activity: ActivityUpdateManyWithoutSchoolInput
  address: StringFieldUpdateOperationsInput
  attachment: AttachmentUpdateManyWithoutSchoolInput
  ballots: BallotUpdateManyWithoutSchoolInput
  canton: StringFieldUpdateOperationsInput
  city: StringFieldUpdateOperationsInput
  discussion: DiscussionUpdateManyWithoutSchoolInput
  domain: DomainUpdateOneWithoutSchoolsInput
  id: StringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutSchoolInput
  name: StringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
  Vote: VoteUpdateManyWithoutSchoolInput
  Voted: VotedUpdateManyWithoutSchoolInput
  work: WorkUpdateManyWithoutSchoolInput
  zip: StringFieldUpdateOperationsInput
}

input SchoolUpdateWithoutVotedInput {
  activity: ActivityUpdateManyWithoutSchoolInput
  address: StringFieldUpdateOperationsInput
  attachment: AttachmentUpdateManyWithoutSchoolInput
  ballots: BallotUpdateManyWithoutSchoolInput
  canton: StringFieldUpdateOperationsInput
  city: StringFieldUpdateOperationsInput
  discussion: DiscussionUpdateManyWithoutSchoolInput
  domain: DomainUpdateOneWithoutSchoolsInput
  id: StringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutSchoolInput
  name: StringFieldUpdateOperationsInput
  teams: TeamUpdateManyWithoutSchoolInput
  type: StringFieldUpdateOperationsInput
  Vote: VoteUpdateManyWithoutSchoolInput
  work: WorkUpdateManyWithoutSchoolInput
  zip: StringFieldUpdateOperationsInput
}

input SchoolUpdateWithoutVoteInput {
  activity: ActivityUpdateManyWithoutSchoolInput
  address: StringFieldUpdateOperationsInput
  attachment: AttachmentUpdateManyWithoutSchoolInput
  ballots: BallotUpdateManyWithoutSchoolInput
  canton: StringFieldUpdateOperationsInput
  city: StringFieldUpdateOperationsInput
  discussion: DiscussionUpdateManyWithoutSchoolInput
  domain: DomainUpdateOneWithoutSchoolsInput
  id: StringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutSchoolInput
  name: StringFieldUpdateOperationsInput
  teams: TeamUpdateManyWithoutSchoolInput
  type: StringFieldUpdateOperationsInput
  Voted: VotedUpdateManyWithoutSchoolInput
  work: WorkUpdateManyWithoutSchoolInput
  zip: StringFieldUpdateOperationsInput
}

input SchoolUpdateWithoutWorkInput {
  activity: ActivityUpdateManyWithoutSchoolInput
  address: StringFieldUpdateOperationsInput
  attachment: AttachmentUpdateManyWithoutSchoolInput
  ballots: BallotUpdateManyWithoutSchoolInput
  canton: StringFieldUpdateOperationsInput
  city: StringFieldUpdateOperationsInput
  discussion: DiscussionUpdateManyWithoutSchoolInput
  domain: DomainUpdateOneWithoutSchoolsInput
  id: StringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutSchoolInput
  name: StringFieldUpdateOperationsInput
  teams: TeamUpdateManyWithoutSchoolInput
  type: StringFieldUpdateOperationsInput
  Vote: VoteUpdateManyWithoutSchoolInput
  Voted: VotedUpdateManyWithoutSchoolInput
  zip: StringFieldUpdateOperationsInput
}

input SchoolUpdateWithWhereUniqueWithoutDomainInput {
  data: SchoolUpdateWithoutDomainInput!
  where: SchoolWhereUniqueInput!
}

input SchoolUpsertWithoutActivityInput {
  create: SchoolCreateWithoutActivityInput!
  update: SchoolUpdateWithoutActivityInput!
}

input SchoolUpsertWithoutAttachmentInput {
  create: SchoolCreateWithoutAttachmentInput!
  update: SchoolUpdateWithoutAttachmentInput!
}

input SchoolUpsertWithoutBallotsInput {
  create: SchoolCreateWithoutBallotsInput!
  update: SchoolUpdateWithoutBallotsInput!
}

input SchoolUpsertWithoutDiscussionInput {
  create: SchoolCreateWithoutDiscussionInput!
  update: SchoolUpdateWithoutDiscussionInput!
}

input SchoolUpsertWithoutMembersInput {
  create: SchoolCreateWithoutMembersInput!
  update: SchoolUpdateWithoutMembersInput!
}

input SchoolUpsertWithoutTeamsInput {
  create: SchoolCreateWithoutTeamsInput!
  update: SchoolUpdateWithoutTeamsInput!
}

input SchoolUpsertWithoutVotedInput {
  create: SchoolCreateWithoutVotedInput!
  update: SchoolUpdateWithoutVotedInput!
}

input SchoolUpsertWithoutVoteInput {
  create: SchoolCreateWithoutVoteInput!
  update: SchoolUpdateWithoutVoteInput!
}

input SchoolUpsertWithoutWorkInput {
  create: SchoolCreateWithoutWorkInput!
  update: SchoolUpdateWithoutWorkInput!
}

input SchoolUpsertWithWhereUniqueWithoutDomainInput {
  create: SchoolCreateWithoutDomainInput!
  update: SchoolUpdateWithoutDomainInput!
  where: SchoolWhereUniqueInput!
}

input SchoolWhereInput {
  activity: ActivityListRelationFilter
  address: StringFilter
  AND: [SchoolWhereInput!]
  attachment: AttachmentListRelationFilter
  ballots: BallotListRelationFilter
  canton: StringFilter
  city: StringFilter
  discussion: DiscussionListRelationFilter
  domain: DomainWhereInput
  domainId: StringNullableFilter
  id: StringFilter
  members: UserListRelationFilter
  name: StringFilter
  NOT: [SchoolWhereInput!]
  OR: [SchoolWhereInput!]
  teams: TeamListRelationFilter
  type: StringFilter
  Vote: VoteListRelationFilter
  Voted: VotedListRelationFilter
  work: WorkListRelationFilter
  zip: StringFilter
}

input SchoolWhereUniqueInput {
  id: String
}

enum SortOrder {
  asc
  desc
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type Swissvote {
  annahme: Int
  anr: String
  datum: String
  kategorien: String
  poster_ja: String
  poster_nein: String
  rechtsform: Int
  stand: Int
  stichwort: String
  swissvoteslink: String
  titel_kurz_d: String
  titel_off_d: String
  volk: Int
}

type Team {
  ballots(
    after: BallotWhereUniqueInput
    before: BallotWhereUniqueInput
    first: Int
    last: Int
  ): [Ballot!]!
  cards: String!
  code: String
  domain: Domain
  id: String!
  invite: String
  members(
    after: UserWhereUniqueInput
    before: UserWhereUniqueInput
    first: Int
    last: Int
  ): [User!]!
  name: String!
  school: School!
  teacher: User!
}

input TeamCreateInput {
  activity: ActivityCreateManyWithoutTeamInput
  attachment: AttachmentCreateManyWithoutTeamInput
  BallotRuns: BallotRunCreateManyWithoutTeamInput
  ballots: BallotCreateManyWithoutTeamInput
  cards: String
  discussion: DiscussionCreateManyWithoutTeamInput
  domain: DomainCreateOneWithoutTeamInput
  id: String
  members: UserCreateManyWithoutTeamInput
  name: String!
  school: SchoolCreateOneWithoutTeamsInput!
  teacher: UserCreateOneWithoutTeachesInput!
  User: UserCreateManyWithoutTeamInput
  Vote: VoteCreateManyWithoutTeamInput
  Voted: VotedCreateManyWithoutTeamInput
  work: WorkCreateManyWithoutTeamInput
  year: Int
}

input TeamCreateManyWithoutDomainInput {
  connect: [TeamWhereUniqueInput!]
  connectOrCreate: [TeamCreateOrConnectWithoutdomainInput!]
  create: [TeamCreateWithoutDomainInput!]
}

input TeamCreateManyWithoutSchoolInput {
  connect: [TeamWhereUniqueInput!]
  connectOrCreate: [TeamCreateOrConnectWithoutschoolInput!]
  create: [TeamCreateWithoutSchoolInput!]
}

input TeamCreateManyWithoutTeacherInput {
  connect: [TeamWhereUniqueInput!]
  connectOrCreate: [TeamCreateOrConnectWithoutteacherInput!]
  create: [TeamCreateWithoutTeacherInput!]
}

input TeamCreateOneWithoutActivityInput {
  connect: TeamWhereUniqueInput
  connectOrCreate: TeamCreateOrConnectWithoutactivityInput
  create: TeamCreateWithoutActivityInput
}

input TeamCreateOneWithoutAttachmentInput {
  connect: TeamWhereUniqueInput
  connectOrCreate: TeamCreateOrConnectWithoutattachmentInput
  create: TeamCreateWithoutAttachmentInput
}

input TeamCreateOneWithoutBallotRunsInput {
  connect: TeamWhereUniqueInput
  connectOrCreate: TeamCreateOrConnectWithoutBallotRunsInput
  create: TeamCreateWithoutBallotRunsInput
}

input TeamCreateOneWithoutBallotsInput {
  connect: TeamWhereUniqueInput
  connectOrCreate: TeamCreateOrConnectWithoutballotsInput
  create: TeamCreateWithoutBallotsInput
}

input TeamCreateOneWithoutDiscussionInput {
  connect: TeamWhereUniqueInput
  connectOrCreate: TeamCreateOrConnectWithoutdiscussionInput
  create: TeamCreateWithoutDiscussionInput
}

input TeamCreateOneWithoutMembersInput {
  connect: TeamWhereUniqueInput
  connectOrCreate: TeamCreateOrConnectWithoutmembersInput
  create: TeamCreateWithoutMembersInput
}

input TeamCreateOneWithoutUserInput {
  connect: TeamWhereUniqueInput
  connectOrCreate: TeamCreateOrConnectWithoutUserInput
  create: TeamCreateWithoutUserInput
}

input TeamCreateOneWithoutVotedInput {
  connect: TeamWhereUniqueInput
  connectOrCreate: TeamCreateOrConnectWithoutVotedInput
  create: TeamCreateWithoutVotedInput
}

input TeamCreateOneWithoutVoteInput {
  connect: TeamWhereUniqueInput
  connectOrCreate: TeamCreateOrConnectWithoutVoteInput
  create: TeamCreateWithoutVoteInput
}

input TeamCreateOneWithoutWorkInput {
  connect: TeamWhereUniqueInput
  connectOrCreate: TeamCreateOrConnectWithoutworkInput
  create: TeamCreateWithoutWorkInput
}

input TeamCreateOrConnectWithoutactivityInput {
  create: TeamCreateWithoutActivityInput!
  where: TeamWhereUniqueInput!
}

input TeamCreateOrConnectWithoutattachmentInput {
  create: TeamCreateWithoutAttachmentInput!
  where: TeamWhereUniqueInput!
}

input TeamCreateOrConnectWithoutBallotRunsInput {
  create: TeamCreateWithoutBallotRunsInput!
  where: TeamWhereUniqueInput!
}

input TeamCreateOrConnectWithoutballotsInput {
  create: TeamCreateWithoutBallotsInput!
  where: TeamWhereUniqueInput!
}

input TeamCreateOrConnectWithoutdiscussionInput {
  create: TeamCreateWithoutDiscussionInput!
  where: TeamWhereUniqueInput!
}

input TeamCreateOrConnectWithoutdomainInput {
  create: TeamCreateWithoutDomainInput!
  where: TeamWhereUniqueInput!
}

input TeamCreateOrConnectWithoutmembersInput {
  create: TeamCreateWithoutMembersInput!
  where: TeamWhereUniqueInput!
}

input TeamCreateOrConnectWithoutschoolInput {
  create: TeamCreateWithoutSchoolInput!
  where: TeamWhereUniqueInput!
}

input TeamCreateOrConnectWithoutteacherInput {
  create: TeamCreateWithoutTeacherInput!
  where: TeamWhereUniqueInput!
}

input TeamCreateOrConnectWithoutUserInput {
  create: TeamCreateWithoutUserInput!
  where: TeamWhereUniqueInput!
}

input TeamCreateOrConnectWithoutVotedInput {
  create: TeamCreateWithoutVotedInput!
  where: TeamWhereUniqueInput!
}

input TeamCreateOrConnectWithoutVoteInput {
  create: TeamCreateWithoutVoteInput!
  where: TeamWhereUniqueInput!
}

input TeamCreateOrConnectWithoutworkInput {
  create: TeamCreateWithoutWorkInput!
  where: TeamWhereUniqueInput!
}

input TeamCreateWithoutActivityInput {
  attachment: AttachmentCreateManyWithoutTeamInput
  BallotRuns: BallotRunCreateManyWithoutTeamInput
  ballots: BallotCreateManyWithoutTeamInput
  cards: String
  code: String
  discussion: DiscussionCreateManyWithoutTeamInput
  domain: DomainCreateOneWithoutTeamInput
  id: String
  invite: String
  members: UserCreateManyWithoutTeamInput
  name: String!
  school: SchoolCreateOneWithoutTeamsInput!
  teacher: UserCreateOneWithoutTeachesInput!
  User: UserCreateManyWithoutTeamInput
  Vote: VoteCreateManyWithoutTeamInput
  Voted: VotedCreateManyWithoutTeamInput
  work: WorkCreateManyWithoutTeamInput
  year: Int
}

input TeamCreateWithoutAttachmentInput {
  activity: ActivityCreateManyWithoutTeamInput
  BallotRuns: BallotRunCreateManyWithoutTeamInput
  ballots: BallotCreateManyWithoutTeamInput
  cards: String
  code: String
  discussion: DiscussionCreateManyWithoutTeamInput
  domain: DomainCreateOneWithoutTeamInput
  id: String
  invite: String
  members: UserCreateManyWithoutTeamInput
  name: String!
  school: SchoolCreateOneWithoutTeamsInput!
  teacher: UserCreateOneWithoutTeachesInput!
  User: UserCreateManyWithoutTeamInput
  Vote: VoteCreateManyWithoutTeamInput
  Voted: VotedCreateManyWithoutTeamInput
  work: WorkCreateManyWithoutTeamInput
  year: Int
}

input TeamCreateWithoutBallotRunsInput {
  activity: ActivityCreateManyWithoutTeamInput
  attachment: AttachmentCreateManyWithoutTeamInput
  ballots: BallotCreateManyWithoutTeamInput
  cards: String
  code: String
  discussion: DiscussionCreateManyWithoutTeamInput
  domain: DomainCreateOneWithoutTeamInput
  id: String
  invite: String
  members: UserCreateManyWithoutTeamInput
  name: String!
  school: SchoolCreateOneWithoutTeamsInput!
  teacher: UserCreateOneWithoutTeachesInput!
  User: UserCreateManyWithoutTeamInput
  Vote: VoteCreateManyWithoutTeamInput
  Voted: VotedCreateManyWithoutTeamInput
  work: WorkCreateManyWithoutTeamInput
  year: Int
}

input TeamCreateWithoutBallotsInput {
  activity: ActivityCreateManyWithoutTeamInput
  attachment: AttachmentCreateManyWithoutTeamInput
  BallotRuns: BallotRunCreateManyWithoutTeamInput
  cards: String
  code: String
  discussion: DiscussionCreateManyWithoutTeamInput
  domain: DomainCreateOneWithoutTeamInput
  id: String
  invite: String
  members: UserCreateManyWithoutTeamInput
  name: String!
  school: SchoolCreateOneWithoutTeamsInput!
  teacher: UserCreateOneWithoutTeachesInput!
  User: UserCreateManyWithoutTeamInput
  Vote: VoteCreateManyWithoutTeamInput
  Voted: VotedCreateManyWithoutTeamInput
  work: WorkCreateManyWithoutTeamInput
  year: Int
}

input TeamCreateWithoutDiscussionInput {
  activity: ActivityCreateManyWithoutTeamInput
  attachment: AttachmentCreateManyWithoutTeamInput
  BallotRuns: BallotRunCreateManyWithoutTeamInput
  ballots: BallotCreateManyWithoutTeamInput
  cards: String
  code: String
  domain: DomainCreateOneWithoutTeamInput
  id: String
  invite: String
  members: UserCreateManyWithoutTeamInput
  name: String!
  school: SchoolCreateOneWithoutTeamsInput!
  teacher: UserCreateOneWithoutTeachesInput!
  User: UserCreateManyWithoutTeamInput
  Vote: VoteCreateManyWithoutTeamInput
  Voted: VotedCreateManyWithoutTeamInput
  work: WorkCreateManyWithoutTeamInput
  year: Int
}

input TeamCreateWithoutDomainInput {
  activity: ActivityCreateManyWithoutTeamInput
  attachment: AttachmentCreateManyWithoutTeamInput
  BallotRuns: BallotRunCreateManyWithoutTeamInput
  ballots: BallotCreateManyWithoutTeamInput
  cards: String
  code: String
  discussion: DiscussionCreateManyWithoutTeamInput
  id: String
  invite: String
  members: UserCreateManyWithoutTeamInput
  name: String!
  school: SchoolCreateOneWithoutTeamsInput!
  teacher: UserCreateOneWithoutTeachesInput!
  User: UserCreateManyWithoutTeamInput
  Vote: VoteCreateManyWithoutTeamInput
  Voted: VotedCreateManyWithoutTeamInput
  work: WorkCreateManyWithoutTeamInput
  year: Int
}

input TeamCreateWithoutMembersInput {
  activity: ActivityCreateManyWithoutTeamInput
  attachment: AttachmentCreateManyWithoutTeamInput
  BallotRuns: BallotRunCreateManyWithoutTeamInput
  ballots: BallotCreateManyWithoutTeamInput
  cards: String
  code: String
  discussion: DiscussionCreateManyWithoutTeamInput
  domain: DomainCreateOneWithoutTeamInput
  id: String
  invite: String
  name: String!
  school: SchoolCreateOneWithoutTeamsInput!
  teacher: UserCreateOneWithoutTeachesInput!
  User: UserCreateManyWithoutTeamInput
  Vote: VoteCreateManyWithoutTeamInput
  Voted: VotedCreateManyWithoutTeamInput
  work: WorkCreateManyWithoutTeamInput
  year: Int
}

input TeamCreateWithoutSchoolInput {
  activity: ActivityCreateManyWithoutTeamInput
  attachment: AttachmentCreateManyWithoutTeamInput
  BallotRuns: BallotRunCreateManyWithoutTeamInput
  ballots: BallotCreateManyWithoutTeamInput
  cards: String
  code: String
  discussion: DiscussionCreateManyWithoutTeamInput
  domain: DomainCreateOneWithoutTeamInput
  id: String
  invite: String
  members: UserCreateManyWithoutTeamInput
  name: String!
  teacher: UserCreateOneWithoutTeachesInput!
  User: UserCreateManyWithoutTeamInput
  Vote: VoteCreateManyWithoutTeamInput
  Voted: VotedCreateManyWithoutTeamInput
  work: WorkCreateManyWithoutTeamInput
  year: Int
}

input TeamCreateWithoutTeacherInput {
  activity: ActivityCreateManyWithoutTeamInput
  attachment: AttachmentCreateManyWithoutTeamInput
  BallotRuns: BallotRunCreateManyWithoutTeamInput
  ballots: BallotCreateManyWithoutTeamInput
  cards: String
  code: String
  discussion: DiscussionCreateManyWithoutTeamInput
  domain: DomainCreateOneWithoutTeamInput
  id: String
  invite: String
  members: UserCreateManyWithoutTeamInput
  name: String!
  school: SchoolCreateOneWithoutTeamsInput!
  User: UserCreateManyWithoutTeamInput
  Vote: VoteCreateManyWithoutTeamInput
  Voted: VotedCreateManyWithoutTeamInput
  work: WorkCreateManyWithoutTeamInput
  year: Int
}

input TeamCreateWithoutUserInput {
  activity: ActivityCreateManyWithoutTeamInput
  attachment: AttachmentCreateManyWithoutTeamInput
  BallotRuns: BallotRunCreateManyWithoutTeamInput
  ballots: BallotCreateManyWithoutTeamInput
  cards: String
  code: String
  discussion: DiscussionCreateManyWithoutTeamInput
  domain: DomainCreateOneWithoutTeamInput
  id: String
  invite: String
  members: UserCreateManyWithoutTeamInput
  name: String!
  school: SchoolCreateOneWithoutTeamsInput!
  teacher: UserCreateOneWithoutTeachesInput!
  Vote: VoteCreateManyWithoutTeamInput
  Voted: VotedCreateManyWithoutTeamInput
  work: WorkCreateManyWithoutTeamInput
  year: Int
}

input TeamCreateWithoutVotedInput {
  activity: ActivityCreateManyWithoutTeamInput
  attachment: AttachmentCreateManyWithoutTeamInput
  BallotRuns: BallotRunCreateManyWithoutTeamInput
  ballots: BallotCreateManyWithoutTeamInput
  cards: String
  code: String
  discussion: DiscussionCreateManyWithoutTeamInput
  domain: DomainCreateOneWithoutTeamInput
  id: String
  invite: String
  members: UserCreateManyWithoutTeamInput
  name: String!
  school: SchoolCreateOneWithoutTeamsInput!
  teacher: UserCreateOneWithoutTeachesInput!
  User: UserCreateManyWithoutTeamInput
  Vote: VoteCreateManyWithoutTeamInput
  work: WorkCreateManyWithoutTeamInput
  year: Int
}

input TeamCreateWithoutVoteInput {
  activity: ActivityCreateManyWithoutTeamInput
  attachment: AttachmentCreateManyWithoutTeamInput
  BallotRuns: BallotRunCreateManyWithoutTeamInput
  ballots: BallotCreateManyWithoutTeamInput
  cards: String
  code: String
  discussion: DiscussionCreateManyWithoutTeamInput
  domain: DomainCreateOneWithoutTeamInput
  id: String
  invite: String
  members: UserCreateManyWithoutTeamInput
  name: String!
  school: SchoolCreateOneWithoutTeamsInput!
  teacher: UserCreateOneWithoutTeachesInput!
  User: UserCreateManyWithoutTeamInput
  Voted: VotedCreateManyWithoutTeamInput
  work: WorkCreateManyWithoutTeamInput
  year: Int
}

input TeamCreateWithoutWorkInput {
  activity: ActivityCreateManyWithoutTeamInput
  attachment: AttachmentCreateManyWithoutTeamInput
  BallotRuns: BallotRunCreateManyWithoutTeamInput
  ballots: BallotCreateManyWithoutTeamInput
  cards: String
  code: String
  discussion: DiscussionCreateManyWithoutTeamInput
  domain: DomainCreateOneWithoutTeamInput
  id: String
  invite: String
  members: UserCreateManyWithoutTeamInput
  name: String!
  school: SchoolCreateOneWithoutTeamsInput!
  teacher: UserCreateOneWithoutTeachesInput!
  User: UserCreateManyWithoutTeamInput
  Vote: VoteCreateManyWithoutTeamInput
  Voted: VotedCreateManyWithoutTeamInput
  year: Int
}

input TeamListRelationFilter {
  every: TeamWhereInput
  none: TeamWhereInput
  some: TeamWhereInput
}

input TeamOrderByInput {
  cards: SortOrder
  code: SortOrder
  domainId: SortOrder
  id: SortOrder
  invite: SortOrder
  name: SortOrder
  schoolId: SortOrder
  teacherId: SortOrder
  year: SortOrder
}

input TeamScalarWhereInput {
  AND: [TeamScalarWhereInput!]
  cards: StringFilter
  code: StringNullableFilter
  domainId: StringNullableFilter
  id: StringFilter
  invite: StringNullableFilter
  name: StringFilter
  NOT: [TeamScalarWhereInput!]
  OR: [TeamScalarWhereInput!]
  schoolId: StringFilter
  teacherId: StringFilter
  year: IntNullableFilter
}

input TeamUpdateManyMutationInput {
  cards: StringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  invite: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  year: NullableIntFieldUpdateOperationsInput
}

input TeamUpdateManyWithoutDomainInput {
  connect: [TeamWhereUniqueInput!]
  connectOrCreate: [TeamCreateOrConnectWithoutdomainInput!]
  create: [TeamCreateWithoutDomainInput!]
  delete: [TeamWhereUniqueInput!]
  deleteMany: [TeamScalarWhereInput!]
  disconnect: [TeamWhereUniqueInput!]
  set: [TeamWhereUniqueInput!]
  update: [TeamUpdateWithWhereUniqueWithoutDomainInput!]
  updateMany: [TeamUpdateManyWithWhereWithoutDomainInput!]
  upsert: [TeamUpsertWithWhereUniqueWithoutDomainInput!]
}

input TeamUpdateManyWithoutSchoolInput {
  connect: [TeamWhereUniqueInput!]
  connectOrCreate: [TeamCreateOrConnectWithoutschoolInput!]
  create: [TeamCreateWithoutSchoolInput!]
  delete: [TeamWhereUniqueInput!]
  deleteMany: [TeamScalarWhereInput!]
  disconnect: [TeamWhereUniqueInput!]
  set: [TeamWhereUniqueInput!]
  update: [TeamUpdateWithWhereUniqueWithoutSchoolInput!]
  updateMany: [TeamUpdateManyWithWhereWithoutSchoolInput!]
  upsert: [TeamUpsertWithWhereUniqueWithoutSchoolInput!]
}

input TeamUpdateManyWithoutTeacherInput {
  connect: [TeamWhereUniqueInput!]
  connectOrCreate: [TeamCreateOrConnectWithoutteacherInput!]
  create: [TeamCreateWithoutTeacherInput!]
  delete: [TeamWhereUniqueInput!]
  deleteMany: [TeamScalarWhereInput!]
  disconnect: [TeamWhereUniqueInput!]
  set: [TeamWhereUniqueInput!]
  update: [TeamUpdateWithWhereUniqueWithoutTeacherInput!]
  updateMany: [TeamUpdateManyWithWhereWithoutTeacherInput!]
  upsert: [TeamUpsertWithWhereUniqueWithoutTeacherInput!]
}

input TeamUpdateManyWithWhereWithoutDomainInput {
  data: TeamUpdateManyMutationInput!
  where: TeamScalarWhereInput!
}

input TeamUpdateManyWithWhereWithoutSchoolInput {
  data: TeamUpdateManyMutationInput!
  where: TeamScalarWhereInput!
}

input TeamUpdateManyWithWhereWithoutTeacherInput {
  data: TeamUpdateManyMutationInput!
  where: TeamScalarWhereInput!
}

input TeamUpdateOneRequiredWithoutActivityInput {
  connect: TeamWhereUniqueInput
  connectOrCreate: TeamCreateOrConnectWithoutactivityInput
  create: TeamCreateWithoutActivityInput
  update: TeamUpdateWithoutActivityInput
  upsert: TeamUpsertWithoutActivityInput
}

input TeamUpdateOneRequiredWithoutAttachmentInput {
  connect: TeamWhereUniqueInput
  connectOrCreate: TeamCreateOrConnectWithoutattachmentInput
  create: TeamCreateWithoutAttachmentInput
  update: TeamUpdateWithoutAttachmentInput
  upsert: TeamUpsertWithoutAttachmentInput
}

input TeamUpdateOneRequiredWithoutBallotRunsInput {
  connect: TeamWhereUniqueInput
  connectOrCreate: TeamCreateOrConnectWithoutBallotRunsInput
  create: TeamCreateWithoutBallotRunsInput
  update: TeamUpdateWithoutBallotRunsInput
  upsert: TeamUpsertWithoutBallotRunsInput
}

input TeamUpdateOneRequiredWithoutDiscussionInput {
  connect: TeamWhereUniqueInput
  connectOrCreate: TeamCreateOrConnectWithoutdiscussionInput
  create: TeamCreateWithoutDiscussionInput
  update: TeamUpdateWithoutDiscussionInput
  upsert: TeamUpsertWithoutDiscussionInput
}

input TeamUpdateOneRequiredWithoutWorkInput {
  connect: TeamWhereUniqueInput
  connectOrCreate: TeamCreateOrConnectWithoutworkInput
  create: TeamCreateWithoutWorkInput
  update: TeamUpdateWithoutWorkInput
  upsert: TeamUpsertWithoutWorkInput
}

input TeamUpdateOneWithoutBallotsInput {
  connect: TeamWhereUniqueInput
  connectOrCreate: TeamCreateOrConnectWithoutballotsInput
  create: TeamCreateWithoutBallotsInput
  delete: Boolean
  disconnect: Boolean
  update: TeamUpdateWithoutBallotsInput
  upsert: TeamUpsertWithoutBallotsInput
}

input TeamUpdateOneWithoutMembersInput {
  connect: TeamWhereUniqueInput
  connectOrCreate: TeamCreateOrConnectWithoutmembersInput
  create: TeamCreateWithoutMembersInput
  delete: Boolean
  disconnect: Boolean
  update: TeamUpdateWithoutMembersInput
  upsert: TeamUpsertWithoutMembersInput
}

input TeamUpdateOneWithoutUserInput {
  connect: TeamWhereUniqueInput
  connectOrCreate: TeamCreateOrConnectWithoutUserInput
  create: TeamCreateWithoutUserInput
  delete: Boolean
  disconnect: Boolean
  update: TeamUpdateWithoutUserInput
  upsert: TeamUpsertWithoutUserInput
}

input TeamUpdateOneWithoutVotedInput {
  connect: TeamWhereUniqueInput
  connectOrCreate: TeamCreateOrConnectWithoutVotedInput
  create: TeamCreateWithoutVotedInput
  delete: Boolean
  disconnect: Boolean
  update: TeamUpdateWithoutVotedInput
  upsert: TeamUpsertWithoutVotedInput
}

input TeamUpdateOneWithoutVoteInput {
  connect: TeamWhereUniqueInput
  connectOrCreate: TeamCreateOrConnectWithoutVoteInput
  create: TeamCreateWithoutVoteInput
  delete: Boolean
  disconnect: Boolean
  update: TeamUpdateWithoutVoteInput
  upsert: TeamUpsertWithoutVoteInput
}

input TeamUpdateWithoutActivityInput {
  attachment: AttachmentUpdateManyWithoutTeamInput
  BallotRuns: BallotRunUpdateManyWithoutTeamInput
  ballots: BallotUpdateManyWithoutTeamInput
  cards: StringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  discussion: DiscussionUpdateManyWithoutTeamInput
  domain: DomainUpdateOneWithoutTeamInput
  id: StringFieldUpdateOperationsInput
  invite: NullableStringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutTeamInput
  name: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneRequiredWithoutTeamsInput
  teacher: UserUpdateOneRequiredWithoutTeachesInput
  User: UserUpdateManyWithoutTeamInput
  Vote: VoteUpdateManyWithoutTeamInput
  Voted: VotedUpdateManyWithoutTeamInput
  work: WorkUpdateManyWithoutTeamInput
  year: NullableIntFieldUpdateOperationsInput
}

input TeamUpdateWithoutAttachmentInput {
  activity: ActivityUpdateManyWithoutTeamInput
  BallotRuns: BallotRunUpdateManyWithoutTeamInput
  ballots: BallotUpdateManyWithoutTeamInput
  cards: StringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  discussion: DiscussionUpdateManyWithoutTeamInput
  domain: DomainUpdateOneWithoutTeamInput
  id: StringFieldUpdateOperationsInput
  invite: NullableStringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutTeamInput
  name: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneRequiredWithoutTeamsInput
  teacher: UserUpdateOneRequiredWithoutTeachesInput
  User: UserUpdateManyWithoutTeamInput
  Vote: VoteUpdateManyWithoutTeamInput
  Voted: VotedUpdateManyWithoutTeamInput
  work: WorkUpdateManyWithoutTeamInput
  year: NullableIntFieldUpdateOperationsInput
}

input TeamUpdateWithoutBallotRunsInput {
  activity: ActivityUpdateManyWithoutTeamInput
  attachment: AttachmentUpdateManyWithoutTeamInput
  ballots: BallotUpdateManyWithoutTeamInput
  cards: StringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  discussion: DiscussionUpdateManyWithoutTeamInput
  domain: DomainUpdateOneWithoutTeamInput
  id: StringFieldUpdateOperationsInput
  invite: NullableStringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutTeamInput
  name: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneRequiredWithoutTeamsInput
  teacher: UserUpdateOneRequiredWithoutTeachesInput
  User: UserUpdateManyWithoutTeamInput
  Vote: VoteUpdateManyWithoutTeamInput
  Voted: VotedUpdateManyWithoutTeamInput
  work: WorkUpdateManyWithoutTeamInput
  year: NullableIntFieldUpdateOperationsInput
}

input TeamUpdateWithoutBallotsInput {
  activity: ActivityUpdateManyWithoutTeamInput
  attachment: AttachmentUpdateManyWithoutTeamInput
  BallotRuns: BallotRunUpdateManyWithoutTeamInput
  cards: StringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  discussion: DiscussionUpdateManyWithoutTeamInput
  domain: DomainUpdateOneWithoutTeamInput
  id: StringFieldUpdateOperationsInput
  invite: NullableStringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutTeamInput
  name: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneRequiredWithoutTeamsInput
  teacher: UserUpdateOneRequiredWithoutTeachesInput
  User: UserUpdateManyWithoutTeamInput
  Vote: VoteUpdateManyWithoutTeamInput
  Voted: VotedUpdateManyWithoutTeamInput
  work: WorkUpdateManyWithoutTeamInput
  year: NullableIntFieldUpdateOperationsInput
}

input TeamUpdateWithoutDiscussionInput {
  activity: ActivityUpdateManyWithoutTeamInput
  attachment: AttachmentUpdateManyWithoutTeamInput
  BallotRuns: BallotRunUpdateManyWithoutTeamInput
  ballots: BallotUpdateManyWithoutTeamInput
  cards: StringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  domain: DomainUpdateOneWithoutTeamInput
  id: StringFieldUpdateOperationsInput
  invite: NullableStringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutTeamInput
  name: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneRequiredWithoutTeamsInput
  teacher: UserUpdateOneRequiredWithoutTeachesInput
  User: UserUpdateManyWithoutTeamInput
  Vote: VoteUpdateManyWithoutTeamInput
  Voted: VotedUpdateManyWithoutTeamInput
  work: WorkUpdateManyWithoutTeamInput
  year: NullableIntFieldUpdateOperationsInput
}

input TeamUpdateWithoutDomainInput {
  activity: ActivityUpdateManyWithoutTeamInput
  attachment: AttachmentUpdateManyWithoutTeamInput
  BallotRuns: BallotRunUpdateManyWithoutTeamInput
  ballots: BallotUpdateManyWithoutTeamInput
  cards: StringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  discussion: DiscussionUpdateManyWithoutTeamInput
  id: StringFieldUpdateOperationsInput
  invite: NullableStringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutTeamInput
  name: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneRequiredWithoutTeamsInput
  teacher: UserUpdateOneRequiredWithoutTeachesInput
  User: UserUpdateManyWithoutTeamInput
  Vote: VoteUpdateManyWithoutTeamInput
  Voted: VotedUpdateManyWithoutTeamInput
  work: WorkUpdateManyWithoutTeamInput
  year: NullableIntFieldUpdateOperationsInput
}

input TeamUpdateWithoutMembersInput {
  activity: ActivityUpdateManyWithoutTeamInput
  attachment: AttachmentUpdateManyWithoutTeamInput
  BallotRuns: BallotRunUpdateManyWithoutTeamInput
  ballots: BallotUpdateManyWithoutTeamInput
  cards: StringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  discussion: DiscussionUpdateManyWithoutTeamInput
  domain: DomainUpdateOneWithoutTeamInput
  id: StringFieldUpdateOperationsInput
  invite: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneRequiredWithoutTeamsInput
  teacher: UserUpdateOneRequiredWithoutTeachesInput
  User: UserUpdateManyWithoutTeamInput
  Vote: VoteUpdateManyWithoutTeamInput
  Voted: VotedUpdateManyWithoutTeamInput
  work: WorkUpdateManyWithoutTeamInput
  year: NullableIntFieldUpdateOperationsInput
}

input TeamUpdateWithoutSchoolInput {
  activity: ActivityUpdateManyWithoutTeamInput
  attachment: AttachmentUpdateManyWithoutTeamInput
  BallotRuns: BallotRunUpdateManyWithoutTeamInput
  ballots: BallotUpdateManyWithoutTeamInput
  cards: StringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  discussion: DiscussionUpdateManyWithoutTeamInput
  domain: DomainUpdateOneWithoutTeamInput
  id: StringFieldUpdateOperationsInput
  invite: NullableStringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutTeamInput
  name: StringFieldUpdateOperationsInput
  teacher: UserUpdateOneRequiredWithoutTeachesInput
  User: UserUpdateManyWithoutTeamInput
  Vote: VoteUpdateManyWithoutTeamInput
  Voted: VotedUpdateManyWithoutTeamInput
  work: WorkUpdateManyWithoutTeamInput
  year: NullableIntFieldUpdateOperationsInput
}

input TeamUpdateWithoutTeacherInput {
  activity: ActivityUpdateManyWithoutTeamInput
  attachment: AttachmentUpdateManyWithoutTeamInput
  BallotRuns: BallotRunUpdateManyWithoutTeamInput
  ballots: BallotUpdateManyWithoutTeamInput
  cards: StringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  discussion: DiscussionUpdateManyWithoutTeamInput
  domain: DomainUpdateOneWithoutTeamInput
  id: StringFieldUpdateOperationsInput
  invite: NullableStringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutTeamInput
  name: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneRequiredWithoutTeamsInput
  User: UserUpdateManyWithoutTeamInput
  Vote: VoteUpdateManyWithoutTeamInput
  Voted: VotedUpdateManyWithoutTeamInput
  work: WorkUpdateManyWithoutTeamInput
  year: NullableIntFieldUpdateOperationsInput
}

input TeamUpdateWithoutUserInput {
  activity: ActivityUpdateManyWithoutTeamInput
  attachment: AttachmentUpdateManyWithoutTeamInput
  BallotRuns: BallotRunUpdateManyWithoutTeamInput
  ballots: BallotUpdateManyWithoutTeamInput
  cards: StringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  discussion: DiscussionUpdateManyWithoutTeamInput
  domain: DomainUpdateOneWithoutTeamInput
  id: StringFieldUpdateOperationsInput
  invite: NullableStringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutTeamInput
  name: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneRequiredWithoutTeamsInput
  teacher: UserUpdateOneRequiredWithoutTeachesInput
  Vote: VoteUpdateManyWithoutTeamInput
  Voted: VotedUpdateManyWithoutTeamInput
  work: WorkUpdateManyWithoutTeamInput
  year: NullableIntFieldUpdateOperationsInput
}

input TeamUpdateWithoutVotedInput {
  activity: ActivityUpdateManyWithoutTeamInput
  attachment: AttachmentUpdateManyWithoutTeamInput
  BallotRuns: BallotRunUpdateManyWithoutTeamInput
  ballots: BallotUpdateManyWithoutTeamInput
  cards: StringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  discussion: DiscussionUpdateManyWithoutTeamInput
  domain: DomainUpdateOneWithoutTeamInput
  id: StringFieldUpdateOperationsInput
  invite: NullableStringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutTeamInput
  name: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneRequiredWithoutTeamsInput
  teacher: UserUpdateOneRequiredWithoutTeachesInput
  User: UserUpdateManyWithoutTeamInput
  Vote: VoteUpdateManyWithoutTeamInput
  work: WorkUpdateManyWithoutTeamInput
  year: NullableIntFieldUpdateOperationsInput
}

input TeamUpdateWithoutVoteInput {
  activity: ActivityUpdateManyWithoutTeamInput
  attachment: AttachmentUpdateManyWithoutTeamInput
  BallotRuns: BallotRunUpdateManyWithoutTeamInput
  ballots: BallotUpdateManyWithoutTeamInput
  cards: StringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  discussion: DiscussionUpdateManyWithoutTeamInput
  domain: DomainUpdateOneWithoutTeamInput
  id: StringFieldUpdateOperationsInput
  invite: NullableStringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutTeamInput
  name: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneRequiredWithoutTeamsInput
  teacher: UserUpdateOneRequiredWithoutTeachesInput
  User: UserUpdateManyWithoutTeamInput
  Voted: VotedUpdateManyWithoutTeamInput
  work: WorkUpdateManyWithoutTeamInput
  year: NullableIntFieldUpdateOperationsInput
}

input TeamUpdateWithoutWorkInput {
  activity: ActivityUpdateManyWithoutTeamInput
  attachment: AttachmentUpdateManyWithoutTeamInput
  BallotRuns: BallotRunUpdateManyWithoutTeamInput
  ballots: BallotUpdateManyWithoutTeamInput
  cards: StringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  discussion: DiscussionUpdateManyWithoutTeamInput
  domain: DomainUpdateOneWithoutTeamInput
  id: StringFieldUpdateOperationsInput
  invite: NullableStringFieldUpdateOperationsInput
  members: UserUpdateManyWithoutTeamInput
  name: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneRequiredWithoutTeamsInput
  teacher: UserUpdateOneRequiredWithoutTeachesInput
  User: UserUpdateManyWithoutTeamInput
  Vote: VoteUpdateManyWithoutTeamInput
  Voted: VotedUpdateManyWithoutTeamInput
  year: NullableIntFieldUpdateOperationsInput
}

input TeamUpdateWithWhereUniqueWithoutDomainInput {
  data: TeamUpdateWithoutDomainInput!
  where: TeamWhereUniqueInput!
}

input TeamUpdateWithWhereUniqueWithoutSchoolInput {
  data: TeamUpdateWithoutSchoolInput!
  where: TeamWhereUniqueInput!
}

input TeamUpdateWithWhereUniqueWithoutTeacherInput {
  data: TeamUpdateWithoutTeacherInput!
  where: TeamWhereUniqueInput!
}

input TeamUpsertWithoutActivityInput {
  create: TeamCreateWithoutActivityInput!
  update: TeamUpdateWithoutActivityInput!
}

input TeamUpsertWithoutAttachmentInput {
  create: TeamCreateWithoutAttachmentInput!
  update: TeamUpdateWithoutAttachmentInput!
}

input TeamUpsertWithoutBallotRunsInput {
  create: TeamCreateWithoutBallotRunsInput!
  update: TeamUpdateWithoutBallotRunsInput!
}

input TeamUpsertWithoutBallotsInput {
  create: TeamCreateWithoutBallotsInput!
  update: TeamUpdateWithoutBallotsInput!
}

input TeamUpsertWithoutDiscussionInput {
  create: TeamCreateWithoutDiscussionInput!
  update: TeamUpdateWithoutDiscussionInput!
}

input TeamUpsertWithoutMembersInput {
  create: TeamCreateWithoutMembersInput!
  update: TeamUpdateWithoutMembersInput!
}

input TeamUpsertWithoutUserInput {
  create: TeamCreateWithoutUserInput!
  update: TeamUpdateWithoutUserInput!
}

input TeamUpsertWithoutVotedInput {
  create: TeamCreateWithoutVotedInput!
  update: TeamUpdateWithoutVotedInput!
}

input TeamUpsertWithoutVoteInput {
  create: TeamCreateWithoutVoteInput!
  update: TeamUpdateWithoutVoteInput!
}

input TeamUpsertWithoutWorkInput {
  create: TeamCreateWithoutWorkInput!
  update: TeamUpdateWithoutWorkInput!
}

input TeamUpsertWithWhereUniqueWithoutDomainInput {
  create: TeamCreateWithoutDomainInput!
  update: TeamUpdateWithoutDomainInput!
  where: TeamWhereUniqueInput!
}

input TeamUpsertWithWhereUniqueWithoutSchoolInput {
  create: TeamCreateWithoutSchoolInput!
  update: TeamUpdateWithoutSchoolInput!
  where: TeamWhereUniqueInput!
}

input TeamUpsertWithWhereUniqueWithoutTeacherInput {
  create: TeamCreateWithoutTeacherInput!
  update: TeamUpdateWithoutTeacherInput!
  where: TeamWhereUniqueInput!
}

input TeamWhereInput {
  activity: ActivityListRelationFilter
  AND: [TeamWhereInput!]
  attachment: AttachmentListRelationFilter
  BallotRuns: BallotRunListRelationFilter
  ballots: BallotListRelationFilter
  cards: StringFilter
  code: StringNullableFilter
  discussion: DiscussionListRelationFilter
  domain: DomainWhereInput
  domainId: StringNullableFilter
  id: StringFilter
  invite: StringNullableFilter
  members: UserListRelationFilter
  name: StringFilter
  NOT: [TeamWhereInput!]
  OR: [TeamWhereInput!]
  school: SchoolWhereInput
  schoolId: StringFilter
  teacher: UserWhereInput
  teacherId: StringFilter
  User: UserListRelationFilter
  Vote: VoteListRelationFilter
  Voted: VotedListRelationFilter
  work: WorkListRelationFilter
  year: IntNullableFilter
}

input TeamWhereUniqueInput {
  code: String
  id: String
  invite: String
}

type User {
  attachments(
    after: AttachmentWhereUniqueInput
    before: AttachmentWhereUniqueInput
    first: Int
    last: Int
  ): [Attachment!]!
  ballots(
    after: BallotWhereUniqueInput
    before: BallotWhereUniqueInput
    first: Int
    last: Int
  ): [Ballot!]!
  createdAt: DateTime!
  discussions(
    after: DiscussionWhereUniqueInput
    before: DiscussionWhereUniqueInput
    first: Int
    last: Int
  ): [Discussion!]!
  email: String
  emailVerified: DateTime
  gender: Gender
  id: String!
  image: String
  lastname: String
  name: String
  reactions(
    after: ReactionWhereUniqueInput
    before: ReactionWhereUniqueInput
    first: Int
    last: Int
  ): [Reaction!]!
  role: Role!
  school: School
  shortname: String
  teaches(
    after: TeamWhereUniqueInput
    before: TeamWhereUniqueInput
    first: Int
    last: Int
  ): [Team!]!
  team: Team
  year: Int
}

input UserCreateInput {
  activity: ActivityCreateManyWithoutUserInput
  attachments: AttachmentCreateManyWithoutUserInput
  ballots: BallotCreateManyWithoutCreatorInput
  canton: String
  createdAt: DateTime
  discussions: DiscussionCreateManyWithoutUserInput
  email: String
  emailVerified: DateTime
  gender: Gender
  id: String
  image: String
  lastname: String
  name: String
  password: String
  reactions: ReactionCreateManyWithoutUserInput
  role: Role
  school: SchoolCreateOneWithoutMembersInput
  teaches: TeamCreateManyWithoutTeacherInput
  team: TeamCreateOneWithoutMembersInput
  Team: TeamCreateOneWithoutUserInput
  updatedAt: DateTime
  verified: Boolean
  voted: VotedCreateManyWithoutUserInput
  work: WorkCreateManyWithoutUsersInput
  year: Int
}

input UserCreateManyWithoutSchoolInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutschoolInput!]
  create: [UserCreateWithoutSchoolInput!]
}

input UserCreateManyWithoutTeamInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutteamInput!]
  create: [UserCreateWithoutTeamInput!]
}

input UserCreateManyWithoutWorkInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutworkInput!]
  create: [UserCreateWithoutWorkInput!]
}

input UserCreateOneWithoutActivityInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutactivityInput
  create: UserCreateWithoutActivityInput
}

input UserCreateOneWithoutAttachmentsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutattachmentsInput
  create: UserCreateWithoutAttachmentsInput
}

input UserCreateOneWithoutBallotsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutballotsInput
  create: UserCreateWithoutBallotsInput
}

input UserCreateOneWithoutDiscussionsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutdiscussionsInput
  create: UserCreateWithoutDiscussionsInput
}

input UserCreateOneWithoutReactionsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutreactionsInput
  create: UserCreateWithoutReactionsInput
}

input UserCreateOneWithoutTeachesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutteachesInput
  create: UserCreateWithoutTeachesInput
}

input UserCreateOneWithoutVotedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutvotedInput
  create: UserCreateWithoutVotedInput
}

input UserCreateOrConnectWithoutactivityInput {
  create: UserCreateWithoutActivityInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutattachmentsInput {
  create: UserCreateWithoutAttachmentsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutballotsInput {
  create: UserCreateWithoutBallotsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutdiscussionsInput {
  create: UserCreateWithoutDiscussionsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutreactionsInput {
  create: UserCreateWithoutReactionsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutschoolInput {
  create: UserCreateWithoutSchoolInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutteachesInput {
  create: UserCreateWithoutTeachesInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutteamInput {
  create: UserCreateWithoutTeamInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutvotedInput {
  create: UserCreateWithoutVotedInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutworkInput {
  create: UserCreateWithoutWorkInput!
  where: UserWhereUniqueInput!
}

input UserCreateWithoutActivityInput {
  attachments: AttachmentCreateManyWithoutUserInput
  ballots: BallotCreateManyWithoutCreatorInput
  canton: String
  createdAt: DateTime
  discussions: DiscussionCreateManyWithoutUserInput
  email: String
  emailVerified: DateTime
  gender: Gender
  id: String
  image: String
  lastname: String
  name: String
  password: String
  reactions: ReactionCreateManyWithoutUserInput
  role: Role
  school: SchoolCreateOneWithoutMembersInput
  teaches: TeamCreateManyWithoutTeacherInput
  team: TeamCreateOneWithoutMembersInput
  Team: TeamCreateOneWithoutUserInput
  updatedAt: DateTime
  verified: Boolean
  voted: VotedCreateManyWithoutUserInput
  work: WorkCreateManyWithoutUsersInput
  year: Int
}

input UserCreateWithoutAttachmentsInput {
  activity: ActivityCreateManyWithoutUserInput
  ballots: BallotCreateManyWithoutCreatorInput
  canton: String
  createdAt: DateTime
  discussions: DiscussionCreateManyWithoutUserInput
  email: String
  emailVerified: DateTime
  gender: Gender
  id: String
  image: String
  lastname: String
  name: String
  password: String
  reactions: ReactionCreateManyWithoutUserInput
  role: Role
  school: SchoolCreateOneWithoutMembersInput
  teaches: TeamCreateManyWithoutTeacherInput
  team: TeamCreateOneWithoutMembersInput
  Team: TeamCreateOneWithoutUserInput
  updatedAt: DateTime
  verified: Boolean
  voted: VotedCreateManyWithoutUserInput
  work: WorkCreateManyWithoutUsersInput
  year: Int
}

input UserCreateWithoutBallotsInput {
  activity: ActivityCreateManyWithoutUserInput
  attachments: AttachmentCreateManyWithoutUserInput
  canton: String
  createdAt: DateTime
  discussions: DiscussionCreateManyWithoutUserInput
  email: String
  emailVerified: DateTime
  gender: Gender
  id: String
  image: String
  lastname: String
  name: String
  password: String
  reactions: ReactionCreateManyWithoutUserInput
  role: Role
  school: SchoolCreateOneWithoutMembersInput
  teaches: TeamCreateManyWithoutTeacherInput
  team: TeamCreateOneWithoutMembersInput
  Team: TeamCreateOneWithoutUserInput
  updatedAt: DateTime
  verified: Boolean
  voted: VotedCreateManyWithoutUserInput
  work: WorkCreateManyWithoutUsersInput
  year: Int
}

input UserCreateWithoutDiscussionsInput {
  activity: ActivityCreateManyWithoutUserInput
  attachments: AttachmentCreateManyWithoutUserInput
  ballots: BallotCreateManyWithoutCreatorInput
  canton: String
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  gender: Gender
  id: String
  image: String
  lastname: String
  name: String
  password: String
  reactions: ReactionCreateManyWithoutUserInput
  role: Role
  school: SchoolCreateOneWithoutMembersInput
  teaches: TeamCreateManyWithoutTeacherInput
  team: TeamCreateOneWithoutMembersInput
  Team: TeamCreateOneWithoutUserInput
  updatedAt: DateTime
  verified: Boolean
  voted: VotedCreateManyWithoutUserInput
  work: WorkCreateManyWithoutUsersInput
  year: Int
}

input UserCreateWithoutReactionsInput {
  activity: ActivityCreateManyWithoutUserInput
  attachments: AttachmentCreateManyWithoutUserInput
  ballots: BallotCreateManyWithoutCreatorInput
  canton: String
  createdAt: DateTime
  discussions: DiscussionCreateManyWithoutUserInput
  email: String
  emailVerified: DateTime
  gender: Gender
  id: String
  image: String
  lastname: String
  name: String
  password: String
  role: Role
  school: SchoolCreateOneWithoutMembersInput
  teaches: TeamCreateManyWithoutTeacherInput
  team: TeamCreateOneWithoutMembersInput
  Team: TeamCreateOneWithoutUserInput
  updatedAt: DateTime
  verified: Boolean
  voted: VotedCreateManyWithoutUserInput
  work: WorkCreateManyWithoutUsersInput
  year: Int
}

input UserCreateWithoutSchoolInput {
  activity: ActivityCreateManyWithoutUserInput
  attachments: AttachmentCreateManyWithoutUserInput
  ballots: BallotCreateManyWithoutCreatorInput
  canton: String
  createdAt: DateTime
  discussions: DiscussionCreateManyWithoutUserInput
  email: String
  emailVerified: DateTime
  gender: Gender
  id: String
  image: String
  lastname: String
  name: String
  password: String
  reactions: ReactionCreateManyWithoutUserInput
  role: Role
  teaches: TeamCreateManyWithoutTeacherInput
  team: TeamCreateOneWithoutMembersInput
  Team: TeamCreateOneWithoutUserInput
  updatedAt: DateTime
  verified: Boolean
  voted: VotedCreateManyWithoutUserInput
  work: WorkCreateManyWithoutUsersInput
  year: Int
}

input UserCreateWithoutTeachesInput {
  activity: ActivityCreateManyWithoutUserInput
  attachments: AttachmentCreateManyWithoutUserInput
  ballots: BallotCreateManyWithoutCreatorInput
  canton: String
  createdAt: DateTime
  discussions: DiscussionCreateManyWithoutUserInput
  email: String
  emailVerified: DateTime
  gender: Gender
  id: String
  image: String
  lastname: String
  name: String
  password: String
  reactions: ReactionCreateManyWithoutUserInput
  role: Role
  school: SchoolCreateOneWithoutMembersInput
  team: TeamCreateOneWithoutMembersInput
  Team: TeamCreateOneWithoutUserInput
  updatedAt: DateTime
  verified: Boolean
  voted: VotedCreateManyWithoutUserInput
  work: WorkCreateManyWithoutUsersInput
  year: Int
}

input UserCreateWithoutTeamInput {
  activity: ActivityCreateManyWithoutUserInput
  attachments: AttachmentCreateManyWithoutUserInput
  ballots: BallotCreateManyWithoutCreatorInput
  canton: String
  createdAt: DateTime
  discussions: DiscussionCreateManyWithoutUserInput
  email: String
  emailVerified: DateTime
  gender: Gender
  id: String
  image: String
  lastname: String
  name: String
  password: String
  reactions: ReactionCreateManyWithoutUserInput
  role: Role
  school: SchoolCreateOneWithoutMembersInput
  teaches: TeamCreateManyWithoutTeacherInput
  Team: TeamCreateOneWithoutUserInput
  updatedAt: DateTime
  verified: Boolean
  voted: VotedCreateManyWithoutUserInput
  work: WorkCreateManyWithoutUsersInput
  year: Int
}

input UserCreateWithoutVotedInput {
  activity: ActivityCreateManyWithoutUserInput
  attachments: AttachmentCreateManyWithoutUserInput
  ballots: BallotCreateManyWithoutCreatorInput
  canton: String
  createdAt: DateTime
  discussions: DiscussionCreateManyWithoutUserInput
  email: String
  emailVerified: DateTime
  gender: Gender
  id: String
  image: String
  lastname: String
  name: String
  password: String
  reactions: ReactionCreateManyWithoutUserInput
  role: Role
  school: SchoolCreateOneWithoutMembersInput
  teaches: TeamCreateManyWithoutTeacherInput
  team: TeamCreateOneWithoutMembersInput
  Team: TeamCreateOneWithoutUserInput
  updatedAt: DateTime
  verified: Boolean
  work: WorkCreateManyWithoutUsersInput
  year: Int
}

input UserCreateWithoutWorkInput {
  activity: ActivityCreateManyWithoutUserInput
  attachments: AttachmentCreateManyWithoutUserInput
  ballots: BallotCreateManyWithoutCreatorInput
  canton: String
  createdAt: DateTime
  discussions: DiscussionCreateManyWithoutUserInput
  email: String
  emailVerified: DateTime
  gender: Gender
  id: String
  image: String
  lastname: String
  name: String
  password: String
  reactions: ReactionCreateManyWithoutUserInput
  role: Role
  school: SchoolCreateOneWithoutMembersInput
  teaches: TeamCreateManyWithoutTeacherInput
  team: TeamCreateOneWithoutMembersInput
  Team: TeamCreateOneWithoutUserInput
  updatedAt: DateTime
  verified: Boolean
  voted: VotedCreateManyWithoutUserInput
  year: Int
}

input UserListRelationFilter {
  every: UserWhereInput
  none: UserWhereInput
  some: UserWhereInput
}

input UserOrderByInput {
  canton: SortOrder
  createdAt: SortOrder
  email: SortOrder
  emailVerified: SortOrder
  gender: SortOrder
  id: SortOrder
  image: SortOrder
  lastname: SortOrder
  name: SortOrder
  password: SortOrder
  role: SortOrder
  schoolId: SortOrder
  teamId: SortOrder
  updatedAt: SortOrder
  verified: SortOrder
  year: SortOrder
}

input UserScalarWhereInput {
  AND: [UserScalarWhereInput!]
  canton: StringNullableFilter
  createdAt: DateTimeFilter
  email: StringNullableFilter
  emailVerified: DateTimeNullableFilter
  gender: EnumGenderNullableFilter
  id: StringFilter
  image: StringNullableFilter
  lastname: StringNullableFilter
  name: StringNullableFilter
  NOT: [UserScalarWhereInput!]
  OR: [UserScalarWhereInput!]
  password: StringNullableFilter
  role: EnumRoleFilter
  schoolId: StringNullableFilter
  teamId: StringNullableFilter
  updatedAt: DateTimeFilter
  verified: BoolNullableFilter
  year: IntNullableFilter
}

input UserUpdateInput {
  activity: ActivityUpdateManyWithoutUserInput
  attachments: AttachmentUpdateManyWithoutUserInput
  ballots: BallotUpdateManyWithoutCreatorInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discussions: DiscussionUpdateManyWithoutUserInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  lastname: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  reactions: ReactionUpdateManyWithoutUserInput
  role: EnumRoleFieldUpdateOperationsInput
  school: SchoolUpdateOneWithoutMembersInput
  teaches: TeamUpdateManyWithoutTeacherInput
  team: TeamUpdateOneWithoutMembersInput
  Team: TeamUpdateOneWithoutUserInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  verified: NullableBoolFieldUpdateOperationsInput
  voted: VotedUpdateManyWithoutUserInput
  work: WorkUpdateManyWithoutUsersInput
  year: NullableIntFieldUpdateOperationsInput
}

input UserUpdateManyMutationInput {
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  lastname: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  role: EnumRoleFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  verified: NullableBoolFieldUpdateOperationsInput
  year: NullableIntFieldUpdateOperationsInput
}

input UserUpdateManyWithoutSchoolInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutschoolInput!]
  create: [UserCreateWithoutSchoolInput!]
  delete: [UserWhereUniqueInput!]
  deleteMany: [UserScalarWhereInput!]
  disconnect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutSchoolInput!]
  updateMany: [UserUpdateManyWithWhereWithoutSchoolInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutSchoolInput!]
}

input UserUpdateManyWithoutTeamInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutteamInput!]
  create: [UserCreateWithoutTeamInput!]
  delete: [UserWhereUniqueInput!]
  deleteMany: [UserScalarWhereInput!]
  disconnect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutTeamInput!]
  updateMany: [UserUpdateManyWithWhereWithoutTeamInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutTeamInput!]
}

input UserUpdateManyWithoutWorkInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutworkInput!]
  create: [UserCreateWithoutWorkInput!]
  delete: [UserWhereUniqueInput!]
  deleteMany: [UserScalarWhereInput!]
  disconnect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutWorkInput!]
  updateMany: [UserUpdateManyWithWhereWithoutWorkInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutWorkInput!]
}

input UserUpdateManyWithWhereWithoutSchoolInput {
  data: UserUpdateManyMutationInput!
  where: UserScalarWhereInput!
}

input UserUpdateManyWithWhereWithoutTeamInput {
  data: UserUpdateManyMutationInput!
  where: UserScalarWhereInput!
}

input UserUpdateManyWithWhereWithoutWorkInput {
  data: UserUpdateManyMutationInput!
  where: UserScalarWhereInput!
}

input UserUpdateOneRequiredWithoutActivityInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutactivityInput
  create: UserCreateWithoutActivityInput
  update: UserUpdateWithoutActivityInput
  upsert: UserUpsertWithoutActivityInput
}

input UserUpdateOneRequiredWithoutAttachmentsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutattachmentsInput
  create: UserCreateWithoutAttachmentsInput
  update: UserUpdateWithoutAttachmentsInput
  upsert: UserUpsertWithoutAttachmentsInput
}

input UserUpdateOneRequiredWithoutDiscussionsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutdiscussionsInput
  create: UserCreateWithoutDiscussionsInput
  update: UserUpdateWithoutDiscussionsInput
  upsert: UserUpsertWithoutDiscussionsInput
}

input UserUpdateOneRequiredWithoutReactionsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutreactionsInput
  create: UserCreateWithoutReactionsInput
  update: UserUpdateWithoutReactionsInput
  upsert: UserUpsertWithoutReactionsInput
}

input UserUpdateOneRequiredWithoutTeachesInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutteachesInput
  create: UserCreateWithoutTeachesInput
  update: UserUpdateWithoutTeachesInput
  upsert: UserUpsertWithoutTeachesInput
}

input UserUpdateOneRequiredWithoutVotedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutvotedInput
  create: UserCreateWithoutVotedInput
  update: UserUpdateWithoutVotedInput
  upsert: UserUpsertWithoutVotedInput
}

input UserUpdateOneWithoutBallotsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutballotsInput
  create: UserCreateWithoutBallotsInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutBallotsInput
  upsert: UserUpsertWithoutBallotsInput
}

input UserUpdateWithoutActivityInput {
  attachments: AttachmentUpdateManyWithoutUserInput
  ballots: BallotUpdateManyWithoutCreatorInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discussions: DiscussionUpdateManyWithoutUserInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  lastname: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  reactions: ReactionUpdateManyWithoutUserInput
  role: EnumRoleFieldUpdateOperationsInput
  school: SchoolUpdateOneWithoutMembersInput
  teaches: TeamUpdateManyWithoutTeacherInput
  team: TeamUpdateOneWithoutMembersInput
  Team: TeamUpdateOneWithoutUserInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  verified: NullableBoolFieldUpdateOperationsInput
  voted: VotedUpdateManyWithoutUserInput
  work: WorkUpdateManyWithoutUsersInput
  year: NullableIntFieldUpdateOperationsInput
}

input UserUpdateWithoutAttachmentsInput {
  activity: ActivityUpdateManyWithoutUserInput
  ballots: BallotUpdateManyWithoutCreatorInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discussions: DiscussionUpdateManyWithoutUserInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  lastname: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  reactions: ReactionUpdateManyWithoutUserInput
  role: EnumRoleFieldUpdateOperationsInput
  school: SchoolUpdateOneWithoutMembersInput
  teaches: TeamUpdateManyWithoutTeacherInput
  team: TeamUpdateOneWithoutMembersInput
  Team: TeamUpdateOneWithoutUserInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  verified: NullableBoolFieldUpdateOperationsInput
  voted: VotedUpdateManyWithoutUserInput
  work: WorkUpdateManyWithoutUsersInput
  year: NullableIntFieldUpdateOperationsInput
}

input UserUpdateWithoutBallotsInput {
  activity: ActivityUpdateManyWithoutUserInput
  attachments: AttachmentUpdateManyWithoutUserInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discussions: DiscussionUpdateManyWithoutUserInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  lastname: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  reactions: ReactionUpdateManyWithoutUserInput
  role: EnumRoleFieldUpdateOperationsInput
  school: SchoolUpdateOneWithoutMembersInput
  teaches: TeamUpdateManyWithoutTeacherInput
  team: TeamUpdateOneWithoutMembersInput
  Team: TeamUpdateOneWithoutUserInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  verified: NullableBoolFieldUpdateOperationsInput
  voted: VotedUpdateManyWithoutUserInput
  work: WorkUpdateManyWithoutUsersInput
  year: NullableIntFieldUpdateOperationsInput
}

input UserUpdateWithoutDiscussionsInput {
  activity: ActivityUpdateManyWithoutUserInput
  attachments: AttachmentUpdateManyWithoutUserInput
  ballots: BallotUpdateManyWithoutCreatorInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  lastname: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  reactions: ReactionUpdateManyWithoutUserInput
  role: EnumRoleFieldUpdateOperationsInput
  school: SchoolUpdateOneWithoutMembersInput
  teaches: TeamUpdateManyWithoutTeacherInput
  team: TeamUpdateOneWithoutMembersInput
  Team: TeamUpdateOneWithoutUserInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  verified: NullableBoolFieldUpdateOperationsInput
  voted: VotedUpdateManyWithoutUserInput
  work: WorkUpdateManyWithoutUsersInput
  year: NullableIntFieldUpdateOperationsInput
}

input UserUpdateWithoutReactionsInput {
  activity: ActivityUpdateManyWithoutUserInput
  attachments: AttachmentUpdateManyWithoutUserInput
  ballots: BallotUpdateManyWithoutCreatorInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discussions: DiscussionUpdateManyWithoutUserInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  lastname: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  role: EnumRoleFieldUpdateOperationsInput
  school: SchoolUpdateOneWithoutMembersInput
  teaches: TeamUpdateManyWithoutTeacherInput
  team: TeamUpdateOneWithoutMembersInput
  Team: TeamUpdateOneWithoutUserInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  verified: NullableBoolFieldUpdateOperationsInput
  voted: VotedUpdateManyWithoutUserInput
  work: WorkUpdateManyWithoutUsersInput
  year: NullableIntFieldUpdateOperationsInput
}

input UserUpdateWithoutSchoolInput {
  activity: ActivityUpdateManyWithoutUserInput
  attachments: AttachmentUpdateManyWithoutUserInput
  ballots: BallotUpdateManyWithoutCreatorInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discussions: DiscussionUpdateManyWithoutUserInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  lastname: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  reactions: ReactionUpdateManyWithoutUserInput
  role: EnumRoleFieldUpdateOperationsInput
  teaches: TeamUpdateManyWithoutTeacherInput
  team: TeamUpdateOneWithoutMembersInput
  Team: TeamUpdateOneWithoutUserInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  verified: NullableBoolFieldUpdateOperationsInput
  voted: VotedUpdateManyWithoutUserInput
  work: WorkUpdateManyWithoutUsersInput
  year: NullableIntFieldUpdateOperationsInput
}

input UserUpdateWithoutTeachesInput {
  activity: ActivityUpdateManyWithoutUserInput
  attachments: AttachmentUpdateManyWithoutUserInput
  ballots: BallotUpdateManyWithoutCreatorInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discussions: DiscussionUpdateManyWithoutUserInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  lastname: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  reactions: ReactionUpdateManyWithoutUserInput
  role: EnumRoleFieldUpdateOperationsInput
  school: SchoolUpdateOneWithoutMembersInput
  team: TeamUpdateOneWithoutMembersInput
  Team: TeamUpdateOneWithoutUserInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  verified: NullableBoolFieldUpdateOperationsInput
  voted: VotedUpdateManyWithoutUserInput
  work: WorkUpdateManyWithoutUsersInput
  year: NullableIntFieldUpdateOperationsInput
}

input UserUpdateWithoutTeamInput {
  activity: ActivityUpdateManyWithoutUserInput
  attachments: AttachmentUpdateManyWithoutUserInput
  ballots: BallotUpdateManyWithoutCreatorInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discussions: DiscussionUpdateManyWithoutUserInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  lastname: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  reactions: ReactionUpdateManyWithoutUserInput
  role: EnumRoleFieldUpdateOperationsInput
  school: SchoolUpdateOneWithoutMembersInput
  teaches: TeamUpdateManyWithoutTeacherInput
  Team: TeamUpdateOneWithoutUserInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  verified: NullableBoolFieldUpdateOperationsInput
  voted: VotedUpdateManyWithoutUserInput
  work: WorkUpdateManyWithoutUsersInput
  year: NullableIntFieldUpdateOperationsInput
}

input UserUpdateWithoutVotedInput {
  activity: ActivityUpdateManyWithoutUserInput
  attachments: AttachmentUpdateManyWithoutUserInput
  ballots: BallotUpdateManyWithoutCreatorInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discussions: DiscussionUpdateManyWithoutUserInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  lastname: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  reactions: ReactionUpdateManyWithoutUserInput
  role: EnumRoleFieldUpdateOperationsInput
  school: SchoolUpdateOneWithoutMembersInput
  teaches: TeamUpdateManyWithoutTeacherInput
  team: TeamUpdateOneWithoutMembersInput
  Team: TeamUpdateOneWithoutUserInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  verified: NullableBoolFieldUpdateOperationsInput
  work: WorkUpdateManyWithoutUsersInput
  year: NullableIntFieldUpdateOperationsInput
}

input UserUpdateWithoutWorkInput {
  activity: ActivityUpdateManyWithoutUserInput
  attachments: AttachmentUpdateManyWithoutUserInput
  ballots: BallotUpdateManyWithoutCreatorInput
  canton: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  discussions: DiscussionUpdateManyWithoutUserInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  lastname: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  password: NullableStringFieldUpdateOperationsInput
  reactions: ReactionUpdateManyWithoutUserInput
  role: EnumRoleFieldUpdateOperationsInput
  school: SchoolUpdateOneWithoutMembersInput
  teaches: TeamUpdateManyWithoutTeacherInput
  team: TeamUpdateOneWithoutMembersInput
  Team: TeamUpdateOneWithoutUserInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  verified: NullableBoolFieldUpdateOperationsInput
  voted: VotedUpdateManyWithoutUserInput
  year: NullableIntFieldUpdateOperationsInput
}

input UserUpdateWithWhereUniqueWithoutSchoolInput {
  data: UserUpdateWithoutSchoolInput!
  where: UserWhereUniqueInput!
}

input UserUpdateWithWhereUniqueWithoutTeamInput {
  data: UserUpdateWithoutTeamInput!
  where: UserWhereUniqueInput!
}

input UserUpdateWithWhereUniqueWithoutWorkInput {
  data: UserUpdateWithoutWorkInput!
  where: UserWhereUniqueInput!
}

input UserUpsertWithoutActivityInput {
  create: UserCreateWithoutActivityInput!
  update: UserUpdateWithoutActivityInput!
}

input UserUpsertWithoutAttachmentsInput {
  create: UserCreateWithoutAttachmentsInput!
  update: UserUpdateWithoutAttachmentsInput!
}

input UserUpsertWithoutBallotsInput {
  create: UserCreateWithoutBallotsInput!
  update: UserUpdateWithoutBallotsInput!
}

input UserUpsertWithoutDiscussionsInput {
  create: UserCreateWithoutDiscussionsInput!
  update: UserUpdateWithoutDiscussionsInput!
}

input UserUpsertWithoutReactionsInput {
  create: UserCreateWithoutReactionsInput!
  update: UserUpdateWithoutReactionsInput!
}

input UserUpsertWithoutTeachesInput {
  create: UserCreateWithoutTeachesInput!
  update: UserUpdateWithoutTeachesInput!
}

input UserUpsertWithoutVotedInput {
  create: UserCreateWithoutVotedInput!
  update: UserUpdateWithoutVotedInput!
}

input UserUpsertWithWhereUniqueWithoutSchoolInput {
  create: UserCreateWithoutSchoolInput!
  update: UserUpdateWithoutSchoolInput!
  where: UserWhereUniqueInput!
}

input UserUpsertWithWhereUniqueWithoutTeamInput {
  create: UserCreateWithoutTeamInput!
  update: UserUpdateWithoutTeamInput!
  where: UserWhereUniqueInput!
}

input UserUpsertWithWhereUniqueWithoutWorkInput {
  create: UserCreateWithoutWorkInput!
  update: UserUpdateWithoutWorkInput!
  where: UserWhereUniqueInput!
}

input UserWhereInput {
  activity: ActivityListRelationFilter
  AND: [UserWhereInput!]
  attachments: AttachmentListRelationFilter
  ballots: BallotListRelationFilter
  canton: StringNullableFilter
  createdAt: DateTimeFilter
  discussions: DiscussionListRelationFilter
  email: StringNullableFilter
  emailVerified: DateTimeNullableFilter
  gender: EnumGenderNullableFilter
  id: StringFilter
  image: StringNullableFilter
  lastname: StringNullableFilter
  name: StringNullableFilter
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  password: StringNullableFilter
  reactions: ReactionListRelationFilter
  role: EnumRoleFilter
  school: SchoolWhereInput
  schoolId: StringNullableFilter
  teaches: TeamListRelationFilter
  team: TeamWhereInput
  Team: TeamWhereInput
  teamId: StringNullableFilter
  updatedAt: DateTimeFilter
  verified: BoolNullableFilter
  voted: VotedListRelationFilter
  work: WorkListRelationFilter
  year: IntNullableFilter
}

input UserWhereUniqueInput {
  email: String
  id: String
}

enum Visibility {
  Private
  Public
  School
  Team
}

type Vote {
  ballot: Ballot!
  verify: String
}

input VoteCreateManyWithoutBallotInput {
  connect: [VoteWhereUniqueInput!]
  connectOrCreate: [VoteCreateOrConnectWithoutballotInput!]
  create: [VoteCreateWithoutBallotInput!]
}

input VoteCreateManyWithoutBallotRunInput {
  connect: [VoteWhereUniqueInput!]
  connectOrCreate: [VoteCreateOrConnectWithoutballotRunInput!]
  create: [VoteCreateWithoutBallotRunInput!]
}

input VoteCreateManyWithoutSchoolInput {
  connect: [VoteWhereUniqueInput!]
  connectOrCreate: [VoteCreateOrConnectWithoutschoolInput!]
  create: [VoteCreateWithoutSchoolInput!]
}

input VoteCreateManyWithoutTeamInput {
  connect: [VoteWhereUniqueInput!]
  connectOrCreate: [VoteCreateOrConnectWithoutteamInput!]
  create: [VoteCreateWithoutTeamInput!]
}

input VoteCreateOrConnectWithoutballotInput {
  create: VoteCreateWithoutBallotInput!
  where: VoteWhereUniqueInput!
}

input VoteCreateOrConnectWithoutballotRunInput {
  create: VoteCreateWithoutBallotRunInput!
  where: VoteWhereUniqueInput!
}

input VoteCreateOrConnectWithoutschoolInput {
  create: VoteCreateWithoutSchoolInput!
  where: VoteWhereUniqueInput!
}

input VoteCreateOrConnectWithoutteamInput {
  create: VoteCreateWithoutTeamInput!
  where: VoteWhereUniqueInput!
}

input VoteCreateWithoutBallotInput {
  ballotRun: BallotRunCreateOneWithoutVoteInput
  canton: String
  id: String
  school: SchoolCreateOneWithoutVoteInput
  schooltype: String
  team: TeamCreateOneWithoutVoteInput
  verify: String
  vote: Int!
  year: Int
}

input VoteCreateWithoutBallotRunInput {
  ballot: BallotCreateOneWithoutVotesInput!
  canton: String
  id: String
  school: SchoolCreateOneWithoutVoteInput
  schooltype: String
  team: TeamCreateOneWithoutVoteInput
  verify: String
  vote: Int!
  year: Int
}

input VoteCreateWithoutSchoolInput {
  ballot: BallotCreateOneWithoutVotesInput!
  ballotRun: BallotRunCreateOneWithoutVoteInput
  canton: String
  id: String
  schooltype: String
  team: TeamCreateOneWithoutVoteInput
  verify: String
  vote: Int!
  year: Int
}

input VoteCreateWithoutTeamInput {
  ballot: BallotCreateOneWithoutVotesInput!
  ballotRun: BallotRunCreateOneWithoutVoteInput
  canton: String
  id: String
  school: SchoolCreateOneWithoutVoteInput
  schooltype: String
  verify: String
  vote: Int!
  year: Int
}

input VotedCreateManyWithoutBallotInput {
  connect: [VotedWhereUniqueInput!]
  connectOrCreate: [VotedCreateOrConnectWithoutballotInput!]
  create: [VotedCreateWithoutBallotInput!]
}

input VotedCreateManyWithoutSchoolInput {
  connect: [VotedWhereUniqueInput!]
  connectOrCreate: [VotedCreateOrConnectWithoutschoolInput!]
  create: [VotedCreateWithoutSchoolInput!]
}

input VotedCreateManyWithoutTeamInput {
  connect: [VotedWhereUniqueInput!]
  connectOrCreate: [VotedCreateOrConnectWithoutteamInput!]
  create: [VotedCreateWithoutTeamInput!]
}

input VotedCreateManyWithoutUserInput {
  connect: [VotedWhereUniqueInput!]
  connectOrCreate: [VotedCreateOrConnectWithoutuserInput!]
  create: [VotedCreateWithoutUserInput!]
}

input VotedCreateOrConnectWithoutballotInput {
  create: VotedCreateWithoutBallotInput!
  where: VotedWhereUniqueInput!
}

input VotedCreateOrConnectWithoutschoolInput {
  create: VotedCreateWithoutSchoolInput!
  where: VotedWhereUniqueInput!
}

input VotedCreateOrConnectWithoutteamInput {
  create: VotedCreateWithoutTeamInput!
  where: VotedWhereUniqueInput!
}

input VotedCreateOrConnectWithoutuserInput {
  create: VotedCreateWithoutUserInput!
  where: VotedWhereUniqueInput!
}

input VotedCreateWithoutBallotInput {
  id: String
  school: SchoolCreateOneWithoutVotedInput
  signature: String
  team: TeamCreateOneWithoutVotedInput
  user: UserCreateOneWithoutVotedInput!
}

input VotedCreateWithoutSchoolInput {
  ballot: BallotCreateOneWithoutVotedInput!
  id: String
  signature: String
  team: TeamCreateOneWithoutVotedInput
  user: UserCreateOneWithoutVotedInput!
}

input VotedCreateWithoutTeamInput {
  ballot: BallotCreateOneWithoutVotedInput!
  id: String
  school: SchoolCreateOneWithoutVotedInput
  signature: String
  user: UserCreateOneWithoutVotedInput!
}

input VotedCreateWithoutUserInput {
  ballot: BallotCreateOneWithoutVotedInput!
  id: String
  school: SchoolCreateOneWithoutVotedInput
  signature: String
  team: TeamCreateOneWithoutVotedInput
}

input VotedListRelationFilter {
  every: VotedWhereInput
  none: VotedWhereInput
  some: VotedWhereInput
}

input VotedScalarWhereInput {
  AND: [VotedScalarWhereInput!]
  ballotId: StringFilter
  id: StringFilter
  NOT: [VotedScalarWhereInput!]
  OR: [VotedScalarWhereInput!]
  schoolId: StringNullableFilter
  signature: StringNullableFilter
  teamId: StringNullableFilter
  userId: StringFilter
}

input VotedUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  signature: NullableStringFieldUpdateOperationsInput
}

input VotedUpdateManyWithoutBallotInput {
  connect: [VotedWhereUniqueInput!]
  connectOrCreate: [VotedCreateOrConnectWithoutballotInput!]
  create: [VotedCreateWithoutBallotInput!]
  delete: [VotedWhereUniqueInput!]
  deleteMany: [VotedScalarWhereInput!]
  disconnect: [VotedWhereUniqueInput!]
  set: [VotedWhereUniqueInput!]
  update: [VotedUpdateWithWhereUniqueWithoutBallotInput!]
  updateMany: [VotedUpdateManyWithWhereWithoutBallotInput!]
  upsert: [VotedUpsertWithWhereUniqueWithoutBallotInput!]
}

input VotedUpdateManyWithoutSchoolInput {
  connect: [VotedWhereUniqueInput!]
  connectOrCreate: [VotedCreateOrConnectWithoutschoolInput!]
  create: [VotedCreateWithoutSchoolInput!]
  delete: [VotedWhereUniqueInput!]
  deleteMany: [VotedScalarWhereInput!]
  disconnect: [VotedWhereUniqueInput!]
  set: [VotedWhereUniqueInput!]
  update: [VotedUpdateWithWhereUniqueWithoutSchoolInput!]
  updateMany: [VotedUpdateManyWithWhereWithoutSchoolInput!]
  upsert: [VotedUpsertWithWhereUniqueWithoutSchoolInput!]
}

input VotedUpdateManyWithoutTeamInput {
  connect: [VotedWhereUniqueInput!]
  connectOrCreate: [VotedCreateOrConnectWithoutteamInput!]
  create: [VotedCreateWithoutTeamInput!]
  delete: [VotedWhereUniqueInput!]
  deleteMany: [VotedScalarWhereInput!]
  disconnect: [VotedWhereUniqueInput!]
  set: [VotedWhereUniqueInput!]
  update: [VotedUpdateWithWhereUniqueWithoutTeamInput!]
  updateMany: [VotedUpdateManyWithWhereWithoutTeamInput!]
  upsert: [VotedUpsertWithWhereUniqueWithoutTeamInput!]
}

input VotedUpdateManyWithoutUserInput {
  connect: [VotedWhereUniqueInput!]
  connectOrCreate: [VotedCreateOrConnectWithoutuserInput!]
  create: [VotedCreateWithoutUserInput!]
  delete: [VotedWhereUniqueInput!]
  deleteMany: [VotedScalarWhereInput!]
  disconnect: [VotedWhereUniqueInput!]
  set: [VotedWhereUniqueInput!]
  update: [VotedUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [VotedUpdateManyWithWhereWithoutUserInput!]
  upsert: [VotedUpsertWithWhereUniqueWithoutUserInput!]
}

input VotedUpdateManyWithWhereWithoutBallotInput {
  data: VotedUpdateManyMutationInput!
  where: VotedScalarWhereInput!
}

input VotedUpdateManyWithWhereWithoutSchoolInput {
  data: VotedUpdateManyMutationInput!
  where: VotedScalarWhereInput!
}

input VotedUpdateManyWithWhereWithoutTeamInput {
  data: VotedUpdateManyMutationInput!
  where: VotedScalarWhereInput!
}

input VotedUpdateManyWithWhereWithoutUserInput {
  data: VotedUpdateManyMutationInput!
  where: VotedScalarWhereInput!
}

input VotedUpdateWithoutBallotInput {
  id: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneWithoutVotedInput
  signature: NullableStringFieldUpdateOperationsInput
  team: TeamUpdateOneWithoutVotedInput
  user: UserUpdateOneRequiredWithoutVotedInput
}

input VotedUpdateWithoutSchoolInput {
  ballot: BallotUpdateOneRequiredWithoutVotedInput
  id: StringFieldUpdateOperationsInput
  signature: NullableStringFieldUpdateOperationsInput
  team: TeamUpdateOneWithoutVotedInput
  user: UserUpdateOneRequiredWithoutVotedInput
}

input VotedUpdateWithoutTeamInput {
  ballot: BallotUpdateOneRequiredWithoutVotedInput
  id: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneWithoutVotedInput
  signature: NullableStringFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutVotedInput
}

input VotedUpdateWithoutUserInput {
  ballot: BallotUpdateOneRequiredWithoutVotedInput
  id: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneWithoutVotedInput
  signature: NullableStringFieldUpdateOperationsInput
  team: TeamUpdateOneWithoutVotedInput
}

input VotedUpdateWithWhereUniqueWithoutBallotInput {
  data: VotedUpdateWithoutBallotInput!
  where: VotedWhereUniqueInput!
}

input VotedUpdateWithWhereUniqueWithoutSchoolInput {
  data: VotedUpdateWithoutSchoolInput!
  where: VotedWhereUniqueInput!
}

input VotedUpdateWithWhereUniqueWithoutTeamInput {
  data: VotedUpdateWithoutTeamInput!
  where: VotedWhereUniqueInput!
}

input VotedUpdateWithWhereUniqueWithoutUserInput {
  data: VotedUpdateWithoutUserInput!
  where: VotedWhereUniqueInput!
}

input VotedUpsertWithWhereUniqueWithoutBallotInput {
  create: VotedCreateWithoutBallotInput!
  update: VotedUpdateWithoutBallotInput!
  where: VotedWhereUniqueInput!
}

input VotedUpsertWithWhereUniqueWithoutSchoolInput {
  create: VotedCreateWithoutSchoolInput!
  update: VotedUpdateWithoutSchoolInput!
  where: VotedWhereUniqueInput!
}

input VotedUpsertWithWhereUniqueWithoutTeamInput {
  create: VotedCreateWithoutTeamInput!
  update: VotedUpdateWithoutTeamInput!
  where: VotedWhereUniqueInput!
}

input VotedUpsertWithWhereUniqueWithoutUserInput {
  create: VotedCreateWithoutUserInput!
  update: VotedUpdateWithoutUserInput!
  where: VotedWhereUniqueInput!
}

input VotedWhereInput {
  AND: [VotedWhereInput!]
  ballot: BallotWhereInput
  ballotId: StringFilter
  id: StringFilter
  NOT: [VotedWhereInput!]
  OR: [VotedWhereInput!]
  school: SchoolWhereInput
  schoolId: StringNullableFilter
  signature: StringNullableFilter
  team: TeamWhereInput
  teamId: StringNullableFilter
  user: UserWhereInput
  userId: StringFilter
}

input VotedWhereUniqueInput {
  id: String
}

input VoteListRelationFilter {
  every: VoteWhereInput
  none: VoteWhereInput
  some: VoteWhereInput
}

input VoteScalarWhereInput {
  AND: [VoteScalarWhereInput!]
  ballotId: StringFilter
  ballotRunId: StringNullableFilter
  canton: StringNullableFilter
  id: StringFilter
  NOT: [VoteScalarWhereInput!]
  OR: [VoteScalarWhereInput!]
  schoolId: StringNullableFilter
  schooltype: StringNullableFilter
  teamId: StringNullableFilter
  verify: StringNullableFilter
  vote: IntFilter
  year: IntNullableFilter
}

input VoteUpdateManyMutationInput {
  canton: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  schooltype: NullableStringFieldUpdateOperationsInput
  verify: NullableStringFieldUpdateOperationsInput
  vote: IntFieldUpdateOperationsInput
  year: NullableIntFieldUpdateOperationsInput
}

input VoteUpdateManyWithoutBallotInput {
  connect: [VoteWhereUniqueInput!]
  connectOrCreate: [VoteCreateOrConnectWithoutballotInput!]
  create: [VoteCreateWithoutBallotInput!]
  delete: [VoteWhereUniqueInput!]
  deleteMany: [VoteScalarWhereInput!]
  disconnect: [VoteWhereUniqueInput!]
  set: [VoteWhereUniqueInput!]
  update: [VoteUpdateWithWhereUniqueWithoutBallotInput!]
  updateMany: [VoteUpdateManyWithWhereWithoutBallotInput!]
  upsert: [VoteUpsertWithWhereUniqueWithoutBallotInput!]
}

input VoteUpdateManyWithoutBallotRunInput {
  connect: [VoteWhereUniqueInput!]
  connectOrCreate: [VoteCreateOrConnectWithoutballotRunInput!]
  create: [VoteCreateWithoutBallotRunInput!]
  delete: [VoteWhereUniqueInput!]
  deleteMany: [VoteScalarWhereInput!]
  disconnect: [VoteWhereUniqueInput!]
  set: [VoteWhereUniqueInput!]
  update: [VoteUpdateWithWhereUniqueWithoutBallotRunInput!]
  updateMany: [VoteUpdateManyWithWhereWithoutBallotRunInput!]
  upsert: [VoteUpsertWithWhereUniqueWithoutBallotRunInput!]
}

input VoteUpdateManyWithoutSchoolInput {
  connect: [VoteWhereUniqueInput!]
  connectOrCreate: [VoteCreateOrConnectWithoutschoolInput!]
  create: [VoteCreateWithoutSchoolInput!]
  delete: [VoteWhereUniqueInput!]
  deleteMany: [VoteScalarWhereInput!]
  disconnect: [VoteWhereUniqueInput!]
  set: [VoteWhereUniqueInput!]
  update: [VoteUpdateWithWhereUniqueWithoutSchoolInput!]
  updateMany: [VoteUpdateManyWithWhereWithoutSchoolInput!]
  upsert: [VoteUpsertWithWhereUniqueWithoutSchoolInput!]
}

input VoteUpdateManyWithoutTeamInput {
  connect: [VoteWhereUniqueInput!]
  connectOrCreate: [VoteCreateOrConnectWithoutteamInput!]
  create: [VoteCreateWithoutTeamInput!]
  delete: [VoteWhereUniqueInput!]
  deleteMany: [VoteScalarWhereInput!]
  disconnect: [VoteWhereUniqueInput!]
  set: [VoteWhereUniqueInput!]
  update: [VoteUpdateWithWhereUniqueWithoutTeamInput!]
  updateMany: [VoteUpdateManyWithWhereWithoutTeamInput!]
  upsert: [VoteUpsertWithWhereUniqueWithoutTeamInput!]
}

input VoteUpdateManyWithWhereWithoutBallotInput {
  data: VoteUpdateManyMutationInput!
  where: VoteScalarWhereInput!
}

input VoteUpdateManyWithWhereWithoutBallotRunInput {
  data: VoteUpdateManyMutationInput!
  where: VoteScalarWhereInput!
}

input VoteUpdateManyWithWhereWithoutSchoolInput {
  data: VoteUpdateManyMutationInput!
  where: VoteScalarWhereInput!
}

input VoteUpdateManyWithWhereWithoutTeamInput {
  data: VoteUpdateManyMutationInput!
  where: VoteScalarWhereInput!
}

input VoteUpdateWithoutBallotInput {
  ballotRun: BallotRunUpdateOneWithoutVoteInput
  canton: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneWithoutVoteInput
  schooltype: NullableStringFieldUpdateOperationsInput
  team: TeamUpdateOneWithoutVoteInput
  verify: NullableStringFieldUpdateOperationsInput
  vote: IntFieldUpdateOperationsInput
  year: NullableIntFieldUpdateOperationsInput
}

input VoteUpdateWithoutBallotRunInput {
  ballot: BallotUpdateOneRequiredWithoutVotesInput
  canton: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneWithoutVoteInput
  schooltype: NullableStringFieldUpdateOperationsInput
  team: TeamUpdateOneWithoutVoteInput
  verify: NullableStringFieldUpdateOperationsInput
  vote: IntFieldUpdateOperationsInput
  year: NullableIntFieldUpdateOperationsInput
}

input VoteUpdateWithoutSchoolInput {
  ballot: BallotUpdateOneRequiredWithoutVotesInput
  ballotRun: BallotRunUpdateOneWithoutVoteInput
  canton: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  schooltype: NullableStringFieldUpdateOperationsInput
  team: TeamUpdateOneWithoutVoteInput
  verify: NullableStringFieldUpdateOperationsInput
  vote: IntFieldUpdateOperationsInput
  year: NullableIntFieldUpdateOperationsInput
}

input VoteUpdateWithoutTeamInput {
  ballot: BallotUpdateOneRequiredWithoutVotesInput
  ballotRun: BallotRunUpdateOneWithoutVoteInput
  canton: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneWithoutVoteInput
  schooltype: NullableStringFieldUpdateOperationsInput
  verify: NullableStringFieldUpdateOperationsInput
  vote: IntFieldUpdateOperationsInput
  year: NullableIntFieldUpdateOperationsInput
}

input VoteUpdateWithWhereUniqueWithoutBallotInput {
  data: VoteUpdateWithoutBallotInput!
  where: VoteWhereUniqueInput!
}

input VoteUpdateWithWhereUniqueWithoutBallotRunInput {
  data: VoteUpdateWithoutBallotRunInput!
  where: VoteWhereUniqueInput!
}

input VoteUpdateWithWhereUniqueWithoutSchoolInput {
  data: VoteUpdateWithoutSchoolInput!
  where: VoteWhereUniqueInput!
}

input VoteUpdateWithWhereUniqueWithoutTeamInput {
  data: VoteUpdateWithoutTeamInput!
  where: VoteWhereUniqueInput!
}

input VoteUpsertWithWhereUniqueWithoutBallotInput {
  create: VoteCreateWithoutBallotInput!
  update: VoteUpdateWithoutBallotInput!
  where: VoteWhereUniqueInput!
}

input VoteUpsertWithWhereUniqueWithoutBallotRunInput {
  create: VoteCreateWithoutBallotRunInput!
  update: VoteUpdateWithoutBallotRunInput!
  where: VoteWhereUniqueInput!
}

input VoteUpsertWithWhereUniqueWithoutSchoolInput {
  create: VoteCreateWithoutSchoolInput!
  update: VoteUpdateWithoutSchoolInput!
  where: VoteWhereUniqueInput!
}

input VoteUpsertWithWhereUniqueWithoutTeamInput {
  create: VoteCreateWithoutTeamInput!
  update: VoteUpdateWithoutTeamInput!
  where: VoteWhereUniqueInput!
}

input VoteWhereInput {
  AND: [VoteWhereInput!]
  ballot: BallotWhereInput
  ballotId: StringFilter
  ballotRun: BallotRunWhereInput
  ballotRunId: StringNullableFilter
  canton: StringNullableFilter
  id: StringFilter
  NOT: [VoteWhereInput!]
  OR: [VoteWhereInput!]
  school: SchoolWhereInput
  schoolId: StringNullableFilter
  schooltype: StringNullableFilter
  team: TeamWhereInput
  teamId: StringNullableFilter
  verify: StringNullableFilter
  vote: IntFilter
  year: IntNullableFilter
}

input VoteWhereUniqueInput {
  id: String
}

type Work {
  attachments(
    after: AttachmentWhereUniqueInput
    before: AttachmentWhereUniqueInput
    first: Int
    last: Int
  ): [Attachment!]!
  card: String
  data: Json
  id: String!
  reactions(
    after: ReactionWhereUniqueInput
    before: ReactionWhereUniqueInput
    first: Int
    last: Int
  ): [Reaction!]!
  text: String!
  title: String!
  updatedAt: DateTime!
  users(
    after: UserWhereUniqueInput
    before: UserWhereUniqueInput
    first: Int
    last: Int
  ): [User!]!
}

input WorkCreateInput {
  activities: ActivityCreateManyWithoutWorkInput
  attachments: AttachmentCreateManyWithoutWorkInput
  card: String
  createdAt: DateTime
  data: Json
  id: String
  reactions: ReactionCreateManyWithoutWorkInput
  school: SchoolCreateOneWithoutWorkInput!
  team: TeamCreateOneWithoutWorkInput!
  text: String
  title: String
  updatedAt: DateTime
  users: UserCreateManyWithoutWorkInput
  visibility: Visibility
}

input WorkCreateManyWithoutSchoolInput {
  connect: [WorkWhereUniqueInput!]
  connectOrCreate: [WorkCreateOrConnectWithoutschoolInput!]
  create: [WorkCreateWithoutSchoolInput!]
}

input WorkCreateManyWithoutTeamInput {
  connect: [WorkWhereUniqueInput!]
  connectOrCreate: [WorkCreateOrConnectWithoutteamInput!]
  create: [WorkCreateWithoutTeamInput!]
}

input WorkCreateManyWithoutUsersInput {
  connect: [WorkWhereUniqueInput!]
  connectOrCreate: [WorkCreateOrConnectWithoutusersInput!]
  create: [WorkCreateWithoutUsersInput!]
}

input WorkCreateOneWithoutActivitiesInput {
  connect: WorkWhereUniqueInput
  connectOrCreate: WorkCreateOrConnectWithoutactivitiesInput
  create: WorkCreateWithoutActivitiesInput
}

input WorkCreateOneWithoutAttachmentsInput {
  connect: WorkWhereUniqueInput
  connectOrCreate: WorkCreateOrConnectWithoutattachmentsInput
  create: WorkCreateWithoutAttachmentsInput
}

input WorkCreateOneWithoutReactionsInput {
  connect: WorkWhereUniqueInput
  connectOrCreate: WorkCreateOrConnectWithoutreactionsInput
  create: WorkCreateWithoutReactionsInput
}

input WorkCreateOrConnectWithoutactivitiesInput {
  create: WorkCreateWithoutActivitiesInput!
  where: WorkWhereUniqueInput!
}

input WorkCreateOrConnectWithoutattachmentsInput {
  create: WorkCreateWithoutAttachmentsInput!
  where: WorkWhereUniqueInput!
}

input WorkCreateOrConnectWithoutreactionsInput {
  create: WorkCreateWithoutReactionsInput!
  where: WorkWhereUniqueInput!
}

input WorkCreateOrConnectWithoutschoolInput {
  create: WorkCreateWithoutSchoolInput!
  where: WorkWhereUniqueInput!
}

input WorkCreateOrConnectWithoutteamInput {
  create: WorkCreateWithoutTeamInput!
  where: WorkWhereUniqueInput!
}

input WorkCreateOrConnectWithoutusersInput {
  create: WorkCreateWithoutUsersInput!
  where: WorkWhereUniqueInput!
}

input WorkCreateWithoutActivitiesInput {
  attachments: AttachmentCreateManyWithoutWorkInput
  card: String
  createdAt: DateTime
  data: Json
  id: String
  reactions: ReactionCreateManyWithoutWorkInput
  school: SchoolCreateOneWithoutWorkInput!
  team: TeamCreateOneWithoutWorkInput!
  text: String
  title: String
  updatedAt: DateTime
  users: UserCreateManyWithoutWorkInput
  visibility: Visibility
}

input WorkCreateWithoutAttachmentsInput {
  activities: ActivityCreateManyWithoutWorkInput
  card: String
  createdAt: DateTime
  data: Json
  id: String
  reactions: ReactionCreateManyWithoutWorkInput
  school: SchoolCreateOneWithoutWorkInput!
  team: TeamCreateOneWithoutWorkInput!
  text: String
  title: String
  updatedAt: DateTime
  users: UserCreateManyWithoutWorkInput
  visibility: Visibility
}

input WorkCreateWithoutReactionsInput {
  activities: ActivityCreateManyWithoutWorkInput
  attachments: AttachmentCreateManyWithoutWorkInput
  card: String
  createdAt: DateTime
  data: Json
  id: String
  school: SchoolCreateOneWithoutWorkInput!
  team: TeamCreateOneWithoutWorkInput!
  text: String
  title: String
  updatedAt: DateTime
  users: UserCreateManyWithoutWorkInput
  visibility: Visibility
}

input WorkCreateWithoutSchoolInput {
  activities: ActivityCreateManyWithoutWorkInput
  attachments: AttachmentCreateManyWithoutWorkInput
  card: String
  createdAt: DateTime
  data: Json
  id: String
  reactions: ReactionCreateManyWithoutWorkInput
  team: TeamCreateOneWithoutWorkInput!
  text: String
  title: String
  updatedAt: DateTime
  users: UserCreateManyWithoutWorkInput
  visibility: Visibility
}

input WorkCreateWithoutTeamInput {
  activities: ActivityCreateManyWithoutWorkInput
  attachments: AttachmentCreateManyWithoutWorkInput
  card: String
  createdAt: DateTime
  data: Json
  id: String
  reactions: ReactionCreateManyWithoutWorkInput
  school: SchoolCreateOneWithoutWorkInput!
  text: String
  title: String
  updatedAt: DateTime
  users: UserCreateManyWithoutWorkInput
  visibility: Visibility
}

input WorkCreateWithoutUsersInput {
  activities: ActivityCreateManyWithoutWorkInput
  attachments: AttachmentCreateManyWithoutWorkInput
  card: String
  createdAt: DateTime
  data: Json
  id: String
  reactions: ReactionCreateManyWithoutWorkInput
  school: SchoolCreateOneWithoutWorkInput!
  team: TeamCreateOneWithoutWorkInput!
  text: String
  title: String
  updatedAt: DateTime
  visibility: Visibility
}

input WorkListRelationFilter {
  every: WorkWhereInput
  none: WorkWhereInput
  some: WorkWhereInput
}

input WorkOrderByInput {
  card: SortOrder
  createdAt: SortOrder
  data: SortOrder
  id: SortOrder
  schoolId: SortOrder
  teamId: SortOrder
  text: SortOrder
  title: SortOrder
  updatedAt: SortOrder
  visibility: SortOrder
}

input WorkScalarWhereInput {
  AND: [WorkScalarWhereInput!]
  card: StringNullableFilter
  createdAt: DateTimeFilter
  data: JsonNullableFilter
  id: StringFilter
  NOT: [WorkScalarWhereInput!]
  OR: [WorkScalarWhereInput!]
  schoolId: StringFilter
  teamId: StringFilter
  text: StringFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  visibility: EnumVisibilityFilter
}

input WorkUpdateManyMutationInput {
  card: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  data: Json
  id: StringFieldUpdateOperationsInput
  text: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  visibility: EnumVisibilityFieldUpdateOperationsInput
}

input WorkUpdateManyWithoutSchoolInput {
  connect: [WorkWhereUniqueInput!]
  connectOrCreate: [WorkCreateOrConnectWithoutschoolInput!]
  create: [WorkCreateWithoutSchoolInput!]
  delete: [WorkWhereUniqueInput!]
  deleteMany: [WorkScalarWhereInput!]
  disconnect: [WorkWhereUniqueInput!]
  set: [WorkWhereUniqueInput!]
  update: [WorkUpdateWithWhereUniqueWithoutSchoolInput!]
  updateMany: [WorkUpdateManyWithWhereWithoutSchoolInput!]
  upsert: [WorkUpsertWithWhereUniqueWithoutSchoolInput!]
}

input WorkUpdateManyWithoutTeamInput {
  connect: [WorkWhereUniqueInput!]
  connectOrCreate: [WorkCreateOrConnectWithoutteamInput!]
  create: [WorkCreateWithoutTeamInput!]
  delete: [WorkWhereUniqueInput!]
  deleteMany: [WorkScalarWhereInput!]
  disconnect: [WorkWhereUniqueInput!]
  set: [WorkWhereUniqueInput!]
  update: [WorkUpdateWithWhereUniqueWithoutTeamInput!]
  updateMany: [WorkUpdateManyWithWhereWithoutTeamInput!]
  upsert: [WorkUpsertWithWhereUniqueWithoutTeamInput!]
}

input WorkUpdateManyWithoutUsersInput {
  connect: [WorkWhereUniqueInput!]
  connectOrCreate: [WorkCreateOrConnectWithoutusersInput!]
  create: [WorkCreateWithoutUsersInput!]
  delete: [WorkWhereUniqueInput!]
  deleteMany: [WorkScalarWhereInput!]
  disconnect: [WorkWhereUniqueInput!]
  set: [WorkWhereUniqueInput!]
  update: [WorkUpdateWithWhereUniqueWithoutUsersInput!]
  updateMany: [WorkUpdateManyWithWhereWithoutUsersInput!]
  upsert: [WorkUpsertWithWhereUniqueWithoutUsersInput!]
}

input WorkUpdateManyWithWhereWithoutSchoolInput {
  data: WorkUpdateManyMutationInput!
  where: WorkScalarWhereInput!
}

input WorkUpdateManyWithWhereWithoutTeamInput {
  data: WorkUpdateManyMutationInput!
  where: WorkScalarWhereInput!
}

input WorkUpdateManyWithWhereWithoutUsersInput {
  data: WorkUpdateManyMutationInput!
  where: WorkScalarWhereInput!
}

input WorkUpdateOneWithoutActivitiesInput {
  connect: WorkWhereUniqueInput
  connectOrCreate: WorkCreateOrConnectWithoutactivitiesInput
  create: WorkCreateWithoutActivitiesInput
  delete: Boolean
  disconnect: Boolean
  update: WorkUpdateWithoutActivitiesInput
  upsert: WorkUpsertWithoutActivitiesInput
}

input WorkUpdateOneWithoutAttachmentsInput {
  connect: WorkWhereUniqueInput
  connectOrCreate: WorkCreateOrConnectWithoutattachmentsInput
  create: WorkCreateWithoutAttachmentsInput
  delete: Boolean
  disconnect: Boolean
  update: WorkUpdateWithoutAttachmentsInput
  upsert: WorkUpsertWithoutAttachmentsInput
}

input WorkUpdateOneWithoutReactionsInput {
  connect: WorkWhereUniqueInput
  connectOrCreate: WorkCreateOrConnectWithoutreactionsInput
  create: WorkCreateWithoutReactionsInput
  delete: Boolean
  disconnect: Boolean
  update: WorkUpdateWithoutReactionsInput
  upsert: WorkUpsertWithoutReactionsInput
}

input WorkUpdateWithoutActivitiesInput {
  attachments: AttachmentUpdateManyWithoutWorkInput
  card: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  data: Json
  id: StringFieldUpdateOperationsInput
  reactions: ReactionUpdateManyWithoutWorkInput
  school: SchoolUpdateOneRequiredWithoutWorkInput
  team: TeamUpdateOneRequiredWithoutWorkInput
  text: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  users: UserUpdateManyWithoutWorkInput
  visibility: EnumVisibilityFieldUpdateOperationsInput
}

input WorkUpdateWithoutAttachmentsInput {
  activities: ActivityUpdateManyWithoutWorkInput
  card: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  data: Json
  id: StringFieldUpdateOperationsInput
  reactions: ReactionUpdateManyWithoutWorkInput
  school: SchoolUpdateOneRequiredWithoutWorkInput
  team: TeamUpdateOneRequiredWithoutWorkInput
  text: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  users: UserUpdateManyWithoutWorkInput
  visibility: EnumVisibilityFieldUpdateOperationsInput
}

input WorkUpdateWithoutReactionsInput {
  activities: ActivityUpdateManyWithoutWorkInput
  attachments: AttachmentUpdateManyWithoutWorkInput
  card: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  data: Json
  id: StringFieldUpdateOperationsInput
  school: SchoolUpdateOneRequiredWithoutWorkInput
  team: TeamUpdateOneRequiredWithoutWorkInput
  text: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  users: UserUpdateManyWithoutWorkInput
  visibility: EnumVisibilityFieldUpdateOperationsInput
}

input WorkUpdateWithoutSchoolInput {
  activities: ActivityUpdateManyWithoutWorkInput
  attachments: AttachmentUpdateManyWithoutWorkInput
  card: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  data: Json
  id: StringFieldUpdateOperationsInput
  reactions: ReactionUpdateManyWithoutWorkInput
  team: TeamUpdateOneRequiredWithoutWorkInput
  text: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  users: UserUpdateManyWithoutWorkInput
  visibility: EnumVisibilityFieldUpdateOperationsInput
}

input WorkUpdateWithoutTeamInput {
  activities: ActivityUpdateManyWithoutWorkInput
  attachments: AttachmentUpdateManyWithoutWorkInput
  card: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  data: Json
  id: StringFieldUpdateOperationsInput
  reactions: ReactionUpdateManyWithoutWorkInput
  school: SchoolUpdateOneRequiredWithoutWorkInput
  text: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  users: UserUpdateManyWithoutWorkInput
  visibility: EnumVisibilityFieldUpdateOperationsInput
}

input WorkUpdateWithoutUsersInput {
  activities: ActivityUpdateManyWithoutWorkInput
  attachments: AttachmentUpdateManyWithoutWorkInput
  card: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  data: Json
  id: StringFieldUpdateOperationsInput
  reactions: ReactionUpdateManyWithoutWorkInput
  school: SchoolUpdateOneRequiredWithoutWorkInput
  team: TeamUpdateOneRequiredWithoutWorkInput
  text: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  visibility: EnumVisibilityFieldUpdateOperationsInput
}

input WorkUpdateWithWhereUniqueWithoutSchoolInput {
  data: WorkUpdateWithoutSchoolInput!
  where: WorkWhereUniqueInput!
}

input WorkUpdateWithWhereUniqueWithoutTeamInput {
  data: WorkUpdateWithoutTeamInput!
  where: WorkWhereUniqueInput!
}

input WorkUpdateWithWhereUniqueWithoutUsersInput {
  data: WorkUpdateWithoutUsersInput!
  where: WorkWhereUniqueInput!
}

input WorkUpsertWithoutActivitiesInput {
  create: WorkCreateWithoutActivitiesInput!
  update: WorkUpdateWithoutActivitiesInput!
}

input WorkUpsertWithoutAttachmentsInput {
  create: WorkCreateWithoutAttachmentsInput!
  update: WorkUpdateWithoutAttachmentsInput!
}

input WorkUpsertWithoutReactionsInput {
  create: WorkCreateWithoutReactionsInput!
  update: WorkUpdateWithoutReactionsInput!
}

input WorkUpsertWithWhereUniqueWithoutSchoolInput {
  create: WorkCreateWithoutSchoolInput!
  update: WorkUpdateWithoutSchoolInput!
  where: WorkWhereUniqueInput!
}

input WorkUpsertWithWhereUniqueWithoutTeamInput {
  create: WorkCreateWithoutTeamInput!
  update: WorkUpdateWithoutTeamInput!
  where: WorkWhereUniqueInput!
}

input WorkUpsertWithWhereUniqueWithoutUsersInput {
  create: WorkCreateWithoutUsersInput!
  update: WorkUpdateWithoutUsersInput!
  where: WorkWhereUniqueInput!
}

input WorkWhereInput {
  activities: ActivityListRelationFilter
  AND: [WorkWhereInput!]
  attachments: AttachmentListRelationFilter
  card: StringNullableFilter
  createdAt: DateTimeFilter
  data: JsonNullableFilter
  id: StringFilter
  NOT: [WorkWhereInput!]
  OR: [WorkWhereInput!]
  reactions: ReactionListRelationFilter
  school: SchoolWhereInput
  schoolId: StringFilter
  team: TeamWhereInput
  teamId: StringFilter
  text: StringFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  users: UserListRelationFilter
  visibility: EnumVisibilityFilter
}

input WorkWhereUniqueInput {
  id: String
}
